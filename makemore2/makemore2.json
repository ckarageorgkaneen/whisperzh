{"text": " Hi everyone. Today we are continuing our implementation of MakeMore. Now in the last lecture we implemented the bigram language model and we implemented it both using counts and also using a super simple neural network that had a single linear layer. Now this is the Jupyter notebook that we built out last lecture and we saw that the way we approached this is that we looked at only the single previous character and we predicted the distribution for the character that would go next in the sequence and we did that by taking counts and normalizing them into probabilities so that each row here sums to one. Now this is all well and good if you only have one character of previous context and this works and it's approachable. The problem with this model of course is that the predictions from this model are not very good because you only take one character of context so the model didn't produce very name-like sounding things. Now the problem with this approach though is that if we are to take more context into account when predicting the next character in a sequence things quickly blow up and this table the size of this table grows and in fact it grows exponentially with the length of the context because if we only take a single character at a time that's 27 possibilities of context but if we take two characters in the past and try to predict the third one suddenly the number of rows in this matrix you can look at it that way is 27 times 27 so there's 720 possibilities for what could have come in the context. If we take three characters as the context suddenly we have 20 000 possibilities of context and so that's just way too many rows of this matrix it's way too few counts for each possibility and the whole thing just kind of explodes and doesn't work very well. So that's why today we're going to move on to this bullet point here and we're going to implement a multi-layer perceptron model to predict the next character in a sequence and this modeling approach that we're going to adopt follows this paper Benjou et al. 2003. So I have the paper pulled up here now this isn't the very first paper that proposed the use of multi-layer perceptrons or neural networks to predict the next character or token in a sequence but it's definitely one that is was very influential around that time it is very often cited to stand in for this idea and I think it's a very nice write-up and so this is the paper that we're going to first look at and then implement. Now this paper has 19 pages so we don't have time to go into the full detail of this paper but I invite you to read it it's very readable interesting and has a lot of interesting ideas in it as well in the introduction they describe the exact same problem I just described and then to address it they propose the following model now keep in mind that we are building a character level language model so we're working on the level of characters in this paper they have a vocabulary of seventeen thousand possible words and they instead build a word level and language model but we're going to still stick with the characters but we'll take the same modeling approach now what they do is basically they propose to take every one of these words seventeen thousand words and they're going to associate to each word a say thirty dimensional feature vector so every word is now embedded into a thirty dimensional space you can think of it that way so we have seventeen thousand points or vectors in a thirty dimensional space and that's you might imagine that's very crowded that's a lot of points for a very small space now in the beginning these words are initialized completely randomly so they're spread out at random but then we're going to tune these embeddings of these words using that propagation so during the course of training of this neural network these points or vectors are going to basically move around in this space and you might imagine that for example words that have very similar meanings or there are indeed synonyms of each other might end up in a very similar part of the space and conversely words in very different things would go somewhere else in the space now their modeling approach otherwise is identical to ours they are using a multi-layer neural network to predict the next word given the previous words and to train the neural network they are maximizing the log likelihood of the training data just like we did so the modeling approach itself is identical now here they have a concrete example of this intuition why does it work basically suppose that for example you are trying to predict a dog was running in a blank now suppose that the exact phrase a dog was running in a has never occurred in the training data and here you are at sort of test time later when the model is deployed somewhere and it's trying to make a sentence and it's saying a dog was running in a blank and because it's never encountered this exact phrase in the training set you're out of distribution as we say like you don't have fundamentally any reason to suspect um what might come next but this approach allows you to get around that because maybe you didn't see the exact phrase a dog was running in a something but maybe you've seen similar phrases maybe you've seen the phrase the dog was running in a blank and maybe your network has learned that a and the are like frequently are interchangeable with each other and so maybe it took the embedding for a and the embedding for the and it actually put them like nearby each other in the space and so you can transfer knowledge through that embedding and you can generalize in that way similarly the network could know that cats and dogs are animals and they co-occur in lots of very similar contexts and so even though you haven't seen this exact phrase or if you haven't seen exactly walking or running you can through the embedding space transfer knowledge and you can generalize to novel scenarios so let's now scroll down to the diagram of the neural network they have a nice diagram here and in this example we are taking three previous words and we are trying to predict the fourth word in a sequence now these three previous words as i mentioned we have a vocabulary of 17 000 possible words so every one of these basically are the index of the incoming word and because there are 17 000 words this is an integer between 0 and 16 999 now there's also a lookup table that they call c this lookup table is a matrix that is 17 000 by and basically what we're doing here is we're treating this as a lookup table and so every index is plucking out a row of this embedding matrix so that each index is converted to the 30-dimensional vector that corresponds to the embedding vector for that word so here we have the input layer of 30 neurons for three words making up 90 neurons in total and here they're saying that this matrix c is shared across all the words so we're always in a indexing into the same matrix C over and over for each one of these words. Next up is the hidden layer of this neural network. The size of this hidden neural layer of this neural net is a hyperparameter. So we use the word hyperparameter when it's kind of like a design choice up to the designer of the neural net. And this can be as large as you'd like or as small as you'd like. So for example, the size could be 100. And we are going to go over multiple choices of the size of this hidden layer. And we're going to evaluate how well they work. So say there were 100 neurons here. All of them would be fully connected to the 90 words or 90 numbers that make up these three words. So this is a fully connected layer. Then there's a 10-inch long linearity. And then there's this output layer. And because there are 17,000 possible words that could come next, this layer has 17,000 neurons. And all of them are fully connected to all of these neurons. In the hidden layer. So there's a lot of parameters here because there's a lot of words. So most computation is here. This is the expensive layer. Now there are 17,000 logits here. So on top of there, we have the softmax layer, which we've seen in our previous video as well. So every one of these logits is exponentiated. And then everything is normalized to sum to one. So then we have a nice probability distribution for the next word in the sequence. Now, of course, during training, we actually have the label. We have the identity of the next word in the sequence. That word or its index is used to pluck out the probability of that word. And then we are maximizing the probability of that word with respect to the parameters of this neural net. So the parameters are the weights and biases of this output layer, the weights and biases of the hidden layer, and the embedding lookup table C. And all of that is optimized using backpropagation. And these dashed arrows, ignore those. That represents a variation of a neural net that we are not going to explore in this video. So that's the setup, and now let's implement it. Okay, so I started a brand new notebook for this lecture. We are importing PyTorch, and we are importing matplotlib so we can create figures. Then I am reading all the names into a list of words like I did before, and I'm showing the first eight right here. Keep in mind that we have 32,000 in total. These are just the first eight. And then here I'm building out the vocabulary of characters and all the mappings from the characters as strings to integers, and vice versa. Now the first thing we want to do is we want to compile the dataset for the neural network. And I had to rewrite this code. I'll show you in a second what it looks like. So this is the code that I created for the dataset creation. So let me first run it, and then I'll briefly explain how this works. So first we're going to define something called block size. This is going to be the context length of how many characters do we take to predict the next one. So here in this example, we're taking three characters to predict the fourth one. So we have a block size of three. That's the size of the block that supports the prediction. Then here I'm building out the x and y. The x are the input to the neural net, and the y are the labels for each example inside the x. Then I'm erasing over the first five words. I'm doing the first five just for efficiency while we are developing all the code. But then later we are going to come here and erase this so that we use the entire training set. So here I'm printing the word Emma. And here I'm basically showing the examples that we can generate, the five examples that we can generate out of the single sort of word Emma. So when we are given the context of just dot dot dot, the first character in the sequence is E. In this context, the label is M. When the context is this, the label is M, and so forth. And so the way I build this out is first I start with a padded context of just zero tokens. Then I iterate over all the characters. I get the character in the sequence. And I basically build out the array y of this current character and the array x, which stores the current running context. And then here, see, I print everything. And here I crop the context and enter the new character in the sequence. So this is kind of like a rolling window. This is kind of like a rolling window of context. Now we can change the block size here to, for example, four. And in that case, we would be predicting the fifth character given the previous four. Or it can be five. And then it would look like this. Or it can be, say, ten. And then it would look something like this. We're taking ten characters to predict the eleventh one. And we're always padding with dots. So let me bring this back to three just so that we have what we have here in the paper. And finally, the data set right now looks as follows. From these five words, we have created a data set of 32 examples. And each input to the neural net is three integers. And we have a label that is also an integer, y. So x looks like this. These are the individual examples. And then y are the labels. So given this, let's now write a neural network that takes these x's and predicts the y's. First, let's build the embedding. Lookup table C. So we have 27 possible characters. And we're going to embed them in a lower-dimensional space. In the paper, they have 17,000 words. And they embed them in spaces as small-dimensional as 30. So they cram 17,000 words into 30-dimensional space. In our case, we have only 27 possible characters. So let's cram them in something as small as, to start with, for example, a two-dimensional space. So this lookup table will be random numbers. And we'll have 27 rows. And we'll have two columns. Right? So each one of 27 characters will have a two-dimensional embedding. So that's our matrix C of embeddings. In the beginning, initialized randomly. Now before we embed all of the integers inside the input x using this lookup table C, let me actually just try to embed a single individual integer, like, say, 5. So we get a sense of time. So we get a sense of how this works. Now one way this works, of course, is we can just take the C and we can index into row 5. And that gives us a vector, the fifth row of C. And this is one way to do it. The other way that I presented in the previous lecture is actually seemingly different but actually identical. So in the previous lecture, what we did is we took these integers and we used the one-hot encoding to first encode them. So we took that one-hot. We want to encode integer 5. And we want to tell it that the number of classes is 27. So that's the 26-dimensional vector of all zeros except the fifth bit is turned on. Now this actually doesn't work. The reason is that this input actually must be a Torch.tensor. And I'm making some of these errors intentionally just so you get to see some errors and how to fix them. So this must be a tensor, not an int. Fairly straightforward to fix. We get a one-hot vector. The fifth dimension is 1. And the shape of this is 27. And now notice that, just as I briefly alluded to in a previous video, if we take this one-hot vector and we multiply it by C, then what would you expect? Well, number one, first you'd expect an error because expected scalar type long but found float. So a little bit confusing. But the problem here is that one-hot, the data type of it, is long. It's a 64-bit integer. But this is a float tensor. And so PyTorch doesn't know how to multiply an int with a float. And that's why we had to explicitly cast this to a float so that we can multiply. Now the output actually here is identical. And it's identical because of the way the matrix multiplication here works. So we have a one-hot vector multiplying columns of C. And because of all the zeros, they actually end up masking out everything in C except for the fifth row, which is plucked out. And so we actually arrive at the same result. And that tells you that here we can interpret this first piece here, this embedding of the integer. We can either think of it as the integer indexing into a lookup table C, but equivalently we can also think of this little piece here as a first layer of this bigger neural net. This layer here has neurons that have no nonlinearity. There's no tanh. They're just linear neurons. And their weight matrix is C. And then we are encoding integers into one-hot and feeding those into a neural net. And this first layer basically embeds them. So those are two equivalent ways of doing the same thing. We're just going to index because it's much, much faster. And we're going to discard this interpretation of one-hot inputs into neural nets. And we're just going to index integers to create and use embedding tables. Now embedding a single integer like 5 is easy enough. We can simply ask PyTorch to retrieve the fifth row of C or the row index 5 of C. But how do we simultaneously embed all of these 32 by 3 integers stored in array X? Luckily, PyTorch indexing is fairly flexible and quite powerful. So it doesn't just work to ask for a single element 5 like this. You can actually index using lists. So for example, we can get the rows 5, 6, and 7. And this will just work like this. We can index with a list. It doesn't just have to be a list. It can also be actually a tensor of integers. And we can index with that. So this is an integer tensor 5, 6, 7. And this will just work as well. In fact, we can also, for example, repeat row 7 and retrieve it multiple times. And that same index will just get embedded multiple times. So here we are indexing with a one-dimensional tensor of integers. But it turns out that you can also index with multidimensional tensors of integers. Here we have a two-dimensional tensor of integers. So we can simply just do C at X. And this just works. And the shape of this is 32 by 3, which is the original shape. And now for every one of those 32 by 3 integers, we've retrieved the embedding vector here. So basically, we have that as an example. The example index 13, the second dimension, is the integer 1 as an example. And so here, if we do C of X, which gives us that array, and then we index into 13 by 2 of that array, then we get the embedding here. And you can verify that C at 1 which is the integer at that location, is indeed equal to this. You see they're equal. So basically, long story short, PyTorch indexing is awesome. And to embed simultaneously all of the integers in X, we can simply do C of X. And that is our embedding. And that just works. Now let's construct this layer here, the hidden layer. So we have that W1, as I'll call it, are these weights. Which we will initialize randomly. Now the number of inputs to this layer is going to be 3 times 2. Right? Because we have two-dimensional embeddings and we have three of them. So the number of inputs is 6. And the number of neurons in this layer is a variable up to us. Let's use 100 neurons as an example. And then biases will be also initialized randomly as an example. And we just need 100 of them. Now the problem with this is, we can't simply, normally we would take the input, in this case that's embedding, and we'd like to multiply it with these weights. And then we would like to add the bias. This is roughly what we want to do. But the problem here is that these embeddings are stacked up in the dimensions of this input tensor. So this will not work, this matrix multiplication, because this is a shape 32x3x2 and I can't multiply that by 6x100. So somehow we need to concatenate these inputs here together, which apparently does not work. So how do we transform this 32x3x2 into a 32x6 so that we can actually perform this multiplication over here? I'd like to show you that there are usually many ways of implementing what you'd like to do in Torch. And some of them will be faster, better, shorter, etc. And that's because Torch is a very large library, and it's got lots and lots of functions. So if we just go to the documentation and click on Torch, you'll see that my slider here is very tiny. And that's because there are so many functions that you can call on these tensors to transform them, create them, multiply them, add them, perform all kinds of different operations on them. And so this is kind of like the space of possibility, if you will. Now one of the things that you can do is if we can control F for concatenate. And we see that there's a function torch.cat, short for concatenate. And this concatenate is a given sequence of tensors of a given dimension. And these tensors must have the same shape, etc. So we can use the concatenate operation to, in a naive way, concatenate these three embeddings for each input. So in this case, we have emb of the shape. And really what we want to do is we want to retrieve these three parts and concatenate them. So we want to grab all the examples. We want to grab first the zeroth and then index. And then all of this. So this plucks out the 32 by 2 embeddings of just the first word here. And so basically we want this guy, we want the first dimension, and we want the second dimension. And these are the three pieces individually. And then we want to treat this as a sequence and we want to torch.cat on that sequence. torch.cat takes a sequence of tensors and then we have to tell it along which dimension to concatenate. So in this case, all these are 32 by 2 and we want to concatenate not across dimension 0, but across dimension 1. So passing in 1 gives us a result that the shape of this is 32 by 6 exactly as we'd like. So that basically took 32 and squashed these by concatenating them into 32 by 6. Now this is kind of ugly because this code would not generalize if we want to later change the block size. Right now we have three inputs, three words, but what if we had five? Then here we would have to change the code because I'm indexing directly. Well, torch comes to rescue again because there turns out to be a function called unbind and it removes a tensor dimension. So it removes a tensor dimension, returns a tuple of all slices along a given dimension without it. So this is exactly what we need. And basically when we call torch.unbind torch.unbind of m and passing dimension 1 index 1, this gives us a list of a list of tensors exactly equivalent to this. So running this gives us a line 3 and it's exactly this list. So we can call torch.cat on it and the first dimension. And this works. And this shape is the same. But now this is, it doesn't matter if we have block size 3 or 5 or 10, this will just work. So this is one way to do it. But it turns out that in this case, there's actually a significantly better and more efficient way. And this gives me an opportunity to hint at some of the internals of torch.tensor. So let's create an array here of elements from 0 to 17. And the shape of this is just 18. It's a single vector of 18 numbers. It turns out that we can very quickly re-represent this as different sized n-dimensional tensors. We do this by calling a view and we can say that actually this is not a single vector of 18. This is a 2 by 9 tensor. Or alternatively this is a 9 by 2 tensor. Or this is actually a 3 by 3 by 2 tensor. As long as the total number of elements here multiply to be the same, this will just work. And in PyTorch, this operation, calling .view, is extremely efficient. And the reason for that is that in each tensor, there's something called the underlying storage. And the storage is just the numbers always as a one-dimensional vector. And this is how this tensor is represented in the computer memory. It's always a one-dimensional vector. But when we call .view, we are manipulating some of attributes of that tensor that dictate how this one-dimensional sequence is interpreted to be an n-dimensional tensor. And so what's happening here is that no memory is being changed, copied, moved, or created when we call .view. The storage is identical. But when you call .view, some of the internal attributes of the view of this tensor are being manipulated and changed. In particular, there's something called storage offset, strides, and shapes, and those are manipulated so that this one-dimensional sequence of bytes is seen as different n-dimensional arrays. There's a blog post here from Eric called PyTorch Internals, where he goes into some of this with respect to tensor and how the view of a tensor is represented. And this is really just like a logical construct of representing the physical memory. And so this is a pretty good blog post that you can go into. I might also create an entire video on the internals of TorchTensor and how this works. For here, we just note that this is an extremely efficient operation. And if I delete this and come back to our emb, we see that the shape of our emb is 32x3x2, but we can simply ask for PyTorch to view this instead as a 32x6. And the way this gets flattened into a 32x6 array just happens that these two get stacked up in a single row. And so that's basically the concatenation operation that we're after. And you can verify that this actually gives the exact same result as what we had before. So this is an element y equals and you can see that all the elements of these two tensors are the same. And so we get the exact same result. So long story short, we can actually just come here and if we just view this as a 32x6 instead, then this multiplication will work and give us the hidden states that we're after. So if this is h, then h-shape is now the hundred-dimensional activations for every one of our 32 examples. And this gives the desired result. Let me do two things here. Number one, let's not use 32. We can, for example, do something like emb.shape at 0 so that we don't hardcode these numbers. And this would work for any size of this emb. Or alternatively, we can also do negative 1. When we do negative 1, PyTorch will infer what this should be. Because the number of elements must be the same, and we're saying that this is 6, PyTorch will derive that this must be 32. Or whatever else it is, if emb is of different size. The other thing is here, one more thing I'd like to point out is here when we do the concatenation, this actually is much less efficient because this concatenation would create a whole new tensor with a whole new storage, so new memory is being created because there's no way to concatenate tensors just by manipulating the view attributes. So this is inefficient and creates all kinds of new memory. So let me delete this now. We don't need this. And here to calculate h, we want to also dot 10h of this to get our oops to get our h. So these are now numbers between negative 1 and 1 because of the 10h, and we have that the shape is 32 by 100 and that is basically this hidden layer of activations here for every one of our 32 examples. Now there's one more thing I've lost over that we have to be very careful with and that's this plus here. In particular we want to make sure that the broadcasting will do what we like. The shape of this is 32 by 100 and b1's shape is 100. So we see that the addition here will broadcast these two and in particular we have 32 by 100 broadcasting to 100. So broadcasting will align on the right create a fake dimension here so this will become a 1 by 100 row vector and then it will copy vertically for every one of these rows of 32 and do an element-wise addition. So in this case the correcting will be happening because the same bias vector will be added to all the rows of this matrix. So that is correct, that's what we'd like and it's always good practice to just make sure so that you don't shoot yourself in the foot. And finally let's create the final layer here so let's create w2 and b2 the input now is 100 and the output number of neurons will be for us 27 because we have 27 possible characters that come next. So the biases will be 27 as well. So therefore the logits which are the outputs of this neural net are going to be h multiplied by w2 plus b2 logits.shape is 32 by 27 and the logits look good. Now exactly as we saw in the previous video we want to take these logits and we want to first exponentiate them to get our fake counts and then we want to normalize them into a probability. So prob is counts divide and now counts.sum along the first dimension and keep them as true, exactly as in the previous video. And so prob.shape now is 32 by 27 and you'll see that every row of prob sums to 1, so it's normalized. So that gives us the probabilities. Now of course we have the actual letter that comes next and that comes from this array y which we created during the dataset creation. So y is this last piece here which is the identity of the next character in the sequence that we'd like to now predict. So what we'd like to do now is just as in the previous video we'd like to index into the rows of prob and in each row we'd like to pluck out the probability assigned to the correct character as given here. So first we have torch.arrange which is kind of like an iterator over numbers from 0 to 31 and then we can index into prob in the following way prob.in which iterates the rows and then in each row we'd like to grab this column as given by y. So this gives the current probabilities as assigned by this neural network with this setting of its weights to the correct character in the sequence. And you can see here that this looks okay for some of these characters like this is basically 0.2 but it doesn't look very good at all for many other characters like this is 0.0701 probability and so the network thinks that some of these are extremely unlikely. Of course we haven't trained the neural network yet so this will improve and ideally all of these numbers here of course are 1 because then we are correctly predicting the next character. Now just as in the previous video we want to take these probabilities we want to look at the log probability and then we want to look at the average log probability and the negative of it to create the negative log likelihood loss. So the loss here is 17 and this is the loss that we'd like to minimize to get the network to predict the correct character in the sequence. Okay so I rewrote everything here and made it a bit more respectable. So here's our dataset. Here's all the parameters that we defined. I'm now using a generator to make it reproducible. I clustered all the parameters into a single list of parameters so that for example it's easy to count them and see that in total we currently have about 3400 parameters. And this is the forward pass as we developed it and we arrive at a single number here, the loss, that is currently expressing how well this neural network works with the current setting of parameters. Now I would like to make it even more respectable. So in particular see these lines here where we take the logits and we calculate the loss. We're not actually reinventing the wheel here. This is just classification and many people use classification and that's why there is a functional dot cross entropy function in PyTorch to calculate this much more efficiently. So we could just simply call f dot cross entropy and we can pass in the logits and we can pass in the array of targets y and this calculates the exact same loss. So in fact we can simply put this here and erase these three lines and we're going to get the exact same result. Now there are actually many good reasons to prefer f dot cross entropy over rolling your own implementation like this. I did this for educational reasons but you'd never use this in practice. Why is that? Number one, when you use f dot cross entropy, PyTorch will not actually create all these intermediate tensors because these are all new tensors in memory and all this is fairly inefficient to run like this. Instead PyTorch will cluster up all these operations and very often have fused kernels that very efficiently evaluate these expressions that are sort of like clustered mathematical operations. Number two, the backward pass can be made much more efficient and not just because it's a fused kernel but also analytically and mathematically because it's often a very much simpler backward pass to implement. We actually saw this with micrograd. You see here when we implemented 10H the forward pass of this operation to calculate the 10H was actually a fairly complicated mathematical expression. But because it's a clustered mathematical expression when we did the backward pass we didn't individually backward through the x and the 2 times and the minus 1 and the division, etc. We just said it's 1 minus t squared and that's a much simpler mathematical expression. And we were able to do this because we're able to reuse calculations and because we are able to mathematically and analytically derive the derivative and often that expression simplifies mathematically and so there's much less to implement. So not only can it be made more efficient because it runs in a fused kernel but also because the expressions can take a much simpler form mathematically. So that's number one. Number two, under the hood, it's significantly more numerically well behaved. Let me show you an example of how this works. Suppose we have a logits of negative 2, 3, negative 3, 0 and 5. And then we are taking the exponent of it and normalizing it to sum to 1. So when logits take on these values, everything is well and good and we get a nice probability distribution. Now consider what happens when some of these logits take on more extreme values. And that can happen during optimization of a neural network. Let's say some of these numbers grow very negative like say negative 100. Then actually everything will come out fine. We still get probabilities that are well behaved and they sum to 1 and everything is great. But because of the way the X works, if you have very positive logits like say positive 100 in here, you actually start to run into trouble and we get not a number here. And the reason for that is that these counts have an inf here. So if you pass in a very negative number to exp, you just get a very negative, sorry not negative, but very small number. Very near 0 and that's fine. But if you pass in a very positive number, suddenly we run out of range in our floating point number that represents these counts. So basically we are taking e and we are raising it to the power of 100 and that gives us inf because we ran out of dynamic range on this floating point number that is count. And so we cannot pass very large logits through this expression. Now let me reset these numbers to something reasonable. The way PyTorch solved this is that, you see how we have a well-behaved result here? It turns out that because of the normalization here, you can actually offset logits by any arbitrary constant value that you want. So if I add 1 here, you actually get the exact same result. Or if I add 2, or if I subtract 3. Any offset will produce the exact same values. So because negative numbers are okay, but positive numbers can actually overflow this exp, what PyTorch does is it internally calculates the maximum value that occurs in the logits and it subtracts it. So in this case it would subtract 5. And so therefore the greatest number in logits will become 0, and all the other numbers will become some negative numbers. And then the result of this is always well-behaved. So even if we have 100 here previously, not good, but because PyTorch subtracted 100, this will work. And so there's many good reasons to call cross entropy. Number one, the forward pass can be much more efficient, the backward pass can be much more efficient, and also things can be much more numerically well-behaved. Okay, so let's now set up the training of this neural net. We have the forward pass. We don't need these, because then we have that loss is equal to the cross entropy, that's the forward pass. Then we need the backward pass, first we want to set the gradients to be 0. So for p in parameters we want to make sure that p.grad is none, which is the same as setting it to 0 in PyTorch. And then loss.backward to populate those gradients. Once we have the gradients we can do the parameter update. So for p in parameters we want to take all the data, and we want to nudge it learning rate times p.grad. And then we want to repeat this a few times. And let's print the loss here as well. Now this won't suffice and it will create an error, because we also have to go for p in parameters and we have to make sure that p.requiresgrad is set to true in PyTorch. And this should just work. Okay, so we started off with loss of 17 and we're decreasing it. Let's run longer. And you see how the loss increases a lot here. So if we just run for 1000 times we get a very, very low loss. And that means that we're making very good predictions. Now the reason that this is so straightforward right now is because we're only overfitting 32 examples. So we only have 32 examples of the first 5 words, and therefore it's very easy to make this neural net fit only these 32 examples. Because we have 3400 parameters and only 32 examples. So we're doing what's called overfitting a single batch of the data and getting a very low loss in good predictions. But that's just because we have so many parameters for so few examples. So it's easy to make this be very low. Now we're not able to achieve exactly 0. And the reason for that is, we can for example look at logits which are being predicted. And we can look at the max along the first dimension. And in PyTorch max reports both the actual values that take on the maximum number but also the indices of these. And you'll see that the indices are very close to the labels. But in some cases they differ. For example in this very first example the predicted index is 19 but the label is 5. And we're not able to make loss be 0 and fundamentally that's because here the very first or the zeroth index is the example where dot dot dot is supposed to predict E but you see how dot dot dot is also supposed to predict an O and dot dot dot is also supposed to predict an I and then S as well. And so basically E, O, A or S are all possible outcomes in a training set for the exact same input. So we're not able to completely overfit and make the loss be exactly 0. But we're getting very close in the cases where there's a unique input for a unique output. In those cases we do what's called overfit and we basically get the exact same and the exact correct result. So now all we have to do is we just need to make sure that we read in the full dataset and optimize the neural net. Okay so let's swing back up where we created the dataset and we see that here we only use the first 5 words. So let me now erase this and let me erase the print statements otherwise we'd be printing way too much. And so when we process the full dataset of all the words we now have 228,000 examples instead of just 32. So let's now scroll back down the dataset is much larger reinitialize the weights, the same number of parameters, they all require gradients and then let's push this print.loss.item to be here and let's just see how the optimization goes if we run this. Okay so we started with a fairly high loss and then as we're optimizing the loss is coming down. But you'll notice that it takes quite a bit of time for every single iteration. So let's actually address that because we're doing way too much work forwarding and backwarding 228,000 examples. In practice what people usually do is they perform forward and backward pass and update on many batches of the data. So what we will want to do is we want to randomly select some portion of the dataset and that's a many batch and then only forward, backward and update on that little many batch and then we iterate on those many batches. So in pytorch we can for example use torch.randint and we can generate numbers between 0 and 5 and make 32 of them. I believe the size has to be a tuple in pytorch. So we can have a tuple 32 of numbers between 0 and 5 but actually we want x.shape of 0 here and so this creates integers that index into our dataset and there's 32 of them. So if our many batch size is 32 then we can come here and we can first do a many batch construct. So integers that we want to optimize in this single iteration are in the ix and then we want to index into x with ix to only grab those rows. So we're only getting 32 rows of x and therefore embeddings will again be 32 by 3 by 2, not 200,000 by 3 by 2. And then this ix has to be used not just to index into x but also to index into y. And now this should be many batches and this should be much much faster. So it's instant almost. So this way we can run many many examples nearly instantly and decrease the loss much much faster. Now because we're only dealing with many batches the quality of our gradient is lower. So the direction is not as reliable. It's not the actual gradient direction. But the gradient direction is good enough even when it's estimating on only 32 examples that it is useful. And so it's much better to have an approximate gradient and just make more steps than it is to evaluate the exact gradient and take fewer steps. So that's why in practice this works quite well. So let's now continue the optimization. Let me take out this loss.item from here. And place it over here at the end. Okay so we're hovering around 2.5 or so. However this is only the loss for that many batch. So let's actually evaluate the loss here for all of x and for all of y. Just so we have a full sense of exactly how well the model is doing right now. So right now we're at about 2.7 on the entire training set. So let's run the optimization for a while. Okay we're at 2.6 2.57 2.53 Okay. So one issue of course is we don't know if we're stepping too slow or too fast. So at this point one I just guessed it. So one question is how do you determine this learning rate? And how do we gain confidence that we're stepping in the right sort of speed? So let's try to determine a reasonable learning rate. It works as follows. Let's reset our parameters to the initial settings. And now let's print in every step. But let's only do 10 steps or so. Or maybe 100 steps. We want to find a very reasonable search range if you will. So for example if this is very low then we see that the loss is barely decreasing. So that's not that's like too low basically. So let's try this one. Okay so we're decreasing the loss but like not very quickly. So that's a pretty good low range. Now let's reset it again. And now let's try to find the place at which the loss kind of explodes. So maybe at negative one. Okay we see that we're minimizing the loss but you see how it's kind of unstable. It goes up and down quite a bit. So negative one is probably like a fast learning rate. Let's try negative ten. Okay so this isn't optimizing. This is not working very well. So negative ten is way too big. Negative one was already kind of big. So therefore negative one was like somewhat reasonable if I reset. So I'm thinking that the right learning rate is somewhere between negative 0.001 and negative one. So the way we can do this here is we can use Torch.lin space. And we want to basically do something like this. Between zero and one. Oh number of steps is one more parameter that's required. Let's do a thousand steps. This creates one thousand numbers between 0.001 and one. But it doesn't really make sense to step between these linearly. So instead let me create learning rate exponent. And instead of 0.001 this will be a negative three and this will be a zero. And then the actual LRs that we want to search over are going to be ten to the power of LRE. So now what we're doing is we're stepping linearly between the exponents of these learning rates. This is 0.001 and this is one. Because ten to the power of zero is one. And therefore we are spaced exponentially in this interval. So these are the candidate learning rates that we want to sort of like search over roughly. So now what we're going to do is here we are going to run the optimization for one thousand steps. And instead of using a fixed number we are going to use learning rate indexing into here LRs of i and make this i. So basically let me reset this to be again starting from random. Creating these learning rates between negative between 0.001 and one but exponentially stepped. And here what we're doing is we're iterating a thousand times we're going to use the learning rate that's in the beginning very very low. In the beginning it's going to be 0.001 but by the end it's going to be one. And then we're going to step with that learning rate. And now what we want to do is we want to keep track of the learning rates that we used. And we want to look at the losses that resulted. And so here let me track stats. So LRI dot append LR and loss side dot append loss dot item. Okay. So again reset everything and then run. And so basically we started with a very low learning rate and we went all the way up to learning rate of negative one. And now what we can do is we can plt dot plot and we can plot the two. So we can plot the learning rates on the x-axis and the losses we saw on the y-axis. And often you're going to find that your plot looks something like this. Where in the beginning you had very low learning rates basically anything barely anything happened. Then we got to like a nice spot here and then as we increased the learning rate enough we basically started to be kind of unstable here. So a good learning rate turns out to be somewhere around here. And because we have LRI here we actually may want to do not LR not the learning rate but the exponent. So that would be the LRE at i is maybe what we want to log. So let me reset this and redo that calculation. But now on the x-axis we have the exponent of the learning rate. And so we can see that the exponent of the learning rate that is good to use would be sort of like roughly in the value here because here the learning rates are just way too low and then here we expect relatively good learning rates somewhere here and then here things are starting to explode. So somewhere around negative 1 as the exponent of the learning rate is a pretty good setting. And 10 to the negative 1 is 0.1 So 0.1 was actually a fairly good learning rate around here. And that's what we had in the initial setting but that's roughly how you would determine it. And so here now we can take out the tracking of these and we can just simply set LRE to be 10 to the negative 1 or basically otherwise 0.1 as it was before. And now we have some confidence that this is actually a fairly good learning rate. And so now what we can do is we can crank up the iterations we can reset our optimization and we can run for a pretty long time using this learning rate oops and we don't want to print, it's way too much printing so let me again reset and run 10,000 steps. Okay so we're at 2.48 roughly. Let's run another 10,000 steps. 2.46 And now let's do one learning rate decay. What this means is we're going to take our learning rate and we're going to 10x lower it. And so we're at the late stages of training potentially and we may want to go a little bit slower. Let's do one more actually at 0.1 just to see if we're making a dent here. Okay we're still making a dent. And by the way the bigram loss that we achieved last video was 2.45 so we've already surpassed the bigram model. And once I get a sense that this is actually kind of starting to plateau off, people like to do as I mentioned this learning rate decay. So let's try to decay the loss the learning rate I mean. And we achieve it about 2.3 now. Obviously this is janky and not exactly how you would train it in production but this is roughly what you're going through. You first find a decent learning rate using the approach that I showed you. Then you start with that learning rate and you train for a while. And then at the end people like to do a learning rate decay where you decay the learning rate by say a factor of 10 and you do a few more steps and then you get a trained network roughly speaking. So we've achieved 2.3 and dramatically improved on the bigram language model using this simple neural net as described here. Using these 3400 parameters. Now there's something we have to be careful with. I said that we have a better model because we are achieving a lower loss. 2.3 much lower than 2.45 with the bigram model previously. Now that's not exactly true. And the reason that's not true is that this is actually a fairly small model but these models can get larger and larger if you keep adding neurons and parameters. So you can imagine that we don't potentially have a thousand parameters. We could have 10,000 or 100,000 or millions of parameters. And as the capacity of the neural network grows, it becomes more and more capable of overfitting your training set. What that means is that the loss on the training set, on the data that you're training on, will become very very low. As low as zero. But all that the model is doing is memorizing your training set verbatim. So if you take that model and it looks like it's working well, but you try to sample from it, you will basically only get examples exactly as they are in the training set. You won't get any new data. In addition to that, if you try to evaluate the loss on some withheld names or other words, you will actually see that the loss on those can be very high. And so basically it's not a good model. So the standard in the field is to split up your data set into three splits, as we call them. We have the training split, the def split, or the validation split, and the test split. So, training split, test or, sorry, def or validation split, and test split. And typically, this would be say 80% of your data set, this could be 10%, and this 10% roughly. So you have these three splits of the data. Now, these 80% of your training of the data set, the training set, is used to optimize the parameters of the model. Just like we're doing here, using Gradient Descent. These 10% of the examples, the def or validation split, they're used for development over all the hyper parameters of your model. So hyper parameters are, for example, the size of this hidden layer, the size of the embedding. So this is a 100 or a 2 for us, but we could try different things. The strength of the regularization, which we aren't using yet so far. So there's lots of different hyper parameters and settings that go into defining a neural net. And you can try many different variations of them and see whichever one works best on your validation split. So this is used to train the parameters. This is used to train the hyper parameters. And test split is used to evaluate basically the performance of the model at the end. So we're only evaluating the loss on the test split very, very sparingly and very few times. Because every single time you evaluate your test loss and you learn something from it, you are basically starting to also train on the test split. So you are only allowed to test the loss on the test set very, very few times. Otherwise you risk overfitting to it as well as you experiment on your model. So let's also split up our training data into train, dev, and test. And then we are going to train on train and only evaluate on test very, very sparingly. Okay, so here we go. Here is where we took all the words and put them into x and y tensors. So instead, let me create a new cell here and let me just copy paste some code here. Because I don't think it's that complex. But we're going to try to save a little bit of time. I'm converting this to be a function now. And this function takes some list of words and builds the arrays x and y for those words only. And then here I am shuffling up all the words. So these are the input words that we get. We are randomly shuffling them all up. And then we're going to set n1 to be the number of examples. There's 80% of the words and n2 to be 90% of the weight of the words. So basically if length of words is 32,000 n1 is oh sorry, I should probably run this. n1 is 25,000 and n2 is 28,000. And so here we see that I'm calling build data set to build the training set x and y by indexing into up to n1. So we're going to have only 25,000 training words. And then we're going to have roughly n2 minus n1 3,000 validation examples or dev examples and we're going to have length of words basically minus n2 or 3,204 examples here for the test set. So now we have x's and y's for all those three splits. Oh yeah I'm printing their size here inside the function as well. But here we don't have words but these are already the individual examples made from those words. So let's now scroll down here and the data set now for training is more like this. And then when we reset the network when we're training we're only going to be training using x train x train and y train. So that's the only thing we're training on. Let's see where we are on the single batch. Let's now train maybe a few more steps. Training of neural networks can take a while. Usually you don't do it inline. You launch a bunch of jobs and you wait for them to finish. It can take multiple days and so on. Luckily this is a very small network. Okay so the loss is pretty good. Oh we accidentally used a learning rate that is way too low. So let me actually come back. We used the decay learning rate of 0.01. So this will train much faster. And then here when we evaluate let's use the depth set here. x dev and y dev to evaluate the loss. And let's not decay the learning rate and only do say 10,000 examples. And let's evaluate the dev loss once here. Okay so we're getting about 2.3 on dev. And so the neural network when it was training did not see these dev examples. It hasn't optimized on them. And yet when we evaluate the loss on these dev we actually get a pretty decent loss. And so we can also look at what the loss is on all of training set. Oops. And so we see that the training and the dev loss are about equal. So we're not overfitting. This model is not powerful enough to just be purely memorizing the data. And so far we are what's called underfitting. Because the training loss and the dev or test losses are roughly equal. So what we can do is is that our network is very tiny. Very small. And we expect to make performance improvements by scaling up the size of this neural net. So let's do that now. So let's come over here and let's increase the size of the neural net. The easiest way to do this is we can come here to the hidden layer which currently has 100 neurons. And let's just bump this up. So let's do 300 neurons. And then this is also 300 biases. And here we have 300 inputs that initialize our neural net. We now have 10,000 parameters instead of 3,000 parameters. And then we're not using this. And then here what I'd like to do is I'd like to actually keep track of Okay, let's just do this. Let's keep stats again. And here when we're keeping track of the loss let's just also keep track of the steps. I have an eye here. And let's train on 30,000 or rather say Okay, let's try 30,000. And we are at 0.1 And we should be able to run this and optimize the neural net. And then here basically I want to plt.plot the steps against the loss. So these are the x's and the y's. And this is the loss function and how it's being optimized. Now you see that there's quite a bit of thickness to this. And that's because we are optimizing over these mini-batches. And the mini-batches create a little bit of noise in this. Where are we in the def set? We are at 2.5. So we still haven't optimized this neural net very well. And that's probably because we made it bigger. It might take longer for this neural net to converge. And so let's continue training. Yeah, let's just continue training. One possibility is that the batch size is so low that we just have way too much noise in the training. And we may want to increase the batch size so that we have a bit more correct gradient. And we are not thrashing too much. And we can actually optimize more properly. This will now become meaningless because we've re-initialized these. This looks not pleasing right now. But there probably is a tiny improvement but it's so hard to tell. Let's go again. 2.52 Let's try to decrease the learning rate by a factor of 2. Okay, we're at 2.32. Let's continue training. We basically expect to see a lower loss than what we had before. Because now we have a much much bigger model and we were underfitting. So we'd expect that increasing the size of the model should help the neural net. 2.32 Okay, so that's not happening too well. Now one other concern is that even though we've made the 10H layer here or the hidden layer much much bigger it could be that the bottleneck of the network right now are these embeddings that are two-dimensional. It can be that we're just cramming way too many characters into just two dimensions and the neural net is not able to really use that space effectively. And that is sort of like the bottleneck to our network's performance. Okay, 2.23 So just by decreasing the learning rate I was able to make quite a bit of progress. Let's run this one more time. And then evaluate the training and the dev loss. Now one more thing after training that I'd like to do is I'd like to visualize the embedding vectors for these characters before we scale up the embedding size from 2. Because we'd like to make this bottleneck potentially go away. But once I make this greater than 2 we won't be able to visualize them. So here, okay we're at 2.23 and 2.24 so we're not improving much more and maybe the bottleneck now is the character embedding size which is 2. So here I have a bunch of code that will create a figure and then we're going to visualize the embeddings that were trained by the neural net on these characters. Because right now the embedding size is just 2 so we can visualize all the characters with the x and the y coordinates as the two embedding locations for each of these characters. And so here are the x coordinates and the y coordinates which are the columns of C and then for each one I also include the text of the little character. So here what we see is actually kind of interesting. The network has basically learned to separate out the characters and cluster them a little bit so for example you see how the vowels a, e, i, o, u are clustered up here so what that's telling us is that the neural net treats these as very similar because when they feed into the neural net the embedding for all these characters is very similar and so the neural net thinks that they're very similar and kind of like interchangeable if that makes sense. Then the points that are like really far away are for example Q Q is kind of treated as an exception and Q has a very special embedding vector so to speak. Similarly dot, which is a special character is all the way out here and a lot of the other letters are sort of like clustered up here. And so it's kind of interesting that there's a little bit of structure here after the training and it's not definitely not random and these embeddings make sense. So we're now going to scale up the embedding size and won't be able to visualize it directly but we expect that because we're underfitting and we made this layer much bigger and did not sufficiently improve the loss, we're thinking that the constraint to better performance right now could be these embedding vectors. So let's make them bigger. So let's scroll up here and now we don't have two dimensional embeddings, we are going to have say 10 dimensional embeddings for each word. Then this layer will receive 3 times 10 so 30 inputs will go into the hidden layer. Let's also make the hidden layer a bit smaller so instead of 300 let's just do 200 neurons in that hidden layer. So now the total number of elements will be slightly bigger at 11,000. And then here we have to be a bit careful because the learning rate we set to 0.1 here we are hardcoding 6 and obviously if you're working in production you don't want to be hardcoding magic numbers but instead of 6 this should now be 30. And let's run for 50,000 iterations and let me split out the initialization here outside so that when we run this multiple times it's not going to wipe out our loss. In addition to that here let's instead of logging loss.item let's actually log the let's do log10 I believe that's a function of the loss and I'll show you why in a second. Let's optimize this. This basically I'd like to plot the log loss instead of the loss because when you plot the loss many times it can have this hockey stick appearance and log squashes it in. So it just kind of like looks nicer. So the x-axis is step i and the y-axis will be the loss i. And then here this is 30. Ideally we wouldn't be hardcoding these because let's look at the loss. It's again very thick because the mini-batch size is very small but the total loss over the training set is 2.3 and the test or the def set is 2.38 as well. So far so good. Let's try to now decrease the learning rate by a factor of 10 and train for another 50,000 iterations. We'd hope that we would be able to beat 2.32. But again we're just kind of like doing this very haphazardly so I don't actually have confidence that our learning rate is set very well, that our learning rate decay which we just do at random is set very well. And so the optimization here is kind of suspect to be honest and this is not how you would do it typically in production. In production you would create parameters or hyperparameters out of all these settings and then you would run lots of experiments and see whichever ones are working well for you. Okay. So we have 2.17 now and 2.2. So you see how the training and the validation performance are starting to slightly slowly depart. So maybe we're getting the sense that the neural net is getting good enough or that number of parameters is large enough that we are slowly starting to overfit. Let's maybe run one more iteration of this and see where we get. But yeah, basically you would be running lots of experiments and then you are slowly scrutinizing whichever ones give you the best depth performance. And then once you find all the hyperparameters that make your depth performance good you take that model and you evaluate the test set performance a single time. And that's the number that you report in your paper or wherever else you want to talk about and brag about your model. So let's then rerun the plot and rerun the train and dev. And because we're getting lower loss now it is the case that the embedding size of these was holding us back very likely. Okay, so 2.16, 2.19 is what we're roughly getting. So there's many ways to go from here. We can continue tuning the optimization. We can continue for example playing with the size of the neural net. Or we can increase the number of words or characters in our case that we are taking as an input. So instead of just three characters we could be taking more characters as an input. And that could further improve the loss. Okay, so I changed the code slightly so we have here 200,000 steps of the optimization and in the first 100,000 we're using a learning rate of 0.1 and then in the next 100,000 we're using a learning rate of 0.01. This is the loss that I achieve and these are the performance on the training and validation loss. And in particular the best validation loss I've been able to obtain in the last 30 minutes or so is 2.17. So now I invite you to beat this number. And you have quite a few knobs available to you to I think surpass this number. So number one, you can of course change the number of neurons in the hidden layer of this model. You can change the dimensionality of the embedding lookup table. You can change the number of characters that are feeding in as an input as the context into this model. And then of course you can change the details of the optimization. How long are we running? Where is the learning rate? How does it change over time? How does it decay? You can change the batch size and you may be able to actually achieve a much better convergence speed in terms of how many seconds or minutes it takes to train the model and get your result in terms of really good loss. And then of course I actually invite you to read this paper. It is 19 pages but at this point you should actually be able to read a good chunk of this paper and understand a pretty good chunks of it. And this paper also has quite a few ideas for improvements that you can play with. So all of those are knobs available to you and you should be able to beat this number. I'm leaving that as an exercise to the reader and that's it for now and I'll see you next time. Before we wrap up I also wanted to show how you would sample from the model. So we're going to generate 20 samples. At first we begin with all dots so that's the context. And then until we generate the 0th character again we're going to embed the current context using the embedding table C. Now usually here the first dimension was the size of the training set. But here we're only working with a single example that we're generating so this is just dimension 1 just for simplicity. And so this embedding then gets projected into the state. You get the logits. Now we calculate the probabilities. For that you can use f.softmax of logits and that just basically exponentiates the logits and makes them sum to 1. And similar to cross entropy it is careful that there's no overflows. Once we have the probabilities we sample from them using torsh.multinomial to get our next index and then we shift the context window to append index and record it. And then we can just decode all the integers to strings and print them out. And so these are some example samples. And you can see that the model now works much better. So the words here are much more word-like or name-like. So we have things like ham, joes, lila. It's starting to sound a little bit more name-like. So we're definitely making progress but we can still improve on this model quite a lot. Okay sorry, there's some bonus content. I wanted to mention that I want to make these notebooks more accessible. And so I don't want you to have to install Jupyter notebooks and torsh and everything else so I will be sharing a link to a Google Colab and the Google Colab will look like a notebook in your browser. And you can just go to the URL and you'll be able to execute all of the code that you saw in the Google Colab. And so this is me executing the code in this lecture and I shortened it a little bit. But basically you're able to train the exact same network and then plot and sample from the model and everything is ready for you to tinker with the numbers right there in your browser no installation necessary. So I just wanted to point that out and the link to this will be in the video description.", "segments": [{"id": 0, "seek": 0, "start": 0.72, "end": 4.64, "text": " Hi everyone. Today we are continuing our implementation of MakeMore.", "tokens": [50401, 2421, 1518, 13, 2692, 321, 366, 9289, 527, 11420, 295, 4387, 33986, 13, 50597], "temperature": 0.0, "avg_logprob": -0.1283778073836346, "compression_ratio": 1.7896825396825398, "no_speech_prob": 0.008841751143336296}, {"id": 1, "seek": 0, "start": 5.2, "end": 9.84, "text": " Now in the last lecture we implemented the bigram language model and we implemented it both using", "tokens": [50625, 823, 294, 264, 1036, 7991, 321, 12270, 264, 955, 2356, 2856, 2316, 293, 321, 12270, 309, 1293, 1228, 50857], "temperature": 0.0, "avg_logprob": -0.1283778073836346, "compression_ratio": 1.7896825396825398, "no_speech_prob": 0.008841751143336296}, {"id": 2, "seek": 0, "start": 9.84, "end": 15.76, "text": " counts and also using a super simple neural network that had a single linear layer. Now", "tokens": [50857, 14893, 293, 611, 1228, 257, 1687, 2199, 18161, 3209, 300, 632, 257, 2167, 8213, 4583, 13, 823, 51153], "temperature": 0.0, "avg_logprob": -0.1283778073836346, "compression_ratio": 1.7896825396825398, "no_speech_prob": 0.008841751143336296}, {"id": 3, "seek": 0, "start": 16.32, "end": 21.68, "text": " this is the Jupyter notebook that we built out last lecture and we saw that the way we approached", "tokens": [51181, 341, 307, 264, 22125, 88, 391, 21060, 300, 321, 3094, 484, 1036, 7991, 293, 321, 1866, 300, 264, 636, 321, 17247, 51449], "temperature": 0.0, "avg_logprob": -0.1283778073836346, "compression_ratio": 1.7896825396825398, "no_speech_prob": 0.008841751143336296}, {"id": 4, "seek": 0, "start": 21.68, "end": 26.32, "text": " this is that we looked at only the single previous character and we predicted the distribution for", "tokens": [51449, 341, 307, 300, 321, 2956, 412, 787, 264, 2167, 3894, 2517, 293, 321, 19147, 264, 7316, 337, 51681], "temperature": 0.0, "avg_logprob": -0.1283778073836346, "compression_ratio": 1.7896825396825398, "no_speech_prob": 0.008841751143336296}, {"id": 5, "seek": 2632, "start": 26.32, "end": 31.6, "text": " the character that would go next in the sequence and we did that by taking counts and normalizing", "tokens": [50365, 264, 2517, 300, 576, 352, 958, 294, 264, 8310, 293, 321, 630, 300, 538, 1940, 14893, 293, 2710, 3319, 50629], "temperature": 0.0, "avg_logprob": -0.04906843780377589, "compression_ratio": 1.7655677655677655, "no_speech_prob": 0.0001028170227073133}, {"id": 6, "seek": 2632, "start": 31.6, "end": 38.4, "text": " them into probabilities so that each row here sums to one. Now this is all well and good if", "tokens": [50629, 552, 666, 33783, 370, 300, 1184, 5386, 510, 34499, 281, 472, 13, 823, 341, 307, 439, 731, 293, 665, 498, 50969], "temperature": 0.0, "avg_logprob": -0.04906843780377589, "compression_ratio": 1.7655677655677655, "no_speech_prob": 0.0001028170227073133}, {"id": 7, "seek": 2632, "start": 38.4, "end": 44.16, "text": " you only have one character of previous context and this works and it's approachable. The problem", "tokens": [50969, 291, 787, 362, 472, 2517, 295, 3894, 4319, 293, 341, 1985, 293, 309, 311, 3109, 712, 13, 440, 1154, 51257], "temperature": 0.0, "avg_logprob": -0.04906843780377589, "compression_ratio": 1.7655677655677655, "no_speech_prob": 0.0001028170227073133}, {"id": 8, "seek": 2632, "start": 44.16, "end": 49.519999999999996, "text": " with this model of course is that the predictions from this model are not very good because you only", "tokens": [51257, 365, 341, 2316, 295, 1164, 307, 300, 264, 21264, 490, 341, 2316, 366, 406, 588, 665, 570, 291, 787, 51525], "temperature": 0.0, "avg_logprob": -0.04906843780377589, "compression_ratio": 1.7655677655677655, "no_speech_prob": 0.0001028170227073133}, {"id": 9, "seek": 2632, "start": 49.519999999999996, "end": 54.72, "text": " take one character of context so the model didn't produce very name-like sounding things.", "tokens": [51525, 747, 472, 2517, 295, 4319, 370, 264, 2316, 994, 380, 5258, 588, 1315, 12, 4092, 24931, 721, 13, 51785], "temperature": 0.0, "avg_logprob": -0.04906843780377589, "compression_ratio": 1.7655677655677655, "no_speech_prob": 0.0001028170227073133}, {"id": 10, "seek": 2632, "start": 56.08, "end": 56.32, "text": " Now", "tokens": [51853, 823, 51865], "temperature": 0.0, "avg_logprob": -0.04906843780377589, "compression_ratio": 1.7655677655677655, "no_speech_prob": 0.0001028170227073133}, {"id": 11, "seek": 5632, "start": 56.8, "end": 61.2, "text": " the problem with this approach though is that if we are to take more context into account", "tokens": [50389, 264, 1154, 365, 341, 3109, 1673, 307, 300, 498, 321, 366, 281, 747, 544, 4319, 666, 2696, 50609], "temperature": 0.0, "avg_logprob": -0.0839913527170817, "compression_ratio": 1.825938566552901, "no_speech_prob": 0.00030022041755728424}, {"id": 12, "seek": 5632, "start": 61.2, "end": 66.08, "text": " when predicting the next character in a sequence things quickly blow up and this table the size", "tokens": [50609, 562, 32884, 264, 958, 2517, 294, 257, 8310, 721, 2661, 6327, 493, 293, 341, 3199, 264, 2744, 50853], "temperature": 0.0, "avg_logprob": -0.0839913527170817, "compression_ratio": 1.825938566552901, "no_speech_prob": 0.00030022041755728424}, {"id": 13, "seek": 5632, "start": 66.08, "end": 70.48, "text": " of this table grows and in fact it grows exponentially with the length of the context", "tokens": [50853, 295, 341, 3199, 13156, 293, 294, 1186, 309, 13156, 37330, 365, 264, 4641, 295, 264, 4319, 51073], "temperature": 0.0, "avg_logprob": -0.0839913527170817, "compression_ratio": 1.825938566552901, "no_speech_prob": 0.00030022041755728424}, {"id": 14, "seek": 5632, "start": 71.2, "end": 75.28, "text": " because if we only take a single character at a time that's 27 possibilities of context", "tokens": [51109, 570, 498, 321, 787, 747, 257, 2167, 2517, 412, 257, 565, 300, 311, 7634, 12178, 295, 4319, 51313], "temperature": 0.0, "avg_logprob": -0.0839913527170817, "compression_ratio": 1.825938566552901, "no_speech_prob": 0.00030022041755728424}, {"id": 15, "seek": 5632, "start": 75.92, "end": 80.64, "text": " but if we take two characters in the past and try to predict the third one suddenly the number", "tokens": [51345, 457, 498, 321, 747, 732, 4342, 294, 264, 1791, 293, 853, 281, 6069, 264, 2636, 472, 5800, 264, 1230, 51581], "temperature": 0.0, "avg_logprob": -0.0839913527170817, "compression_ratio": 1.825938566552901, "no_speech_prob": 0.00030022041755728424}, {"id": 16, "seek": 5632, "start": 80.64, "end": 86.08, "text": " of rows in this matrix you can look at it that way is 27 times 27 so there's 720", "tokens": [51581, 295, 13241, 294, 341, 8141, 291, 393, 574, 412, 309, 300, 636, 307, 7634, 1413, 7634, 370, 456, 311, 40881, 51853], "temperature": 0.0, "avg_logprob": -0.0839913527170817, "compression_ratio": 1.825938566552901, "no_speech_prob": 0.00030022041755728424}, {"id": 17, "seek": 8608, "start": 86.56, "end": 91.75999999999999, "text": " possibilities for what could have come in the context. If we take three characters as the", "tokens": [50389, 12178, 337, 437, 727, 362, 808, 294, 264, 4319, 13, 759, 321, 747, 1045, 4342, 382, 264, 50649], "temperature": 0.0, "avg_logprob": -0.07764679917665286, "compression_ratio": 1.7433962264150944, "no_speech_prob": 0.000712219683919102}, {"id": 18, "seek": 8608, "start": 91.75999999999999, "end": 99.84, "text": " context suddenly we have 20 000 possibilities of context and so that's just way too many rows", "tokens": [50649, 4319, 5800, 321, 362, 945, 13711, 12178, 295, 4319, 293, 370, 300, 311, 445, 636, 886, 867, 13241, 51053], "temperature": 0.0, "avg_logprob": -0.07764679917665286, "compression_ratio": 1.7433962264150944, "no_speech_prob": 0.000712219683919102}, {"id": 19, "seek": 8608, "start": 99.84, "end": 105.92, "text": " of this matrix it's way too few counts for each possibility and the whole thing just kind of", "tokens": [51053, 295, 341, 8141, 309, 311, 636, 886, 1326, 14893, 337, 1184, 7959, 293, 264, 1379, 551, 445, 733, 295, 51357], "temperature": 0.0, "avg_logprob": -0.07764679917665286, "compression_ratio": 1.7433962264150944, "no_speech_prob": 0.000712219683919102}, {"id": 20, "seek": 8608, "start": 105.92, "end": 111.36, "text": " explodes and doesn't work very well. So that's why today we're going to move on to this bullet", "tokens": [51357, 42610, 293, 1177, 380, 589, 588, 731, 13, 407, 300, 311, 983, 965, 321, 434, 516, 281, 1286, 322, 281, 341, 11632, 51629], "temperature": 0.0, "avg_logprob": -0.07764679917665286, "compression_ratio": 1.7433962264150944, "no_speech_prob": 0.000712219683919102}, {"id": 21, "seek": 8608, "start": 111.36, "end": 116.0, "text": " point here and we're going to implement a multi-layer perceptron model to predict the next", "tokens": [51629, 935, 510, 293, 321, 434, 516, 281, 4445, 257, 4825, 12, 8376, 260, 43276, 2044, 2316, 281, 6069, 264, 958, 51861], "temperature": 0.0, "avg_logprob": -0.07764679917665286, "compression_ratio": 1.7433962264150944, "no_speech_prob": 0.000712219683919102}, {"id": 22, "seek": 11608, "start": 116.72, "end": 121.2, "text": " character in a sequence and this modeling approach that we're going to adopt follows this", "tokens": [50397, 2517, 294, 257, 8310, 293, 341, 15983, 3109, 300, 321, 434, 516, 281, 6878, 10002, 341, 50621], "temperature": 0.0, "avg_logprob": -0.10133719262275986, "compression_ratio": 1.780327868852459, "no_speech_prob": 0.00027966900961473584}, {"id": 23, "seek": 11608, "start": 121.2, "end": 127.6, "text": " paper Benjou et al. 2003. So I have the paper pulled up here now this isn't the very first", "tokens": [50621, 3035, 3964, 73, 263, 1030, 419, 13, 16416, 13, 407, 286, 362, 264, 3035, 7373, 493, 510, 586, 341, 1943, 380, 264, 588, 700, 50941], "temperature": 0.0, "avg_logprob": -0.10133719262275986, "compression_ratio": 1.780327868852459, "no_speech_prob": 0.00027966900961473584}, {"id": 24, "seek": 11608, "start": 127.6, "end": 132.16, "text": " paper that proposed the use of multi-layer perceptrons or neural networks to predict the", "tokens": [50941, 3035, 300, 10348, 264, 764, 295, 4825, 12, 8376, 260, 43276, 13270, 420, 18161, 9590, 281, 6069, 264, 51169], "temperature": 0.0, "avg_logprob": -0.10133719262275986, "compression_ratio": 1.780327868852459, "no_speech_prob": 0.00027966900961473584}, {"id": 25, "seek": 11608, "start": 132.16, "end": 137.12, "text": " next character or token in a sequence but it's definitely one that is was very influential", "tokens": [51169, 958, 2517, 420, 14862, 294, 257, 8310, 457, 309, 311, 2138, 472, 300, 307, 390, 588, 22215, 51417], "temperature": 0.0, "avg_logprob": -0.10133719262275986, "compression_ratio": 1.780327868852459, "no_speech_prob": 0.00027966900961473584}, {"id": 26, "seek": 11608, "start": 137.12, "end": 142.0, "text": " around that time it is very often cited to stand in for this idea and I think it's a very nice", "tokens": [51417, 926, 300, 565, 309, 307, 588, 2049, 30134, 281, 1463, 294, 337, 341, 1558, 293, 286, 519, 309, 311, 257, 588, 1481, 51661], "temperature": 0.0, "avg_logprob": -0.10133719262275986, "compression_ratio": 1.780327868852459, "no_speech_prob": 0.00027966900961473584}, {"id": 27, "seek": 11608, "start": 142.0, "end": 146.0, "text": " write-up and so this is the paper that we're going to first look at and then implement.", "tokens": [51661, 2464, 12, 1010, 293, 370, 341, 307, 264, 3035, 300, 321, 434, 516, 281, 700, 574, 412, 293, 550, 4445, 13, 51861], "temperature": 0.0, "avg_logprob": -0.10133719262275986, "compression_ratio": 1.780327868852459, "no_speech_prob": 0.00027966900961473584}, {"id": 28, "seek": 14608, "start": 146.72, "end": 151.76000000000002, "text": " Now this paper has 19 pages so we don't have time to go into the full detail of this paper but I", "tokens": [50397, 823, 341, 3035, 575, 1294, 7183, 370, 321, 500, 380, 362, 565, 281, 352, 666, 264, 1577, 2607, 295, 341, 3035, 457, 286, 50649], "temperature": 0.0, "avg_logprob": -0.07357214317947137, "compression_ratio": 1.832236842105263, "no_speech_prob": 0.0005623264005407691}, {"id": 29, "seek": 14608, "start": 151.76000000000002, "end": 155.28, "text": " invite you to read it it's very readable interesting and has a lot of interesting", "tokens": [50649, 7980, 291, 281, 1401, 309, 309, 311, 588, 49857, 1880, 293, 575, 257, 688, 295, 1880, 50825], "temperature": 0.0, "avg_logprob": -0.07357214317947137, "compression_ratio": 1.832236842105263, "no_speech_prob": 0.0005623264005407691}, {"id": 30, "seek": 14608, "start": 155.28, "end": 160.48000000000002, "text": " ideas in it as well in the introduction they describe the exact same problem I just described", "tokens": [50825, 3487, 294, 309, 382, 731, 294, 264, 9339, 436, 6786, 264, 1900, 912, 1154, 286, 445, 7619, 51085], "temperature": 0.0, "avg_logprob": -0.07357214317947137, "compression_ratio": 1.832236842105263, "no_speech_prob": 0.0005623264005407691}, {"id": 31, "seek": 14608, "start": 160.48000000000002, "end": 166.64000000000001, "text": " and then to address it they propose the following model now keep in mind that we are building a", "tokens": [51085, 293, 550, 281, 2985, 309, 436, 17421, 264, 3480, 2316, 586, 1066, 294, 1575, 300, 321, 366, 2390, 257, 51393], "temperature": 0.0, "avg_logprob": -0.07357214317947137, "compression_ratio": 1.832236842105263, "no_speech_prob": 0.0005623264005407691}, {"id": 32, "seek": 14608, "start": 166.64000000000001, "end": 171.04000000000002, "text": " character level language model so we're working on the level of characters in this paper they", "tokens": [51393, 2517, 1496, 2856, 2316, 370, 321, 434, 1364, 322, 264, 1496, 295, 4342, 294, 341, 3035, 436, 51613], "temperature": 0.0, "avg_logprob": -0.07357214317947137, "compression_ratio": 1.832236842105263, "no_speech_prob": 0.0005623264005407691}, {"id": 33, "seek": 14608, "start": 171.04000000000002, "end": 176.0, "text": " have a vocabulary of seventeen thousand possible words and they instead build a word level and", "tokens": [51613, 362, 257, 19864, 295, 39532, 4714, 1944, 2283, 293, 436, 2602, 1322, 257, 1349, 1496, 293, 51861], "temperature": 0.0, "avg_logprob": -0.07357214317947137, "compression_ratio": 1.832236842105263, "no_speech_prob": 0.0005623264005407691}, {"id": 34, "seek": 17600, "start": 176.0, "end": 180.0, "text": " language model but we're going to still stick with the characters but we'll take the same modeling", "tokens": [50365, 2856, 2316, 457, 321, 434, 516, 281, 920, 2897, 365, 264, 4342, 457, 321, 603, 747, 264, 912, 15983, 50565], "temperature": 0.0, "avg_logprob": -0.10599911567008141, "compression_ratio": 1.9754098360655739, "no_speech_prob": 0.0003137494495604187}, {"id": 35, "seek": 17600, "start": 180.0, "end": 185.92, "text": " approach now what they do is basically they propose to take every one of these words seventeen", "tokens": [50565, 3109, 586, 437, 436, 360, 307, 1936, 436, 17421, 281, 747, 633, 472, 295, 613, 2283, 39532, 50861], "temperature": 0.0, "avg_logprob": -0.10599911567008141, "compression_ratio": 1.9754098360655739, "no_speech_prob": 0.0003137494495604187}, {"id": 36, "seek": 17600, "start": 185.92, "end": 191.92, "text": " thousand words and they're going to associate to each word a say thirty dimensional feature vector", "tokens": [50861, 4714, 2283, 293, 436, 434, 516, 281, 14644, 281, 1184, 1349, 257, 584, 11790, 18795, 4111, 8062, 51161], "temperature": 0.0, "avg_logprob": -0.10599911567008141, "compression_ratio": 1.9754098360655739, "no_speech_prob": 0.0003137494495604187}, {"id": 37, "seek": 17600, "start": 192.88, "end": 198.72, "text": " so every word is now embedded into a thirty dimensional space you can think of it that way", "tokens": [51209, 370, 633, 1349, 307, 586, 16741, 666, 257, 11790, 18795, 1901, 291, 393, 519, 295, 309, 300, 636, 51501], "temperature": 0.0, "avg_logprob": -0.10599911567008141, "compression_ratio": 1.9754098360655739, "no_speech_prob": 0.0003137494495604187}, {"id": 38, "seek": 17600, "start": 199.36, "end": 205.44, "text": " so we have seventeen thousand points or vectors in a thirty dimensional space and that's you might", "tokens": [51533, 370, 321, 362, 39532, 4714, 2793, 420, 18875, 294, 257, 11790, 18795, 1901, 293, 300, 311, 291, 1062, 51837], "temperature": 0.0, "avg_logprob": -0.10599911567008141, "compression_ratio": 1.9754098360655739, "no_speech_prob": 0.0003137494495604187}, {"id": 39, "seek": 20544, "start": 205.44, "end": 211.04, "text": " imagine that's very crowded that's a lot of points for a very small space now in the beginning these", "tokens": [50365, 3811, 300, 311, 588, 21634, 300, 311, 257, 688, 295, 2793, 337, 257, 588, 1359, 1901, 586, 294, 264, 2863, 613, 50645], "temperature": 0.0, "avg_logprob": -0.05365337864045174, "compression_ratio": 1.9493243243243243, "no_speech_prob": 0.0003205904213245958}, {"id": 40, "seek": 20544, "start": 211.04, "end": 215.52, "text": " words are initialized completely randomly so they're spread out at random but then we're", "tokens": [50645, 2283, 366, 5883, 1602, 2584, 16979, 370, 436, 434, 3974, 484, 412, 4974, 457, 550, 321, 434, 50869], "temperature": 0.0, "avg_logprob": -0.05365337864045174, "compression_ratio": 1.9493243243243243, "no_speech_prob": 0.0003205904213245958}, {"id": 41, "seek": 20544, "start": 215.52, "end": 220.8, "text": " going to tune these embeddings of these words using that propagation so during the course of", "tokens": [50869, 516, 281, 10864, 613, 12240, 29432, 295, 613, 2283, 1228, 300, 38377, 370, 1830, 264, 1164, 295, 51133], "temperature": 0.0, "avg_logprob": -0.05365337864045174, "compression_ratio": 1.9493243243243243, "no_speech_prob": 0.0003205904213245958}, {"id": 42, "seek": 20544, "start": 220.8, "end": 225.12, "text": " training of this neural network these points or vectors are going to basically move around in this", "tokens": [51133, 3097, 295, 341, 18161, 3209, 613, 2793, 420, 18875, 366, 516, 281, 1936, 1286, 926, 294, 341, 51349], "temperature": 0.0, "avg_logprob": -0.05365337864045174, "compression_ratio": 1.9493243243243243, "no_speech_prob": 0.0003205904213245958}, {"id": 43, "seek": 20544, "start": 225.12, "end": 230.32, "text": " space and you might imagine that for example words that have very similar meanings or there are", "tokens": [51349, 1901, 293, 291, 1062, 3811, 300, 337, 1365, 2283, 300, 362, 588, 2531, 28138, 420, 456, 366, 51609], "temperature": 0.0, "avg_logprob": -0.05365337864045174, "compression_ratio": 1.9493243243243243, "no_speech_prob": 0.0003205904213245958}, {"id": 44, "seek": 20544, "start": 230.32, "end": 235.28, "text": " indeed synonyms of each other might end up in a very similar part of the space and conversely words", "tokens": [51609, 6451, 5451, 2526, 2592, 295, 1184, 661, 1062, 917, 493, 294, 257, 588, 2531, 644, 295, 264, 1901, 293, 2615, 736, 2283, 51857], "temperature": 0.0, "avg_logprob": -0.05365337864045174, "compression_ratio": 1.9493243243243243, "no_speech_prob": 0.0003205904213245958}, {"id": 45, "seek": 23544, "start": 235.44, "end": 241.04, "text": " in very different things would go somewhere else in the space now their modeling approach otherwise", "tokens": [50365, 294, 588, 819, 721, 576, 352, 4079, 1646, 294, 264, 1901, 586, 641, 15983, 3109, 5911, 50645], "temperature": 0.0, "avg_logprob": -0.08786065728814753, "compression_ratio": 1.869718309859155, "no_speech_prob": 0.00020489434245973825}, {"id": 46, "seek": 23544, "start": 241.04, "end": 246.07999999999998, "text": " is identical to ours they are using a multi-layer neural network to predict the next word given the", "tokens": [50645, 307, 14800, 281, 11896, 436, 366, 1228, 257, 4825, 12, 8376, 260, 18161, 3209, 281, 6069, 264, 958, 1349, 2212, 264, 50897], "temperature": 0.0, "avg_logprob": -0.08786065728814753, "compression_ratio": 1.869718309859155, "no_speech_prob": 0.00020489434245973825}, {"id": 47, "seek": 23544, "start": 246.07999999999998, "end": 250.72, "text": " previous words and to train the neural network they are maximizing the log likelihood of the", "tokens": [50897, 3894, 2283, 293, 281, 3847, 264, 18161, 3209, 436, 366, 5138, 3319, 264, 3565, 22119, 295, 264, 51129], "temperature": 0.0, "avg_logprob": -0.08786065728814753, "compression_ratio": 1.869718309859155, "no_speech_prob": 0.00020489434245973825}, {"id": 48, "seek": 23544, "start": 250.72, "end": 256.32, "text": " training data just like we did so the modeling approach itself is identical now here they have", "tokens": [51129, 3097, 1412, 445, 411, 321, 630, 370, 264, 15983, 3109, 2564, 307, 14800, 586, 510, 436, 362, 51409], "temperature": 0.0, "avg_logprob": -0.08786065728814753, "compression_ratio": 1.869718309859155, "no_speech_prob": 0.00020489434245973825}, {"id": 49, "seek": 23544, "start": 256.32, "end": 262.0, "text": " a concrete example of this intuition why does it work basically suppose that for example you are", "tokens": [51409, 257, 9859, 1365, 295, 341, 24002, 983, 775, 309, 589, 1936, 7297, 300, 337, 1365, 291, 366, 51693], "temperature": 0.0, "avg_logprob": -0.08786065728814753, "compression_ratio": 1.869718309859155, "no_speech_prob": 0.00020489434245973825}, {"id": 50, "seek": 23544, "start": 262.0, "end": 264.8, "text": " trying to predict a dog was running in a blank", "tokens": [51693, 1382, 281, 6069, 257, 3000, 390, 2614, 294, 257, 8247, 51833], "temperature": 0.0, "avg_logprob": -0.08786065728814753, "compression_ratio": 1.869718309859155, "no_speech_prob": 0.00020489434245973825}, {"id": 51, "seek": 26544, "start": 265.6, "end": 270.96, "text": " now suppose that the exact phrase a dog was running in a has never occurred in the training", "tokens": [50373, 586, 7297, 300, 264, 1900, 9535, 257, 3000, 390, 2614, 294, 257, 575, 1128, 11068, 294, 264, 3097, 50641], "temperature": 0.0, "avg_logprob": -0.036888138605998114, "compression_ratio": 1.8235294117647058, "no_speech_prob": 0.0006070187082514167}, {"id": 52, "seek": 26544, "start": 270.96, "end": 275.76, "text": " data and here you are at sort of test time later when the model is deployed somewhere", "tokens": [50641, 1412, 293, 510, 291, 366, 412, 1333, 295, 1500, 565, 1780, 562, 264, 2316, 307, 17826, 4079, 50881], "temperature": 0.0, "avg_logprob": -0.036888138605998114, "compression_ratio": 1.8235294117647058, "no_speech_prob": 0.0006070187082514167}, {"id": 53, "seek": 26544, "start": 276.32, "end": 281.84, "text": " and it's trying to make a sentence and it's saying a dog was running in a blank and because", "tokens": [50909, 293, 309, 311, 1382, 281, 652, 257, 8174, 293, 309, 311, 1566, 257, 3000, 390, 2614, 294, 257, 8247, 293, 570, 51185], "temperature": 0.0, "avg_logprob": -0.036888138605998114, "compression_ratio": 1.8235294117647058, "no_speech_prob": 0.0006070187082514167}, {"id": 54, "seek": 26544, "start": 281.84, "end": 287.28, "text": " it's never encountered this exact phrase in the training set you're out of distribution as we say", "tokens": [51185, 309, 311, 1128, 20381, 341, 1900, 9535, 294, 264, 3097, 992, 291, 434, 484, 295, 7316, 382, 321, 584, 51457], "temperature": 0.0, "avg_logprob": -0.036888138605998114, "compression_ratio": 1.8235294117647058, "no_speech_prob": 0.0006070187082514167}, {"id": 55, "seek": 26544, "start": 287.28, "end": 295.12, "text": " like you don't have fundamentally any reason to suspect um what might come next but this approach", "tokens": [51457, 411, 291, 500, 380, 362, 17879, 604, 1778, 281, 9091, 1105, 437, 1062, 808, 958, 457, 341, 3109, 51849], "temperature": 0.0, "avg_logprob": -0.036888138605998114, "compression_ratio": 1.8235294117647058, "no_speech_prob": 0.0006070187082514167}, {"id": 56, "seek": 29544, "start": 295.44, "end": 299.92, "text": " allows you to get around that because maybe you didn't see the exact phrase a dog was running in a", "tokens": [50365, 4045, 291, 281, 483, 926, 300, 570, 1310, 291, 994, 380, 536, 264, 1900, 9535, 257, 3000, 390, 2614, 294, 257, 50589], "temperature": 0.0, "avg_logprob": -0.027177761858842506, "compression_ratio": 2.0318021201413425, "no_speech_prob": 0.0015954303089529276}, {"id": 57, "seek": 29544, "start": 299.92, "end": 304.56, "text": " something but maybe you've seen similar phrases maybe you've seen the phrase the dog was running", "tokens": [50589, 746, 457, 1310, 291, 600, 1612, 2531, 20312, 1310, 291, 600, 1612, 264, 9535, 264, 3000, 390, 2614, 50821], "temperature": 0.0, "avg_logprob": -0.027177761858842506, "compression_ratio": 2.0318021201413425, "no_speech_prob": 0.0015954303089529276}, {"id": 58, "seek": 29544, "start": 304.56, "end": 311.04, "text": " in a blank and maybe your network has learned that a and the are like frequently are interchangeable", "tokens": [50821, 294, 257, 8247, 293, 1310, 428, 3209, 575, 3264, 300, 257, 293, 264, 366, 411, 10374, 366, 30358, 712, 51145], "temperature": 0.0, "avg_logprob": -0.027177761858842506, "compression_ratio": 2.0318021201413425, "no_speech_prob": 0.0015954303089529276}, {"id": 59, "seek": 29544, "start": 311.04, "end": 315.6, "text": " with each other and so maybe it took the embedding for a and the embedding for the", "tokens": [51145, 365, 1184, 661, 293, 370, 1310, 309, 1890, 264, 12240, 3584, 337, 257, 293, 264, 12240, 3584, 337, 264, 51373], "temperature": 0.0, "avg_logprob": -0.027177761858842506, "compression_ratio": 2.0318021201413425, "no_speech_prob": 0.0015954303089529276}, {"id": 60, "seek": 29544, "start": 315.6, "end": 320.15999999999997, "text": " and it actually put them like nearby each other in the space and so you can transfer knowledge", "tokens": [51373, 293, 309, 767, 829, 552, 411, 11184, 1184, 661, 294, 264, 1901, 293, 370, 291, 393, 5003, 3601, 51601], "temperature": 0.0, "avg_logprob": -0.027177761858842506, "compression_ratio": 2.0318021201413425, "no_speech_prob": 0.0015954303089529276}, {"id": 61, "seek": 29544, "start": 320.15999999999997, "end": 325.36, "text": " through that embedding and you can generalize in that way similarly the network could know that cats", "tokens": [51601, 807, 300, 12240, 3584, 293, 291, 393, 2674, 1125, 294, 300, 636, 14138, 264, 3209, 727, 458, 300, 11111, 51861], "temperature": 0.0, "avg_logprob": -0.027177761858842506, "compression_ratio": 2.0318021201413425, "no_speech_prob": 0.0015954303089529276}, {"id": 62, "seek": 32544, "start": 325.44, "end": 330.56, "text": " and dogs are animals and they co-occur in lots of very similar contexts and so even though you", "tokens": [50365, 293, 7197, 366, 4882, 293, 436, 598, 12, 905, 14112, 294, 3195, 295, 588, 2531, 30628, 293, 370, 754, 1673, 291, 50621], "temperature": 0.0, "avg_logprob": -0.02240942784075467, "compression_ratio": 1.8037735849056604, "no_speech_prob": 0.00031999070779420435}, {"id": 63, "seek": 32544, "start": 330.56, "end": 336.32, "text": " haven't seen this exact phrase or if you haven't seen exactly walking or running you can through", "tokens": [50621, 2378, 380, 1612, 341, 1900, 9535, 420, 498, 291, 2378, 380, 1612, 2293, 4494, 420, 2614, 291, 393, 807, 50909], "temperature": 0.0, "avg_logprob": -0.02240942784075467, "compression_ratio": 1.8037735849056604, "no_speech_prob": 0.00031999070779420435}, {"id": 64, "seek": 32544, "start": 336.32, "end": 342.88, "text": " the embedding space transfer knowledge and you can generalize to novel scenarios so let's now scroll", "tokens": [50909, 264, 12240, 3584, 1901, 5003, 3601, 293, 291, 393, 2674, 1125, 281, 7613, 15077, 370, 718, 311, 586, 11369, 51237], "temperature": 0.0, "avg_logprob": -0.02240942784075467, "compression_ratio": 1.8037735849056604, "no_speech_prob": 0.00031999070779420435}, {"id": 65, "seek": 32544, "start": 342.88, "end": 348.72, "text": " down to the diagram of the neural network they have a nice diagram here and in this example", "tokens": [51237, 760, 281, 264, 10686, 295, 264, 18161, 3209, 436, 362, 257, 1481, 10686, 510, 293, 294, 341, 1365, 51529], "temperature": 0.0, "avg_logprob": -0.02240942784075467, "compression_ratio": 1.8037735849056604, "no_speech_prob": 0.00031999070779420435}, {"id": 66, "seek": 32544, "start": 348.72, "end": 354.72, "text": " we are taking three previous words and we are trying to predict the fourth word in a sequence", "tokens": [51529, 321, 366, 1940, 1045, 3894, 2283, 293, 321, 366, 1382, 281, 6069, 264, 6409, 1349, 294, 257, 8310, 51829], "temperature": 0.0, "avg_logprob": -0.02240942784075467, "compression_ratio": 1.8037735849056604, "no_speech_prob": 0.00031999070779420435}, {"id": 67, "seek": 35544, "start": 356.0, "end": 360.71999999999997, "text": " now these three previous words as i mentioned we have a vocabulary of 17 000", "tokens": [50393, 586, 613, 1045, 3894, 2283, 382, 741, 2835, 321, 362, 257, 19864, 295, 3282, 13711, 50629], "temperature": 0.0, "avg_logprob": -0.08659919500350952, "compression_ratio": 1.6666666666666667, "no_speech_prob": 0.001046661869622767}, {"id": 68, "seek": 35544, "start": 361.6, "end": 368.48, "text": " possible words so every one of these basically are the index of the incoming word", "tokens": [50673, 1944, 2283, 370, 633, 472, 295, 613, 1936, 366, 264, 8186, 295, 264, 22341, 1349, 51017], "temperature": 0.0, "avg_logprob": -0.08659919500350952, "compression_ratio": 1.6666666666666667, "no_speech_prob": 0.001046661869622767}, {"id": 69, "seek": 35544, "start": 369.36, "end": 375.92, "text": " and because there are 17 000 words this is an integer between 0 and 16 999", "tokens": [51061, 293, 570, 456, 366, 3282, 13711, 2283, 341, 307, 364, 24922, 1296, 1958, 293, 3165, 1722, 8494, 51389], "temperature": 0.0, "avg_logprob": -0.08659919500350952, "compression_ratio": 1.6666666666666667, "no_speech_prob": 0.001046661869622767}, {"id": 70, "seek": 35544, "start": 377.28, "end": 384.4, "text": " now there's also a lookup table that they call c this lookup table is a matrix that is 17 000 by", "tokens": [51457, 586, 456, 311, 611, 257, 574, 1010, 3199, 300, 436, 818, 269, 341, 574, 1010, 3199, 307, 257, 8141, 300, 307, 3282, 13711, 538, 51813], "temperature": 0.0, "avg_logprob": -0.08659919500350952, "compression_ratio": 1.6666666666666667, "no_speech_prob": 0.001046661869622767}, {"id": 71, "seek": 38544, "start": 385.84, "end": 389.6, "text": " and basically what we're doing here is we're treating this as a lookup table", "tokens": [50385, 293, 1936, 437, 321, 434, 884, 510, 307, 321, 434, 15083, 341, 382, 257, 574, 1010, 3199, 50573], "temperature": 0.6000000000000001, "avg_logprob": -0.08589181445893787, "compression_ratio": 1.8089430894308942, "no_speech_prob": 0.0010709476191550493}, {"id": 72, "seek": 38544, "start": 389.6, "end": 397.04, "text": " and so every index is plucking out a row of this embedding matrix so that each index is converted", "tokens": [50573, 293, 370, 633, 8186, 307, 499, 33260, 484, 257, 5386, 295, 341, 12240, 3584, 8141, 370, 300, 1184, 8186, 307, 16424, 50945], "temperature": 0.6000000000000001, "avg_logprob": -0.08589181445893787, "compression_ratio": 1.8089430894308942, "no_speech_prob": 0.0010709476191550493}, {"id": 73, "seek": 38544, "start": 397.04, "end": 401.6, "text": " to the 30-dimensional vector that corresponds to the embedding vector for that word", "tokens": [50945, 281, 264, 2217, 12, 18759, 8062, 300, 23249, 281, 264, 12240, 3584, 8062, 337, 300, 1349, 51173], "temperature": 0.6000000000000001, "avg_logprob": -0.08589181445893787, "compression_ratio": 1.8089430894308942, "no_speech_prob": 0.0010709476191550493}, {"id": 74, "seek": 38544, "start": 402.88, "end": 409.68, "text": " so here we have the input layer of 30 neurons for three words making up 90 neurons in total", "tokens": [51237, 370, 510, 321, 362, 264, 4846, 4583, 295, 2217, 22027, 337, 1045, 2283, 1455, 493, 4289, 22027, 294, 3217, 51577], "temperature": 0.6000000000000001, "avg_logprob": -0.08589181445893787, "compression_ratio": 1.8089430894308942, "no_speech_prob": 0.0010709476191550493}, {"id": 75, "seek": 38544, "start": 410.64, "end": 415.28, "text": " and here they're saying that this matrix c is shared across all the words so we're always in a", "tokens": [51625, 293, 510, 436, 434, 1566, 300, 341, 8141, 269, 307, 5507, 2108, 439, 264, 2283, 370, 321, 434, 1009, 294, 257, 51857], "temperature": 0.6000000000000001, "avg_logprob": -0.08589181445893787, "compression_ratio": 1.8089430894308942, "no_speech_prob": 0.0010709476191550493}, {"id": 76, "seek": 41544, "start": 415.44, "end": 422.98, "text": " indexing into the same matrix C over and over for each one of these words. Next up is the hidden", "tokens": [50365, 8186, 278, 666, 264, 912, 8141, 383, 670, 293, 670, 337, 1184, 472, 295, 613, 2283, 13, 3087, 493, 307, 264, 7633, 50742], "temperature": 0.0, "avg_logprob": -0.0415286071716793, "compression_ratio": 1.8494208494208495, "no_speech_prob": 0.006338063627481461}, {"id": 77, "seek": 41544, "start": 422.98, "end": 428.08, "text": " layer of this neural network. The size of this hidden neural layer of this neural net is a", "tokens": [50742, 4583, 295, 341, 18161, 3209, 13, 440, 2744, 295, 341, 7633, 18161, 4583, 295, 341, 18161, 2533, 307, 257, 50997], "temperature": 0.0, "avg_logprob": -0.0415286071716793, "compression_ratio": 1.8494208494208495, "no_speech_prob": 0.006338063627481461}, {"id": 78, "seek": 41544, "start": 428.08, "end": 432.4, "text": " hyperparameter. So we use the word hyperparameter when it's kind of like a design choice up to the", "tokens": [50997, 9848, 2181, 335, 2398, 13, 407, 321, 764, 264, 1349, 9848, 2181, 335, 2398, 562, 309, 311, 733, 295, 411, 257, 1715, 3922, 493, 281, 264, 51213], "temperature": 0.0, "avg_logprob": -0.0415286071716793, "compression_ratio": 1.8494208494208495, "no_speech_prob": 0.006338063627481461}, {"id": 79, "seek": 41544, "start": 432.4, "end": 436.68, "text": " designer of the neural net. And this can be as large as you'd like or as small as you'd like.", "tokens": [51213, 11795, 295, 264, 18161, 2533, 13, 400, 341, 393, 312, 382, 2416, 382, 291, 1116, 411, 420, 382, 1359, 382, 291, 1116, 411, 13, 51427], "temperature": 0.0, "avg_logprob": -0.0415286071716793, "compression_ratio": 1.8494208494208495, "no_speech_prob": 0.006338063627481461}, {"id": 80, "seek": 41544, "start": 436.84, "end": 442.34, "text": " So for example, the size could be 100. And we are going to go over multiple choices of the size of", "tokens": [51435, 407, 337, 1365, 11, 264, 2744, 727, 312, 2319, 13, 400, 321, 366, 516, 281, 352, 670, 3866, 7994, 295, 264, 2744, 295, 51710], "temperature": 0.0, "avg_logprob": -0.0415286071716793, "compression_ratio": 1.8494208494208495, "no_speech_prob": 0.006338063627481461}, {"id": 81, "seek": 44234, "start": 442.34, "end": 447.4, "text": " this hidden layer. And we're going to evaluate how well they work. So say there were 100 neurons", "tokens": [50365, 341, 7633, 4583, 13, 400, 321, 434, 516, 281, 13059, 577, 731, 436, 589, 13, 407, 584, 456, 645, 2319, 22027, 50618], "temperature": 0.0, "avg_logprob": -0.04485680914332724, "compression_ratio": 1.8503937007874016, "no_speech_prob": 0.00018190967966802418}, {"id": 82, "seek": 44234, "start": 447.4, "end": 454.73999999999995, "text": " here. All of them would be fully connected to the 90 words or 90 numbers that make up these three", "tokens": [50618, 510, 13, 1057, 295, 552, 576, 312, 4498, 4582, 281, 264, 4289, 2283, 420, 4289, 3547, 300, 652, 493, 613, 1045, 50985], "temperature": 0.0, "avg_logprob": -0.04485680914332724, "compression_ratio": 1.8503937007874016, "no_speech_prob": 0.00018190967966802418}, {"id": 83, "seek": 44234, "start": 454.73999999999995, "end": 460.65999999999997, "text": " words. So this is a fully connected layer. Then there's a 10-inch long linearity. And then there's", "tokens": [50985, 2283, 13, 407, 341, 307, 257, 4498, 4582, 4583, 13, 1396, 456, 311, 257, 1266, 12, 12415, 938, 8213, 507, 13, 400, 550, 456, 311, 51281], "temperature": 0.0, "avg_logprob": -0.04485680914332724, "compression_ratio": 1.8503937007874016, "no_speech_prob": 0.00018190967966802418}, {"id": 84, "seek": 44234, "start": 460.65999999999997, "end": 466.44, "text": " this output layer. And because there are 17,000 possible words that could come next, this layer", "tokens": [51281, 341, 5598, 4583, 13, 400, 570, 456, 366, 3282, 11, 1360, 1944, 2283, 300, 727, 808, 958, 11, 341, 4583, 51570], "temperature": 0.0, "avg_logprob": -0.04485680914332724, "compression_ratio": 1.8503937007874016, "no_speech_prob": 0.00018190967966802418}, {"id": 85, "seek": 44234, "start": 466.44, "end": 472.14, "text": " has 17,000 neurons. And all of them are fully connected to all of these neurons.", "tokens": [51570, 575, 3282, 11, 1360, 22027, 13, 400, 439, 295, 552, 366, 4498, 4582, 281, 439, 295, 613, 22027, 13, 51855], "temperature": 0.0, "avg_logprob": -0.04485680914332724, "compression_ratio": 1.8503937007874016, "no_speech_prob": 0.00018190967966802418}, {"id": 86, "seek": 47234, "start": 472.34, "end": 478.7, "text": " In the hidden layer. So there's a lot of parameters here because there's a lot of words. So most", "tokens": [50365, 682, 264, 7633, 4583, 13, 407, 456, 311, 257, 688, 295, 9834, 510, 570, 456, 311, 257, 688, 295, 2283, 13, 407, 881, 50683], "temperature": 0.0, "avg_logprob": -0.05508054025245435, "compression_ratio": 1.734006734006734, "no_speech_prob": 3.827136606560089e-05}, {"id": 87, "seek": 47234, "start": 478.7, "end": 485.15999999999997, "text": " computation is here. This is the expensive layer. Now there are 17,000 logits here. So on top of", "tokens": [50683, 24903, 307, 510, 13, 639, 307, 264, 5124, 4583, 13, 823, 456, 366, 3282, 11, 1360, 3565, 1208, 510, 13, 407, 322, 1192, 295, 51006], "temperature": 0.0, "avg_logprob": -0.05508054025245435, "compression_ratio": 1.734006734006734, "no_speech_prob": 3.827136606560089e-05}, {"id": 88, "seek": 47234, "start": 485.15999999999997, "end": 489.9, "text": " there, we have the softmax layer, which we've seen in our previous video as well. So every one of", "tokens": [51006, 456, 11, 321, 362, 264, 2787, 41167, 4583, 11, 597, 321, 600, 1612, 294, 527, 3894, 960, 382, 731, 13, 407, 633, 472, 295, 51243], "temperature": 0.0, "avg_logprob": -0.05508054025245435, "compression_ratio": 1.734006734006734, "no_speech_prob": 3.827136606560089e-05}, {"id": 89, "seek": 47234, "start": 489.9, "end": 495.17999999999995, "text": " these logits is exponentiated. And then everything is normalized to sum to one. So then we have a", "tokens": [51243, 613, 3565, 1208, 307, 12680, 23012, 770, 13, 400, 550, 1203, 307, 48704, 281, 2408, 281, 472, 13, 407, 550, 321, 362, 257, 51507], "temperature": 0.0, "avg_logprob": -0.05508054025245435, "compression_ratio": 1.734006734006734, "no_speech_prob": 3.827136606560089e-05}, {"id": 90, "seek": 47234, "start": 495.17999999999995, "end": 501.12, "text": " nice probability distribution for the next word in the sequence. Now, of course, during training,", "tokens": [51507, 1481, 8482, 7316, 337, 264, 958, 1349, 294, 264, 8310, 13, 823, 11, 295, 1164, 11, 1830, 3097, 11, 51804], "temperature": 0.0, "avg_logprob": -0.05508054025245435, "compression_ratio": 1.734006734006734, "no_speech_prob": 3.827136606560089e-05}, {"id": 91, "seek": 47234, "start": 501.12, "end": 502.32, "text": " we actually have the label.", "tokens": [51804, 321, 767, 362, 264, 7645, 13, 51864], "temperature": 0.0, "avg_logprob": -0.05508054025245435, "compression_ratio": 1.734006734006734, "no_speech_prob": 3.827136606560089e-05}, {"id": 92, "seek": 50234, "start": 502.34, "end": 509.9, "text": " We have the identity of the next word in the sequence. That word or its index is used to pluck", "tokens": [50365, 492, 362, 264, 6575, 295, 264, 958, 1349, 294, 264, 8310, 13, 663, 1349, 420, 1080, 8186, 307, 1143, 281, 41514, 50743], "temperature": 0.0, "avg_logprob": -0.07055069391544048, "compression_ratio": 1.8864628820960698, "no_speech_prob": 0.0006918121944181621}, {"id": 93, "seek": 50234, "start": 509.9, "end": 515.98, "text": " out the probability of that word. And then we are maximizing the probability of that word", "tokens": [50743, 484, 264, 8482, 295, 300, 1349, 13, 400, 550, 321, 366, 5138, 3319, 264, 8482, 295, 300, 1349, 51047], "temperature": 0.0, "avg_logprob": -0.07055069391544048, "compression_ratio": 1.8864628820960698, "no_speech_prob": 0.0006918121944181621}, {"id": 94, "seek": 50234, "start": 515.98, "end": 521.78, "text": " with respect to the parameters of this neural net. So the parameters are the weights and biases", "tokens": [51047, 365, 3104, 281, 264, 9834, 295, 341, 18161, 2533, 13, 407, 264, 9834, 366, 264, 17443, 293, 32152, 51337], "temperature": 0.0, "avg_logprob": -0.07055069391544048, "compression_ratio": 1.8864628820960698, "no_speech_prob": 0.0006918121944181621}, {"id": 95, "seek": 50234, "start": 521.78, "end": 528.36, "text": " of this output layer, the weights and biases of the hidden layer, and the embedding lookup table", "tokens": [51337, 295, 341, 5598, 4583, 11, 264, 17443, 293, 32152, 295, 264, 7633, 4583, 11, 293, 264, 12240, 3584, 574, 1010, 3199, 51666], "temperature": 0.0, "avg_logprob": -0.07055069391544048, "compression_ratio": 1.8864628820960698, "no_speech_prob": 0.0006918121944181621}, {"id": 96, "seek": 50234, "start": 528.36, "end": 531.36, "text": " C. And all of that is optimized using backpropagation.", "tokens": [51666, 383, 13, 400, 439, 295, 300, 307, 26941, 1228, 646, 79, 1513, 559, 399, 13, 51816], "temperature": 0.0, "avg_logprob": -0.07055069391544048, "compression_ratio": 1.8864628820960698, "no_speech_prob": 0.0006918121944181621}, {"id": 97, "seek": 53234, "start": 532.34, "end": 537.98, "text": " And these dashed arrows, ignore those. That represents a variation of a neural net that we are", "tokens": [50365, 400, 613, 8240, 292, 19669, 11, 11200, 729, 13, 663, 8855, 257, 12990, 295, 257, 18161, 2533, 300, 321, 366, 50647], "temperature": 0.0, "avg_logprob": -0.12575295059769243, "compression_ratio": 1.6623376623376624, "no_speech_prob": 0.0020830819848924875}, {"id": 98, "seek": 53234, "start": 537.98, "end": 542.94, "text": " not going to explore in this video. So that's the setup, and now let's implement it. Okay, so I", "tokens": [50647, 406, 516, 281, 6839, 294, 341, 960, 13, 407, 300, 311, 264, 8657, 11, 293, 586, 718, 311, 4445, 309, 13, 1033, 11, 370, 286, 50895], "temperature": 0.0, "avg_logprob": -0.12575295059769243, "compression_ratio": 1.6623376623376624, "no_speech_prob": 0.0020830819848924875}, {"id": 99, "seek": 53234, "start": 542.94, "end": 548.22, "text": " started a brand new notebook for this lecture. We are importing PyTorch, and we are importing", "tokens": [50895, 1409, 257, 3360, 777, 21060, 337, 341, 7991, 13, 492, 366, 43866, 9953, 51, 284, 339, 11, 293, 321, 366, 43866, 51159], "temperature": 0.0, "avg_logprob": -0.12575295059769243, "compression_ratio": 1.6623376623376624, "no_speech_prob": 0.0020830819848924875}, {"id": 100, "seek": 53234, "start": 548.22, "end": 554.22, "text": " matplotlib so we can create figures. Then I am reading all the names into a list of words like", "tokens": [51159, 3803, 564, 310, 38270, 370, 321, 393, 1884, 9624, 13, 1396, 286, 669, 3760, 439, 264, 5288, 666, 257, 1329, 295, 2283, 411, 51459], "temperature": 0.0, "avg_logprob": -0.12575295059769243, "compression_ratio": 1.6623376623376624, "no_speech_prob": 0.0020830819848924875}, {"id": 101, "seek": 53234, "start": 554.22, "end": 561.02, "text": " I did before, and I'm showing the first eight right here. Keep in mind that we have 32,000 in total.", "tokens": [51459, 286, 630, 949, 11, 293, 286, 478, 4099, 264, 700, 3180, 558, 510, 13, 5527, 294, 1575, 300, 321, 362, 8858, 11, 1360, 294, 3217, 13, 51799], "temperature": 0.0, "avg_logprob": -0.12575295059769243, "compression_ratio": 1.6623376623376624, "no_speech_prob": 0.0020830819848924875}, {"id": 102, "seek": 53234, "start": 561.02, "end": 562.02, "text": " These are just the first eight.", "tokens": [51799, 1981, 366, 445, 264, 700, 3180, 13, 51849], "temperature": 0.0, "avg_logprob": -0.12575295059769243, "compression_ratio": 1.6623376623376624, "no_speech_prob": 0.0020830819848924875}, {"id": 103, "seek": 56234, "start": 562.34, "end": 570.34, "text": " And then here I'm building out the vocabulary of characters and all the mappings from the characters as strings to integers, and vice versa.", "tokens": [50365, 400, 550, 510, 286, 478, 2390, 484, 264, 19864, 295, 4342, 293, 439, 264, 463, 28968, 490, 264, 4342, 382, 13985, 281, 41674, 11, 293, 11964, 25650, 13, 50765], "temperature": 0.0, "avg_logprob": -0.1720174994350465, "compression_ratio": 1.7275862068965517, "no_speech_prob": 0.007233853451907635}, {"id": 104, "seek": 56234, "start": 570.34, "end": 575.34, "text": " Now the first thing we want to do is we want to compile the dataset for the neural network.", "tokens": [50765, 823, 264, 700, 551, 321, 528, 281, 360, 307, 321, 528, 281, 31413, 264, 28872, 337, 264, 18161, 3209, 13, 51015], "temperature": 0.0, "avg_logprob": -0.1720174994350465, "compression_ratio": 1.7275862068965517, "no_speech_prob": 0.007233853451907635}, {"id": 105, "seek": 56234, "start": 575.34, "end": 579.34, "text": " And I had to rewrite this code. I'll show you in a second what it looks like.", "tokens": [51015, 400, 286, 632, 281, 28132, 341, 3089, 13, 286, 603, 855, 291, 294, 257, 1150, 437, 309, 1542, 411, 13, 51215], "temperature": 0.0, "avg_logprob": -0.1720174994350465, "compression_ratio": 1.7275862068965517, "no_speech_prob": 0.007233853451907635}, {"id": 106, "seek": 56234, "start": 579.34, "end": 587.34, "text": " So this is the code that I created for the dataset creation. So let me first run it, and then I'll briefly explain how this works.", "tokens": [51215, 407, 341, 307, 264, 3089, 300, 286, 2942, 337, 264, 28872, 8016, 13, 407, 718, 385, 700, 1190, 309, 11, 293, 550, 286, 603, 10515, 2903, 577, 341, 1985, 13, 51615], "temperature": 0.0, "avg_logprob": -0.1720174994350465, "compression_ratio": 1.7275862068965517, "no_speech_prob": 0.007233853451907635}, {"id": 107, "seek": 56234, "start": 587.34, "end": 591.34, "text": " So first we're going to define something called block size.", "tokens": [51615, 407, 700, 321, 434, 516, 281, 6964, 746, 1219, 3461, 2744, 13, 51815], "temperature": 0.0, "avg_logprob": -0.1720174994350465, "compression_ratio": 1.7275862068965517, "no_speech_prob": 0.007233853451907635}, {"id": 108, "seek": 59234, "start": 592.34, "end": 596.34, "text": " This is going to be the context length of how many characters do we take to predict the next one.", "tokens": [50365, 639, 307, 516, 281, 312, 264, 4319, 4641, 295, 577, 867, 4342, 360, 321, 747, 281, 6069, 264, 958, 472, 13, 50565], "temperature": 0.0, "avg_logprob": -0.13237562561035157, "compression_ratio": 1.878787878787879, "no_speech_prob": 0.007620266638696194}, {"id": 109, "seek": 59234, "start": 596.34, "end": 600.34, "text": " So here in this example, we're taking three characters to predict the fourth one.", "tokens": [50565, 407, 510, 294, 341, 1365, 11, 321, 434, 1940, 1045, 4342, 281, 6069, 264, 6409, 472, 13, 50765], "temperature": 0.0, "avg_logprob": -0.13237562561035157, "compression_ratio": 1.878787878787879, "no_speech_prob": 0.007620266638696194}, {"id": 110, "seek": 59234, "start": 600.34, "end": 605.34, "text": " So we have a block size of three. That's the size of the block that supports the prediction.", "tokens": [50765, 407, 321, 362, 257, 3461, 2744, 295, 1045, 13, 663, 311, 264, 2744, 295, 264, 3461, 300, 9346, 264, 17630, 13, 51015], "temperature": 0.0, "avg_logprob": -0.13237562561035157, "compression_ratio": 1.878787878787879, "no_speech_prob": 0.007620266638696194}, {"id": 111, "seek": 59234, "start": 605.34, "end": 616.34, "text": " Then here I'm building out the x and y. The x are the input to the neural net, and the y are the labels for each example inside the x.", "tokens": [51015, 1396, 510, 286, 478, 2390, 484, 264, 2031, 293, 288, 13, 440, 2031, 366, 264, 4846, 281, 264, 18161, 2533, 11, 293, 264, 288, 366, 264, 16949, 337, 1184, 1365, 1854, 264, 2031, 13, 51565], "temperature": 0.0, "avg_logprob": -0.13237562561035157, "compression_ratio": 1.878787878787879, "no_speech_prob": 0.007620266638696194}, {"id": 112, "seek": 59234, "start": 616.34, "end": 621.34, "text": " Then I'm erasing over the first five words. I'm doing the first five just for efficiency", "tokens": [51565, 1396, 286, 478, 1189, 3349, 670, 264, 700, 1732, 2283, 13, 286, 478, 884, 264, 700, 1732, 445, 337, 10493, 51815], "temperature": 0.0, "avg_logprob": -0.13237562561035157, "compression_ratio": 1.878787878787879, "no_speech_prob": 0.007620266638696194}, {"id": 113, "seek": 62134, "start": 621.34, "end": 628.34, "text": " while we are developing all the code. But then later we are going to come here and erase this so that we use the entire training set.", "tokens": [50365, 1339, 321, 366, 6416, 439, 264, 3089, 13, 583, 550, 1780, 321, 366, 516, 281, 808, 510, 293, 23525, 341, 370, 300, 321, 764, 264, 2302, 3097, 992, 13, 50715], "temperature": 0.0, "avg_logprob": -0.11340674487027255, "compression_ratio": 1.8410041841004183, "no_speech_prob": 0.00021932007803115994}, {"id": 114, "seek": 62134, "start": 628.34, "end": 635.34, "text": " So here I'm printing the word Emma. And here I'm basically showing the examples that we can generate,", "tokens": [50715, 407, 510, 286, 478, 14699, 264, 1349, 17124, 13, 400, 510, 286, 478, 1936, 4099, 264, 5110, 300, 321, 393, 8460, 11, 51065], "temperature": 0.0, "avg_logprob": -0.11340674487027255, "compression_ratio": 1.8410041841004183, "no_speech_prob": 0.00021932007803115994}, {"id": 115, "seek": 62134, "start": 635.34, "end": 640.34, "text": " the five examples that we can generate out of the single sort of word Emma.", "tokens": [51065, 264, 1732, 5110, 300, 321, 393, 8460, 484, 295, 264, 2167, 1333, 295, 1349, 17124, 13, 51315], "temperature": 0.0, "avg_logprob": -0.11340674487027255, "compression_ratio": 1.8410041841004183, "no_speech_prob": 0.00021932007803115994}, {"id": 116, "seek": 62134, "start": 640.34, "end": 647.34, "text": " So when we are given the context of just dot dot dot, the first character in the sequence is E.", "tokens": [51315, 407, 562, 321, 366, 2212, 264, 4319, 295, 445, 5893, 5893, 5893, 11, 264, 700, 2517, 294, 264, 8310, 307, 462, 13, 51665], "temperature": 0.0, "avg_logprob": -0.11340674487027255, "compression_ratio": 1.8410041841004183, "no_speech_prob": 0.00021932007803115994}, {"id": 117, "seek": 62134, "start": 647.34, "end": 650.34, "text": " In this context, the label is M.", "tokens": [51665, 682, 341, 4319, 11, 264, 7645, 307, 376, 13, 51815], "temperature": 0.0, "avg_logprob": -0.11340674487027255, "compression_ratio": 1.8410041841004183, "no_speech_prob": 0.00021932007803115994}, {"id": 118, "seek": 65034, "start": 650.34, "end": 654.34, "text": " When the context is this, the label is M, and so forth.", "tokens": [50365, 1133, 264, 4319, 307, 341, 11, 264, 7645, 307, 376, 11, 293, 370, 5220, 13, 50565], "temperature": 0.0, "avg_logprob": -0.08358858489990234, "compression_ratio": 1.8592592592592592, "no_speech_prob": 0.0004895589081570506}, {"id": 119, "seek": 65034, "start": 654.34, "end": 659.34, "text": " And so the way I build this out is first I start with a padded context of just zero tokens.", "tokens": [50565, 400, 370, 264, 636, 286, 1322, 341, 484, 307, 700, 286, 722, 365, 257, 6887, 9207, 4319, 295, 445, 4018, 22667, 13, 50815], "temperature": 0.0, "avg_logprob": -0.08358858489990234, "compression_ratio": 1.8592592592592592, "no_speech_prob": 0.0004895589081570506}, {"id": 120, "seek": 65034, "start": 659.34, "end": 664.34, "text": " Then I iterate over all the characters. I get the character in the sequence.", "tokens": [50815, 1396, 286, 44497, 670, 439, 264, 4342, 13, 286, 483, 264, 2517, 294, 264, 8310, 13, 51065], "temperature": 0.0, "avg_logprob": -0.08358858489990234, "compression_ratio": 1.8592592592592592, "no_speech_prob": 0.0004895589081570506}, {"id": 121, "seek": 65034, "start": 664.34, "end": 671.34, "text": " And I basically build out the array y of this current character and the array x, which stores the current running context.", "tokens": [51065, 400, 286, 1936, 1322, 484, 264, 10225, 288, 295, 341, 2190, 2517, 293, 264, 10225, 2031, 11, 597, 9512, 264, 2190, 2614, 4319, 13, 51415], "temperature": 0.0, "avg_logprob": -0.08358858489990234, "compression_ratio": 1.8592592592592592, "no_speech_prob": 0.0004895589081570506}, {"id": 122, "seek": 65034, "start": 671.34, "end": 678.34, "text": " And then here, see, I print everything. And here I crop the context and enter the new character in the sequence.", "tokens": [51415, 400, 550, 510, 11, 536, 11, 286, 4482, 1203, 13, 400, 510, 286, 9086, 264, 4319, 293, 3242, 264, 777, 2517, 294, 264, 8310, 13, 51765], "temperature": 0.0, "avg_logprob": -0.08358858489990234, "compression_ratio": 1.8592592592592592, "no_speech_prob": 0.0004895589081570506}, {"id": 123, "seek": 65034, "start": 678.34, "end": 680.34, "text": " So this is kind of like a rolling window.", "tokens": [51765, 407, 341, 307, 733, 295, 411, 257, 9439, 4910, 13, 51865], "temperature": 0.0, "avg_logprob": -0.08358858489990234, "compression_ratio": 1.8592592592592592, "no_speech_prob": 0.0004895589081570506}, {"id": 124, "seek": 68034, "start": 680.34, "end": 683.34, "text": " This is kind of like a rolling window of context.", "tokens": [50365, 639, 307, 733, 295, 411, 257, 9439, 4910, 295, 4319, 13, 50515], "temperature": 0.0, "avg_logprob": -0.13939775739397323, "compression_ratio": 1.7978339350180506, "no_speech_prob": 0.0009573270217515528}, {"id": 125, "seek": 68034, "start": 683.34, "end": 686.34, "text": " Now we can change the block size here to, for example, four.", "tokens": [50515, 823, 321, 393, 1319, 264, 3461, 2744, 510, 281, 11, 337, 1365, 11, 1451, 13, 50665], "temperature": 0.0, "avg_logprob": -0.13939775739397323, "compression_ratio": 1.7978339350180506, "no_speech_prob": 0.0009573270217515528}, {"id": 126, "seek": 68034, "start": 686.34, "end": 690.34, "text": " And in that case, we would be predicting the fifth character given the previous four.", "tokens": [50665, 400, 294, 300, 1389, 11, 321, 576, 312, 32884, 264, 9266, 2517, 2212, 264, 3894, 1451, 13, 50865], "temperature": 0.0, "avg_logprob": -0.13939775739397323, "compression_ratio": 1.7978339350180506, "no_speech_prob": 0.0009573270217515528}, {"id": 127, "seek": 68034, "start": 690.34, "end": 694.34, "text": " Or it can be five. And then it would look like this.", "tokens": [50865, 1610, 309, 393, 312, 1732, 13, 400, 550, 309, 576, 574, 411, 341, 13, 51065], "temperature": 0.0, "avg_logprob": -0.13939775739397323, "compression_ratio": 1.7978339350180506, "no_speech_prob": 0.0009573270217515528}, {"id": 128, "seek": 68034, "start": 694.34, "end": 698.34, "text": " Or it can be, say, ten. And then it would look something like this.", "tokens": [51065, 1610, 309, 393, 312, 11, 584, 11, 2064, 13, 400, 550, 309, 576, 574, 746, 411, 341, 13, 51265], "temperature": 0.0, "avg_logprob": -0.13939775739397323, "compression_ratio": 1.7978339350180506, "no_speech_prob": 0.0009573270217515528}, {"id": 129, "seek": 68034, "start": 698.34, "end": 701.34, "text": " We're taking ten characters to predict the eleventh one.", "tokens": [51265, 492, 434, 1940, 2064, 4342, 281, 6069, 264, 1118, 37439, 472, 13, 51415], "temperature": 0.0, "avg_logprob": -0.13939775739397323, "compression_ratio": 1.7978339350180506, "no_speech_prob": 0.0009573270217515528}, {"id": 130, "seek": 68034, "start": 701.34, "end": 703.34, "text": " And we're always padding with dots.", "tokens": [51415, 400, 321, 434, 1009, 39562, 365, 15026, 13, 51515], "temperature": 0.0, "avg_logprob": -0.13939775739397323, "compression_ratio": 1.7978339350180506, "no_speech_prob": 0.0009573270217515528}, {"id": 131, "seek": 68034, "start": 703.34, "end": 709.34, "text": " So let me bring this back to three just so that we have what we have here in the paper.", "tokens": [51515, 407, 718, 385, 1565, 341, 646, 281, 1045, 445, 370, 300, 321, 362, 437, 321, 362, 510, 294, 264, 3035, 13, 51815], "temperature": 0.0, "avg_logprob": -0.13939775739397323, "compression_ratio": 1.7978339350180506, "no_speech_prob": 0.0009573270217515528}, {"id": 132, "seek": 71034, "start": 710.34, "end": 713.34, "text": " And finally, the data set right now looks as follows.", "tokens": [50365, 400, 2721, 11, 264, 1412, 992, 558, 586, 1542, 382, 10002, 13, 50515], "temperature": 0.0, "avg_logprob": -0.09065589431888801, "compression_ratio": 1.7258064516129032, "no_speech_prob": 0.001513775554485619}, {"id": 133, "seek": 71034, "start": 713.34, "end": 717.34, "text": " From these five words, we have created a data set of 32 examples.", "tokens": [50515, 3358, 613, 1732, 2283, 11, 321, 362, 2942, 257, 1412, 992, 295, 8858, 5110, 13, 50715], "temperature": 0.0, "avg_logprob": -0.09065589431888801, "compression_ratio": 1.7258064516129032, "no_speech_prob": 0.001513775554485619}, {"id": 134, "seek": 71034, "start": 717.34, "end": 721.34, "text": " And each input to the neural net is three integers.", "tokens": [50715, 400, 1184, 4846, 281, 264, 18161, 2533, 307, 1045, 41674, 13, 50915], "temperature": 0.0, "avg_logprob": -0.09065589431888801, "compression_ratio": 1.7258064516129032, "no_speech_prob": 0.001513775554485619}, {"id": 135, "seek": 71034, "start": 721.34, "end": 724.34, "text": " And we have a label that is also an integer, y.", "tokens": [50915, 400, 321, 362, 257, 7645, 300, 307, 611, 364, 24922, 11, 288, 13, 51065], "temperature": 0.0, "avg_logprob": -0.09065589431888801, "compression_ratio": 1.7258064516129032, "no_speech_prob": 0.001513775554485619}, {"id": 136, "seek": 71034, "start": 724.34, "end": 726.34, "text": " So x looks like this.", "tokens": [51065, 407, 2031, 1542, 411, 341, 13, 51165], "temperature": 0.0, "avg_logprob": -0.09065589431888801, "compression_ratio": 1.7258064516129032, "no_speech_prob": 0.001513775554485619}, {"id": 137, "seek": 71034, "start": 726.34, "end": 728.34, "text": " These are the individual examples.", "tokens": [51165, 1981, 366, 264, 2609, 5110, 13, 51265], "temperature": 0.0, "avg_logprob": -0.09065589431888801, "compression_ratio": 1.7258064516129032, "no_speech_prob": 0.001513775554485619}, {"id": 138, "seek": 71034, "start": 728.34, "end": 732.34, "text": " And then y are the labels.", "tokens": [51265, 400, 550, 288, 366, 264, 16949, 13, 51465], "temperature": 0.0, "avg_logprob": -0.09065589431888801, "compression_ratio": 1.7258064516129032, "no_speech_prob": 0.001513775554485619}, {"id": 139, "seek": 71034, "start": 732.34, "end": 738.34, "text": " So given this, let's now write a neural network that takes these x's and predicts the y's.", "tokens": [51465, 407, 2212, 341, 11, 718, 311, 586, 2464, 257, 18161, 3209, 300, 2516, 613, 2031, 311, 293, 6069, 82, 264, 288, 311, 13, 51765], "temperature": 0.0, "avg_logprob": -0.09065589431888801, "compression_ratio": 1.7258064516129032, "no_speech_prob": 0.001513775554485619}, {"id": 140, "seek": 71034, "start": 738.34, "end": 739.34, "text": " First, let's build the embedding.", "tokens": [51765, 2386, 11, 718, 311, 1322, 264, 12240, 3584, 13, 51815], "temperature": 0.0, "avg_logprob": -0.09065589431888801, "compression_ratio": 1.7258064516129032, "no_speech_prob": 0.001513775554485619}, {"id": 141, "seek": 74034, "start": 740.34, "end": 743.34, "text": " Lookup table C.", "tokens": [50365, 2053, 1010, 3199, 383, 13, 50515], "temperature": 0.0, "avg_logprob": -0.06688150509383327, "compression_ratio": 1.8677685950413223, "no_speech_prob": 0.0006750216125510633}, {"id": 142, "seek": 74034, "start": 743.34, "end": 745.34, "text": " So we have 27 possible characters.", "tokens": [50515, 407, 321, 362, 7634, 1944, 4342, 13, 50615], "temperature": 0.0, "avg_logprob": -0.06688150509383327, "compression_ratio": 1.8677685950413223, "no_speech_prob": 0.0006750216125510633}, {"id": 143, "seek": 74034, "start": 745.34, "end": 748.34, "text": " And we're going to embed them in a lower-dimensional space.", "tokens": [50615, 400, 321, 434, 516, 281, 12240, 552, 294, 257, 3126, 12, 18759, 1901, 13, 50765], "temperature": 0.0, "avg_logprob": -0.06688150509383327, "compression_ratio": 1.8677685950413223, "no_speech_prob": 0.0006750216125510633}, {"id": 144, "seek": 74034, "start": 748.34, "end": 751.34, "text": " In the paper, they have 17,000 words.", "tokens": [50765, 682, 264, 3035, 11, 436, 362, 3282, 11, 1360, 2283, 13, 50915], "temperature": 0.0, "avg_logprob": -0.06688150509383327, "compression_ratio": 1.8677685950413223, "no_speech_prob": 0.0006750216125510633}, {"id": 145, "seek": 74034, "start": 751.34, "end": 755.34, "text": " And they embed them in spaces as small-dimensional as 30.", "tokens": [50915, 400, 436, 12240, 552, 294, 7673, 382, 1359, 12, 18759, 382, 2217, 13, 51115], "temperature": 0.0, "avg_logprob": -0.06688150509383327, "compression_ratio": 1.8677685950413223, "no_speech_prob": 0.0006750216125510633}, {"id": 146, "seek": 74034, "start": 755.34, "end": 760.34, "text": " So they cram 17,000 words into 30-dimensional space.", "tokens": [51115, 407, 436, 941, 335, 3282, 11, 1360, 2283, 666, 2217, 12, 18759, 1901, 13, 51365], "temperature": 0.0, "avg_logprob": -0.06688150509383327, "compression_ratio": 1.8677685950413223, "no_speech_prob": 0.0006750216125510633}, {"id": 147, "seek": 74034, "start": 760.34, "end": 763.34, "text": " In our case, we have only 27 possible characters.", "tokens": [51365, 682, 527, 1389, 11, 321, 362, 787, 7634, 1944, 4342, 13, 51515], "temperature": 0.0, "avg_logprob": -0.06688150509383327, "compression_ratio": 1.8677685950413223, "no_speech_prob": 0.0006750216125510633}, {"id": 148, "seek": 74034, "start": 763.34, "end": 768.34, "text": " So let's cram them in something as small as, to start with, for example, a two-dimensional space.", "tokens": [51515, 407, 718, 311, 941, 335, 552, 294, 746, 382, 1359, 382, 11, 281, 722, 365, 11, 337, 1365, 11, 257, 732, 12, 18759, 1901, 13, 51765], "temperature": 0.0, "avg_logprob": -0.06688150509383327, "compression_ratio": 1.8677685950413223, "no_speech_prob": 0.0006750216125510633}, {"id": 149, "seek": 74034, "start": 768.34, "end": 770.34, "text": " So this lookup table will be random numbers.", "tokens": [51765, 407, 341, 574, 1010, 3199, 486, 312, 4974, 3547, 13, 51865], "temperature": 0.0, "avg_logprob": -0.06688150509383327, "compression_ratio": 1.8677685950413223, "no_speech_prob": 0.0006750216125510633}, {"id": 150, "seek": 77034, "start": 770.34, "end": 773.34, "text": " And we'll have 27 rows.", "tokens": [50365, 400, 321, 603, 362, 7634, 13241, 13, 50515], "temperature": 0.0, "avg_logprob": -0.12284814265736363, "compression_ratio": 1.5634920634920635, "no_speech_prob": 0.00040659646037966013}, {"id": 151, "seek": 77034, "start": 773.34, "end": 775.34, "text": " And we'll have two columns.", "tokens": [50515, 400, 321, 603, 362, 732, 13766, 13, 50615], "temperature": 0.0, "avg_logprob": -0.12284814265736363, "compression_ratio": 1.5634920634920635, "no_speech_prob": 0.00040659646037966013}, {"id": 152, "seek": 77034, "start": 775.34, "end": 776.34, "text": " Right?", "tokens": [50615, 1779, 30, 50665], "temperature": 0.0, "avg_logprob": -0.12284814265736363, "compression_ratio": 1.5634920634920635, "no_speech_prob": 0.00040659646037966013}, {"id": 153, "seek": 77034, "start": 776.34, "end": 781.34, "text": " So each one of 27 characters will have a two-dimensional embedding.", "tokens": [50665, 407, 1184, 472, 295, 7634, 4342, 486, 362, 257, 732, 12, 18759, 12240, 3584, 13, 50915], "temperature": 0.0, "avg_logprob": -0.12284814265736363, "compression_ratio": 1.5634920634920635, "no_speech_prob": 0.00040659646037966013}, {"id": 154, "seek": 77034, "start": 781.34, "end": 785.34, "text": " So that's our matrix C of embeddings.", "tokens": [50915, 407, 300, 311, 527, 8141, 383, 295, 12240, 29432, 13, 51115], "temperature": 0.0, "avg_logprob": -0.12284814265736363, "compression_ratio": 1.5634920634920635, "no_speech_prob": 0.00040659646037966013}, {"id": 155, "seek": 77034, "start": 785.34, "end": 787.34, "text": " In the beginning, initialized randomly.", "tokens": [51115, 682, 264, 2863, 11, 5883, 1602, 16979, 13, 51215], "temperature": 0.0, "avg_logprob": -0.12284814265736363, "compression_ratio": 1.5634920634920635, "no_speech_prob": 0.00040659646037966013}, {"id": 156, "seek": 77034, "start": 787.34, "end": 793.34, "text": " Now before we embed all of the integers inside the input x using this lookup table C,", "tokens": [51215, 823, 949, 321, 12240, 439, 295, 264, 41674, 1854, 264, 4846, 2031, 1228, 341, 574, 1010, 3199, 383, 11, 51515], "temperature": 0.0, "avg_logprob": -0.12284814265736363, "compression_ratio": 1.5634920634920635, "no_speech_prob": 0.00040659646037966013}, {"id": 157, "seek": 77034, "start": 793.34, "end": 798.34, "text": " let me actually just try to embed a single individual integer, like, say, 5.", "tokens": [51515, 718, 385, 767, 445, 853, 281, 12240, 257, 2167, 2609, 24922, 11, 411, 11, 584, 11, 1025, 13, 51765], "temperature": 0.0, "avg_logprob": -0.12284814265736363, "compression_ratio": 1.5634920634920635, "no_speech_prob": 0.00040659646037966013}, {"id": 158, "seek": 77034, "start": 798.34, "end": 799.34, "text": " So we get a sense of time.", "tokens": [51765, 407, 321, 483, 257, 2020, 295, 565, 13, 51815], "temperature": 0.0, "avg_logprob": -0.12284814265736363, "compression_ratio": 1.5634920634920635, "no_speech_prob": 0.00040659646037966013}, {"id": 159, "seek": 79934, "start": 799.34, "end": 801.34, "text": " So we get a sense of how this works.", "tokens": [50365, 407, 321, 483, 257, 2020, 295, 577, 341, 1985, 13, 50465], "temperature": 0.0, "avg_logprob": -0.07528043615406957, "compression_ratio": 1.7370517928286853, "no_speech_prob": 0.00037962006172165275}, {"id": 160, "seek": 79934, "start": 801.34, "end": 807.34, "text": " Now one way this works, of course, is we can just take the C and we can index into row 5.", "tokens": [50465, 823, 472, 636, 341, 1985, 11, 295, 1164, 11, 307, 321, 393, 445, 747, 264, 383, 293, 321, 393, 8186, 666, 5386, 1025, 13, 50765], "temperature": 0.0, "avg_logprob": -0.07528043615406957, "compression_ratio": 1.7370517928286853, "no_speech_prob": 0.00037962006172165275}, {"id": 161, "seek": 79934, "start": 807.34, "end": 811.34, "text": " And that gives us a vector, the fifth row of C.", "tokens": [50765, 400, 300, 2709, 505, 257, 8062, 11, 264, 9266, 5386, 295, 383, 13, 50965], "temperature": 0.0, "avg_logprob": -0.07528043615406957, "compression_ratio": 1.7370517928286853, "no_speech_prob": 0.00037962006172165275}, {"id": 162, "seek": 79934, "start": 811.34, "end": 814.34, "text": " And this is one way to do it.", "tokens": [50965, 400, 341, 307, 472, 636, 281, 360, 309, 13, 51115], "temperature": 0.0, "avg_logprob": -0.07528043615406957, "compression_ratio": 1.7370517928286853, "no_speech_prob": 0.00037962006172165275}, {"id": 163, "seek": 79934, "start": 814.34, "end": 820.34, "text": " The other way that I presented in the previous lecture is actually seemingly different but actually identical.", "tokens": [51115, 440, 661, 636, 300, 286, 8212, 294, 264, 3894, 7991, 307, 767, 18709, 819, 457, 767, 14800, 13, 51415], "temperature": 0.0, "avg_logprob": -0.07528043615406957, "compression_ratio": 1.7370517928286853, "no_speech_prob": 0.00037962006172165275}, {"id": 164, "seek": 79934, "start": 820.34, "end": 827.34, "text": " So in the previous lecture, what we did is we took these integers and we used the one-hot encoding to first encode them.", "tokens": [51415, 407, 294, 264, 3894, 7991, 11, 437, 321, 630, 307, 321, 1890, 613, 41674, 293, 321, 1143, 264, 472, 12, 12194, 43430, 281, 700, 2058, 1429, 552, 13, 51765], "temperature": 0.0, "avg_logprob": -0.07528043615406957, "compression_ratio": 1.7370517928286853, "no_speech_prob": 0.00037962006172165275}, {"id": 165, "seek": 82734, "start": 827.34, "end": 829.34, "text": " So we took that one-hot.", "tokens": [50365, 407, 321, 1890, 300, 472, 12, 12194, 13, 50465], "temperature": 0.0, "avg_logprob": -0.0922906832261519, "compression_ratio": 1.6453900709219857, "no_speech_prob": 0.00044691129005514085}, {"id": 166, "seek": 82734, "start": 829.34, "end": 831.34, "text": " We want to encode integer 5.", "tokens": [50465, 492, 528, 281, 2058, 1429, 24922, 1025, 13, 50565], "temperature": 0.0, "avg_logprob": -0.0922906832261519, "compression_ratio": 1.6453900709219857, "no_speech_prob": 0.00044691129005514085}, {"id": 167, "seek": 82734, "start": 831.34, "end": 834.34, "text": " And we want to tell it that the number of classes is 27.", "tokens": [50565, 400, 321, 528, 281, 980, 309, 300, 264, 1230, 295, 5359, 307, 7634, 13, 50715], "temperature": 0.0, "avg_logprob": -0.0922906832261519, "compression_ratio": 1.6453900709219857, "no_speech_prob": 0.00044691129005514085}, {"id": 168, "seek": 82734, "start": 834.34, "end": 840.34, "text": " So that's the 26-dimensional vector of all zeros except the fifth bit is turned on.", "tokens": [50715, 407, 300, 311, 264, 7551, 12, 18759, 8062, 295, 439, 35193, 3993, 264, 9266, 857, 307, 3574, 322, 13, 51015], "temperature": 0.0, "avg_logprob": -0.0922906832261519, "compression_ratio": 1.6453900709219857, "no_speech_prob": 0.00044691129005514085}, {"id": 169, "seek": 82734, "start": 840.34, "end": 843.34, "text": " Now this actually doesn't work.", "tokens": [51015, 823, 341, 767, 1177, 380, 589, 13, 51165], "temperature": 0.0, "avg_logprob": -0.0922906832261519, "compression_ratio": 1.6453900709219857, "no_speech_prob": 0.00044691129005514085}, {"id": 170, "seek": 82734, "start": 843.34, "end": 848.34, "text": " The reason is that this input actually must be a Torch.tensor.", "tokens": [51165, 440, 1778, 307, 300, 341, 4846, 767, 1633, 312, 257, 7160, 339, 13, 83, 23153, 13, 51415], "temperature": 0.0, "avg_logprob": -0.0922906832261519, "compression_ratio": 1.6453900709219857, "no_speech_prob": 0.00044691129005514085}, {"id": 171, "seek": 82734, "start": 848.34, "end": 853.34, "text": " And I'm making some of these errors intentionally just so you get to see some errors and how to fix them.", "tokens": [51415, 400, 286, 478, 1455, 512, 295, 613, 13603, 22062, 445, 370, 291, 483, 281, 536, 512, 13603, 293, 577, 281, 3191, 552, 13, 51665], "temperature": 0.0, "avg_logprob": -0.0922906832261519, "compression_ratio": 1.6453900709219857, "no_speech_prob": 0.00044691129005514085}, {"id": 172, "seek": 82734, "start": 853.34, "end": 855.34, "text": " So this must be a tensor, not an int.", "tokens": [51665, 407, 341, 1633, 312, 257, 40863, 11, 406, 364, 560, 13, 51765], "temperature": 0.0, "avg_logprob": -0.0922906832261519, "compression_ratio": 1.6453900709219857, "no_speech_prob": 0.00044691129005514085}, {"id": 173, "seek": 82734, "start": 855.34, "end": 856.34, "text": " Fairly straightforward to fix.", "tokens": [51765, 12157, 356, 15325, 281, 3191, 13, 51815], "temperature": 0.0, "avg_logprob": -0.0922906832261519, "compression_ratio": 1.6453900709219857, "no_speech_prob": 0.00044691129005514085}, {"id": 174, "seek": 85634, "start": 856.34, "end": 858.34, "text": " We get a one-hot vector.", "tokens": [50365, 492, 483, 257, 472, 12, 12194, 8062, 13, 50465], "temperature": 0.0, "avg_logprob": -0.10343679785728455, "compression_ratio": 1.484304932735426, "no_speech_prob": 4.6152294089552015e-05}, {"id": 175, "seek": 85634, "start": 858.34, "end": 860.34, "text": " The fifth dimension is 1.", "tokens": [50465, 440, 9266, 10139, 307, 502, 13, 50565], "temperature": 0.0, "avg_logprob": -0.10343679785728455, "compression_ratio": 1.484304932735426, "no_speech_prob": 4.6152294089552015e-05}, {"id": 176, "seek": 85634, "start": 860.34, "end": 862.34, "text": " And the shape of this is 27.", "tokens": [50565, 400, 264, 3909, 295, 341, 307, 7634, 13, 50665], "temperature": 0.0, "avg_logprob": -0.10343679785728455, "compression_ratio": 1.484304932735426, "no_speech_prob": 4.6152294089552015e-05}, {"id": 177, "seek": 85634, "start": 862.34, "end": 866.34, "text": " And now notice that, just as I briefly alluded to in a previous video,", "tokens": [50665, 400, 586, 3449, 300, 11, 445, 382, 286, 10515, 33919, 281, 294, 257, 3894, 960, 11, 50865], "temperature": 0.0, "avg_logprob": -0.10343679785728455, "compression_ratio": 1.484304932735426, "no_speech_prob": 4.6152294089552015e-05}, {"id": 178, "seek": 85634, "start": 866.34, "end": 873.34, "text": " if we take this one-hot vector and we multiply it by C,", "tokens": [50865, 498, 321, 747, 341, 472, 12, 12194, 8062, 293, 321, 12972, 309, 538, 383, 11, 51215], "temperature": 0.0, "avg_logprob": -0.10343679785728455, "compression_ratio": 1.484304932735426, "no_speech_prob": 4.6152294089552015e-05}, {"id": 179, "seek": 85634, "start": 873.34, "end": 877.34, "text": " then what would you expect?", "tokens": [51215, 550, 437, 576, 291, 2066, 30, 51415], "temperature": 0.0, "avg_logprob": -0.10343679785728455, "compression_ratio": 1.484304932735426, "no_speech_prob": 4.6152294089552015e-05}, {"id": 180, "seek": 85634, "start": 877.34, "end": 881.34, "text": " Well, number one, first you'd expect an error", "tokens": [51415, 1042, 11, 1230, 472, 11, 700, 291, 1116, 2066, 364, 6713, 51615], "temperature": 0.0, "avg_logprob": -0.10343679785728455, "compression_ratio": 1.484304932735426, "no_speech_prob": 4.6152294089552015e-05}, {"id": 181, "seek": 85634, "start": 881.34, "end": 886.34, "text": " because expected scalar type long but found float.", "tokens": [51615, 570, 5176, 39684, 2010, 938, 457, 1352, 15706, 13, 51865], "temperature": 0.0, "avg_logprob": -0.10343679785728455, "compression_ratio": 1.484304932735426, "no_speech_prob": 4.6152294089552015e-05}, {"id": 182, "seek": 88634, "start": 886.34, "end": 888.34, "text": " So a little bit confusing.", "tokens": [50365, 407, 257, 707, 857, 13181, 13, 50465], "temperature": 0.0, "avg_logprob": -0.07392489499059217, "compression_ratio": 1.657258064516129, "no_speech_prob": 0.0002638951991684735}, {"id": 183, "seek": 88634, "start": 888.34, "end": 894.34, "text": " But the problem here is that one-hot, the data type of it, is long.", "tokens": [50465, 583, 264, 1154, 510, 307, 300, 472, 12, 12194, 11, 264, 1412, 2010, 295, 309, 11, 307, 938, 13, 50765], "temperature": 0.0, "avg_logprob": -0.07392489499059217, "compression_ratio": 1.657258064516129, "no_speech_prob": 0.0002638951991684735}, {"id": 184, "seek": 88634, "start": 894.34, "end": 896.34, "text": " It's a 64-bit integer.", "tokens": [50765, 467, 311, 257, 12145, 12, 5260, 24922, 13, 50865], "temperature": 0.0, "avg_logprob": -0.07392489499059217, "compression_ratio": 1.657258064516129, "no_speech_prob": 0.0002638951991684735}, {"id": 185, "seek": 88634, "start": 896.34, "end": 898.34, "text": " But this is a float tensor.", "tokens": [50865, 583, 341, 307, 257, 15706, 40863, 13, 50965], "temperature": 0.0, "avg_logprob": -0.07392489499059217, "compression_ratio": 1.657258064516129, "no_speech_prob": 0.0002638951991684735}, {"id": 186, "seek": 88634, "start": 898.34, "end": 901.34, "text": " And so PyTorch doesn't know how to multiply an int with a float.", "tokens": [50965, 400, 370, 9953, 51, 284, 339, 1177, 380, 458, 577, 281, 12972, 364, 560, 365, 257, 15706, 13, 51115], "temperature": 0.0, "avg_logprob": -0.07392489499059217, "compression_ratio": 1.657258064516129, "no_speech_prob": 0.0002638951991684735}, {"id": 187, "seek": 88634, "start": 901.34, "end": 906.34, "text": " And that's why we had to explicitly cast this to a float so that we can multiply.", "tokens": [51115, 400, 300, 311, 983, 321, 632, 281, 20803, 4193, 341, 281, 257, 15706, 370, 300, 321, 393, 12972, 13, 51365], "temperature": 0.0, "avg_logprob": -0.07392489499059217, "compression_ratio": 1.657258064516129, "no_speech_prob": 0.0002638951991684735}, {"id": 188, "seek": 88634, "start": 906.34, "end": 911.34, "text": " Now the output actually here is identical.", "tokens": [51365, 823, 264, 5598, 767, 510, 307, 14800, 13, 51615], "temperature": 0.0, "avg_logprob": -0.07392489499059217, "compression_ratio": 1.657258064516129, "no_speech_prob": 0.0002638951991684735}, {"id": 189, "seek": 88634, "start": 911.34, "end": 915.34, "text": " And it's identical because of the way the matrix multiplication here works.", "tokens": [51615, 400, 309, 311, 14800, 570, 295, 264, 636, 264, 8141, 27290, 510, 1985, 13, 51815], "temperature": 0.0, "avg_logprob": -0.07392489499059217, "compression_ratio": 1.657258064516129, "no_speech_prob": 0.0002638951991684735}, {"id": 190, "seek": 91634, "start": 916.34, "end": 920.34, "text": " So we have a one-hot vector multiplying columns of C.", "tokens": [50365, 407, 321, 362, 257, 472, 12, 12194, 8062, 30955, 13766, 295, 383, 13, 50565], "temperature": 0.0, "avg_logprob": -0.10518021619956912, "compression_ratio": 1.7560975609756098, "no_speech_prob": 0.0007958814967423677}, {"id": 191, "seek": 91634, "start": 920.34, "end": 924.34, "text": " And because of all the zeros, they actually end up masking out everything in C", "tokens": [50565, 400, 570, 295, 439, 264, 35193, 11, 436, 767, 917, 493, 31226, 484, 1203, 294, 383, 50765], "temperature": 0.0, "avg_logprob": -0.10518021619956912, "compression_ratio": 1.7560975609756098, "no_speech_prob": 0.0007958814967423677}, {"id": 192, "seek": 91634, "start": 924.34, "end": 927.34, "text": " except for the fifth row, which is plucked out.", "tokens": [50765, 3993, 337, 264, 9266, 5386, 11, 597, 307, 41514, 292, 484, 13, 50915], "temperature": 0.0, "avg_logprob": -0.10518021619956912, "compression_ratio": 1.7560975609756098, "no_speech_prob": 0.0007958814967423677}, {"id": 193, "seek": 91634, "start": 927.34, "end": 930.34, "text": " And so we actually arrive at the same result.", "tokens": [50915, 400, 370, 321, 767, 8881, 412, 264, 912, 1874, 13, 51065], "temperature": 0.0, "avg_logprob": -0.10518021619956912, "compression_ratio": 1.7560975609756098, "no_speech_prob": 0.0007958814967423677}, {"id": 194, "seek": 91634, "start": 930.34, "end": 934.34, "text": " And that tells you that here we can interpret this first piece here,", "tokens": [51065, 400, 300, 5112, 291, 300, 510, 321, 393, 7302, 341, 700, 2522, 510, 11, 51265], "temperature": 0.0, "avg_logprob": -0.10518021619956912, "compression_ratio": 1.7560975609756098, "no_speech_prob": 0.0007958814967423677}, {"id": 195, "seek": 91634, "start": 934.34, "end": 936.34, "text": " this embedding of the integer.", "tokens": [51265, 341, 12240, 3584, 295, 264, 24922, 13, 51365], "temperature": 0.0, "avg_logprob": -0.10518021619956912, "compression_ratio": 1.7560975609756098, "no_speech_prob": 0.0007958814967423677}, {"id": 196, "seek": 91634, "start": 936.34, "end": 940.34, "text": " We can either think of it as the integer indexing into a lookup table C,", "tokens": [51365, 492, 393, 2139, 519, 295, 309, 382, 264, 24922, 8186, 278, 666, 257, 574, 1010, 3199, 383, 11, 51565], "temperature": 0.0, "avg_logprob": -0.10518021619956912, "compression_ratio": 1.7560975609756098, "no_speech_prob": 0.0007958814967423677}, {"id": 197, "seek": 91634, "start": 940.34, "end": 943.34, "text": " but equivalently we can also think of this little piece here", "tokens": [51565, 457, 9052, 2276, 321, 393, 611, 519, 295, 341, 707, 2522, 510, 51715], "temperature": 0.0, "avg_logprob": -0.10518021619956912, "compression_ratio": 1.7560975609756098, "no_speech_prob": 0.0007958814967423677}, {"id": 198, "seek": 91634, "start": 943.34, "end": 946.34, "text": " as a first layer of this bigger neural net.", "tokens": [51715, 382, 257, 700, 4583, 295, 341, 3801, 18161, 2533, 13, 51865], "temperature": 0.0, "avg_logprob": -0.10518021619956912, "compression_ratio": 1.7560975609756098, "no_speech_prob": 0.0007958814967423677}, {"id": 199, "seek": 94634, "start": 946.34, "end": 949.34, "text": " This layer here has neurons that have no nonlinearity.", "tokens": [50365, 639, 4583, 510, 575, 22027, 300, 362, 572, 2107, 1889, 17409, 13, 50515], "temperature": 0.0, "avg_logprob": -0.052955756510110724, "compression_ratio": 1.8507462686567164, "no_speech_prob": 0.00015028510824777186}, {"id": 200, "seek": 94634, "start": 949.34, "end": 950.34, "text": " There's no tanh.", "tokens": [50515, 821, 311, 572, 7603, 71, 13, 50565], "temperature": 0.0, "avg_logprob": -0.052955756510110724, "compression_ratio": 1.8507462686567164, "no_speech_prob": 0.00015028510824777186}, {"id": 201, "seek": 94634, "start": 950.34, "end": 952.34, "text": " They're just linear neurons.", "tokens": [50565, 814, 434, 445, 8213, 22027, 13, 50665], "temperature": 0.0, "avg_logprob": -0.052955756510110724, "compression_ratio": 1.8507462686567164, "no_speech_prob": 0.00015028510824777186}, {"id": 202, "seek": 94634, "start": 952.34, "end": 955.34, "text": " And their weight matrix is C.", "tokens": [50665, 400, 641, 3364, 8141, 307, 383, 13, 50815], "temperature": 0.0, "avg_logprob": -0.052955756510110724, "compression_ratio": 1.8507462686567164, "no_speech_prob": 0.00015028510824777186}, {"id": 203, "seek": 94634, "start": 955.34, "end": 958.34, "text": " And then we are encoding integers into one-hot", "tokens": [50815, 400, 550, 321, 366, 43430, 41674, 666, 472, 12, 12194, 50965], "temperature": 0.0, "avg_logprob": -0.052955756510110724, "compression_ratio": 1.8507462686567164, "no_speech_prob": 0.00015028510824777186}, {"id": 204, "seek": 94634, "start": 958.34, "end": 960.34, "text": " and feeding those into a neural net.", "tokens": [50965, 293, 12919, 729, 666, 257, 18161, 2533, 13, 51065], "temperature": 0.0, "avg_logprob": -0.052955756510110724, "compression_ratio": 1.8507462686567164, "no_speech_prob": 0.00015028510824777186}, {"id": 205, "seek": 94634, "start": 960.34, "end": 962.34, "text": " And this first layer basically embeds them.", "tokens": [51065, 400, 341, 700, 4583, 1936, 12240, 82, 552, 13, 51165], "temperature": 0.0, "avg_logprob": -0.052955756510110724, "compression_ratio": 1.8507462686567164, "no_speech_prob": 0.00015028510824777186}, {"id": 206, "seek": 94634, "start": 962.34, "end": 965.34, "text": " So those are two equivalent ways of doing the same thing.", "tokens": [51165, 407, 729, 366, 732, 10344, 2098, 295, 884, 264, 912, 551, 13, 51315], "temperature": 0.0, "avg_logprob": -0.052955756510110724, "compression_ratio": 1.8507462686567164, "no_speech_prob": 0.00015028510824777186}, {"id": 207, "seek": 94634, "start": 965.34, "end": 968.34, "text": " We're just going to index because it's much, much faster.", "tokens": [51315, 492, 434, 445, 516, 281, 8186, 570, 309, 311, 709, 11, 709, 4663, 13, 51465], "temperature": 0.0, "avg_logprob": -0.052955756510110724, "compression_ratio": 1.8507462686567164, "no_speech_prob": 0.00015028510824777186}, {"id": 208, "seek": 94634, "start": 968.34, "end": 973.34, "text": " And we're going to discard this interpretation of one-hot inputs into neural nets.", "tokens": [51465, 400, 321, 434, 516, 281, 31597, 341, 14174, 295, 472, 12, 12194, 15743, 666, 18161, 36170, 13, 51715], "temperature": 0.0, "avg_logprob": -0.052955756510110724, "compression_ratio": 1.8507462686567164, "no_speech_prob": 0.00015028510824777186}, {"id": 209, "seek": 94634, "start": 973.34, "end": 975.34, "text": " And we're just going to index integers", "tokens": [51715, 400, 321, 434, 445, 516, 281, 8186, 41674, 51815], "temperature": 0.0, "avg_logprob": -0.052955756510110724, "compression_ratio": 1.8507462686567164, "no_speech_prob": 0.00015028510824777186}, {"id": 210, "seek": 97534, "start": 975.34, "end": 977.34, "text": " to create and use embedding tables.", "tokens": [50365, 281, 1884, 293, 764, 12240, 3584, 8020, 13, 50465], "temperature": 0.0, "avg_logprob": -0.06466645760969682, "compression_ratio": 1.5338645418326693, "no_speech_prob": 0.00055085145868361}, {"id": 211, "seek": 97534, "start": 977.34, "end": 980.34, "text": " Now embedding a single integer like 5 is easy enough.", "tokens": [50465, 823, 12240, 3584, 257, 2167, 24922, 411, 1025, 307, 1858, 1547, 13, 50615], "temperature": 0.0, "avg_logprob": -0.06466645760969682, "compression_ratio": 1.5338645418326693, "no_speech_prob": 0.00055085145868361}, {"id": 212, "seek": 97534, "start": 980.34, "end": 984.34, "text": " We can simply ask PyTorch to retrieve the fifth row of C", "tokens": [50615, 492, 393, 2935, 1029, 9953, 51, 284, 339, 281, 30254, 264, 9266, 5386, 295, 383, 50815], "temperature": 0.0, "avg_logprob": -0.06466645760969682, "compression_ratio": 1.5338645418326693, "no_speech_prob": 0.00055085145868361}, {"id": 213, "seek": 97534, "start": 984.34, "end": 987.34, "text": " or the row index 5 of C.", "tokens": [50815, 420, 264, 5386, 8186, 1025, 295, 383, 13, 50965], "temperature": 0.0, "avg_logprob": -0.06466645760969682, "compression_ratio": 1.5338645418326693, "no_speech_prob": 0.00055085145868361}, {"id": 214, "seek": 97534, "start": 987.34, "end": 992.34, "text": " But how do we simultaneously embed all of these 32 by 3 integers", "tokens": [50965, 583, 577, 360, 321, 16561, 12240, 439, 295, 613, 8858, 538, 805, 41674, 51215], "temperature": 0.0, "avg_logprob": -0.06466645760969682, "compression_ratio": 1.5338645418326693, "no_speech_prob": 0.00055085145868361}, {"id": 215, "seek": 97534, "start": 992.34, "end": 994.34, "text": " stored in array X?", "tokens": [51215, 12187, 294, 10225, 1783, 30, 51315], "temperature": 0.0, "avg_logprob": -0.06466645760969682, "compression_ratio": 1.5338645418326693, "no_speech_prob": 0.00055085145868361}, {"id": 216, "seek": 97534, "start": 994.34, "end": 998.34, "text": " Luckily, PyTorch indexing is fairly flexible and quite powerful.", "tokens": [51315, 19726, 11, 9953, 51, 284, 339, 8186, 278, 307, 6457, 11358, 293, 1596, 4005, 13, 51515], "temperature": 0.0, "avg_logprob": -0.06466645760969682, "compression_ratio": 1.5338645418326693, "no_speech_prob": 0.00055085145868361}, {"id": 217, "seek": 97534, "start": 998.34, "end": 1004.34, "text": " So it doesn't just work to ask for a single element 5 like this.", "tokens": [51515, 407, 309, 1177, 380, 445, 589, 281, 1029, 337, 257, 2167, 4478, 1025, 411, 341, 13, 51815], "temperature": 0.0, "avg_logprob": -0.06466645760969682, "compression_ratio": 1.5338645418326693, "no_speech_prob": 0.00055085145868361}, {"id": 218, "seek": 100434, "start": 1004.34, "end": 1006.34, "text": " You can actually index using lists.", "tokens": [50365, 509, 393, 767, 8186, 1228, 14511, 13, 50465], "temperature": 0.0, "avg_logprob": -0.06104114396231515, "compression_ratio": 1.9173553719008265, "no_speech_prob": 0.00097844866104424}, {"id": 219, "seek": 100434, "start": 1006.34, "end": 1009.34, "text": " So for example, we can get the rows 5, 6, and 7.", "tokens": [50465, 407, 337, 1365, 11, 321, 393, 483, 264, 13241, 1025, 11, 1386, 11, 293, 1614, 13, 50615], "temperature": 0.0, "avg_logprob": -0.06104114396231515, "compression_ratio": 1.9173553719008265, "no_speech_prob": 0.00097844866104424}, {"id": 220, "seek": 100434, "start": 1009.34, "end": 1011.34, "text": " And this will just work like this.", "tokens": [50615, 400, 341, 486, 445, 589, 411, 341, 13, 50715], "temperature": 0.0, "avg_logprob": -0.06104114396231515, "compression_ratio": 1.9173553719008265, "no_speech_prob": 0.00097844866104424}, {"id": 221, "seek": 100434, "start": 1011.34, "end": 1013.34, "text": " We can index with a list.", "tokens": [50715, 492, 393, 8186, 365, 257, 1329, 13, 50815], "temperature": 0.0, "avg_logprob": -0.06104114396231515, "compression_ratio": 1.9173553719008265, "no_speech_prob": 0.00097844866104424}, {"id": 222, "seek": 100434, "start": 1013.34, "end": 1015.34, "text": " It doesn't just have to be a list.", "tokens": [50815, 467, 1177, 380, 445, 362, 281, 312, 257, 1329, 13, 50915], "temperature": 0.0, "avg_logprob": -0.06104114396231515, "compression_ratio": 1.9173553719008265, "no_speech_prob": 0.00097844866104424}, {"id": 223, "seek": 100434, "start": 1015.34, "end": 1018.34, "text": " It can also be actually a tensor of integers.", "tokens": [50915, 467, 393, 611, 312, 767, 257, 40863, 295, 41674, 13, 51065], "temperature": 0.0, "avg_logprob": -0.06104114396231515, "compression_ratio": 1.9173553719008265, "no_speech_prob": 0.00097844866104424}, {"id": 224, "seek": 100434, "start": 1018.34, "end": 1020.34, "text": " And we can index with that.", "tokens": [51065, 400, 321, 393, 8186, 365, 300, 13, 51165], "temperature": 0.0, "avg_logprob": -0.06104114396231515, "compression_ratio": 1.9173553719008265, "no_speech_prob": 0.00097844866104424}, {"id": 225, "seek": 100434, "start": 1020.34, "end": 1023.34, "text": " So this is an integer tensor 5, 6, 7.", "tokens": [51165, 407, 341, 307, 364, 24922, 40863, 1025, 11, 1386, 11, 1614, 13, 51315], "temperature": 0.0, "avg_logprob": -0.06104114396231515, "compression_ratio": 1.9173553719008265, "no_speech_prob": 0.00097844866104424}, {"id": 226, "seek": 100434, "start": 1023.34, "end": 1025.3400000000001, "text": " And this will just work as well.", "tokens": [51315, 400, 341, 486, 445, 589, 382, 731, 13, 51415], "temperature": 0.0, "avg_logprob": -0.06104114396231515, "compression_ratio": 1.9173553719008265, "no_speech_prob": 0.00097844866104424}, {"id": 227, "seek": 100434, "start": 1025.3400000000001, "end": 1029.3400000000001, "text": " In fact, we can also, for example, repeat row 7", "tokens": [51415, 682, 1186, 11, 321, 393, 611, 11, 337, 1365, 11, 7149, 5386, 1614, 51615], "temperature": 0.0, "avg_logprob": -0.06104114396231515, "compression_ratio": 1.9173553719008265, "no_speech_prob": 0.00097844866104424}, {"id": 228, "seek": 100434, "start": 1029.3400000000001, "end": 1031.3400000000001, "text": " and retrieve it multiple times.", "tokens": [51615, 293, 30254, 309, 3866, 1413, 13, 51715], "temperature": 0.0, "avg_logprob": -0.06104114396231515, "compression_ratio": 1.9173553719008265, "no_speech_prob": 0.00097844866104424}, {"id": 229, "seek": 100434, "start": 1031.3400000000001, "end": 1034.3400000000001, "text": " And that same index will just get embedded multiple times.", "tokens": [51715, 400, 300, 912, 8186, 486, 445, 483, 16741, 3866, 1413, 13, 51865], "temperature": 0.0, "avg_logprob": -0.06104114396231515, "compression_ratio": 1.9173553719008265, "no_speech_prob": 0.00097844866104424}, {"id": 230, "seek": 103434, "start": 1034.34, "end": 1040.34, "text": " So here we are indexing with a one-dimensional tensor of integers.", "tokens": [50365, 407, 510, 321, 366, 8186, 278, 365, 257, 472, 12, 18759, 40863, 295, 41674, 13, 50665], "temperature": 0.0, "avg_logprob": -0.07415944286900708, "compression_ratio": 1.7876106194690264, "no_speech_prob": 0.00015416232054121792}, {"id": 231, "seek": 103434, "start": 1040.34, "end": 1043.34, "text": " But it turns out that you can also index with multidimensional", "tokens": [50665, 583, 309, 4523, 484, 300, 291, 393, 611, 8186, 365, 2120, 327, 332, 11075, 50815], "temperature": 0.0, "avg_logprob": -0.07415944286900708, "compression_ratio": 1.7876106194690264, "no_speech_prob": 0.00015416232054121792}, {"id": 232, "seek": 103434, "start": 1043.34, "end": 1045.34, "text": " tensors of integers.", "tokens": [50815, 10688, 830, 295, 41674, 13, 50915], "temperature": 0.0, "avg_logprob": -0.07415944286900708, "compression_ratio": 1.7876106194690264, "no_speech_prob": 0.00015416232054121792}, {"id": 233, "seek": 103434, "start": 1045.34, "end": 1048.34, "text": " Here we have a two-dimensional tensor of integers.", "tokens": [50915, 1692, 321, 362, 257, 732, 12, 18759, 40863, 295, 41674, 13, 51065], "temperature": 0.0, "avg_logprob": -0.07415944286900708, "compression_ratio": 1.7876106194690264, "no_speech_prob": 0.00015416232054121792}, {"id": 234, "seek": 103434, "start": 1048.34, "end": 1051.34, "text": " So we can simply just do C at X.", "tokens": [51065, 407, 321, 393, 2935, 445, 360, 383, 412, 1783, 13, 51215], "temperature": 0.0, "avg_logprob": -0.07415944286900708, "compression_ratio": 1.7876106194690264, "no_speech_prob": 0.00015416232054121792}, {"id": 235, "seek": 103434, "start": 1051.34, "end": 1054.34, "text": " And this just works.", "tokens": [51215, 400, 341, 445, 1985, 13, 51365], "temperature": 0.0, "avg_logprob": -0.07415944286900708, "compression_ratio": 1.7876106194690264, "no_speech_prob": 0.00015416232054121792}, {"id": 236, "seek": 103434, "start": 1054.34, "end": 1058.34, "text": " And the shape of this is 32 by 3,", "tokens": [51365, 400, 264, 3909, 295, 341, 307, 8858, 538, 805, 11, 51565], "temperature": 0.0, "avg_logprob": -0.07415944286900708, "compression_ratio": 1.7876106194690264, "no_speech_prob": 0.00015416232054121792}, {"id": 237, "seek": 103434, "start": 1058.34, "end": 1060.34, "text": " which is the original shape.", "tokens": [51565, 597, 307, 264, 3380, 3909, 13, 51665], "temperature": 0.0, "avg_logprob": -0.07415944286900708, "compression_ratio": 1.7876106194690264, "no_speech_prob": 0.00015416232054121792}, {"id": 238, "seek": 103434, "start": 1060.34, "end": 1062.34, "text": " And now for every one of those 32 by 3 integers,", "tokens": [51665, 400, 586, 337, 633, 472, 295, 729, 8858, 538, 805, 41674, 11, 51765], "temperature": 0.0, "avg_logprob": -0.07415944286900708, "compression_ratio": 1.7876106194690264, "no_speech_prob": 0.00015416232054121792}, {"id": 239, "seek": 103434, "start": 1062.34, "end": 1064.34, "text": " we've retrieved the embedding vector", "tokens": [51765, 321, 600, 19817, 937, 264, 12240, 3584, 8062, 51865], "temperature": 0.0, "avg_logprob": -0.07415944286900708, "compression_ratio": 1.7876106194690264, "no_speech_prob": 0.00015416232054121792}, {"id": 240, "seek": 106434, "start": 1064.34, "end": 1066.34, "text": " here.", "tokens": [50365, 510, 13, 50465], "temperature": 0.0, "avg_logprob": -0.08839177112190091, "compression_ratio": 1.6055555555555556, "no_speech_prob": 0.000598409678786993}, {"id": 241, "seek": 106434, "start": 1066.34, "end": 1069.34, "text": " So basically, we have that as an example.", "tokens": [50465, 407, 1936, 11, 321, 362, 300, 382, 364, 1365, 13, 50615], "temperature": 0.0, "avg_logprob": -0.08839177112190091, "compression_ratio": 1.6055555555555556, "no_speech_prob": 0.000598409678786993}, {"id": 242, "seek": 106434, "start": 1069.34, "end": 1073.34, "text": " The example index 13,", "tokens": [50615, 440, 1365, 8186, 3705, 11, 50815], "temperature": 0.0, "avg_logprob": -0.08839177112190091, "compression_ratio": 1.6055555555555556, "no_speech_prob": 0.000598409678786993}, {"id": 243, "seek": 106434, "start": 1073.34, "end": 1075.34, "text": " the second dimension,", "tokens": [50815, 264, 1150, 10139, 11, 50915], "temperature": 0.0, "avg_logprob": -0.08839177112190091, "compression_ratio": 1.6055555555555556, "no_speech_prob": 0.000598409678786993}, {"id": 244, "seek": 106434, "start": 1075.34, "end": 1078.34, "text": " is the integer 1 as an example.", "tokens": [50915, 307, 264, 24922, 502, 382, 364, 1365, 13, 51065], "temperature": 0.0, "avg_logprob": -0.08839177112190091, "compression_ratio": 1.6055555555555556, "no_speech_prob": 0.000598409678786993}, {"id": 245, "seek": 106434, "start": 1078.34, "end": 1081.34, "text": " And so here, if we do C of X,", "tokens": [51065, 400, 370, 510, 11, 498, 321, 360, 383, 295, 1783, 11, 51215], "temperature": 0.0, "avg_logprob": -0.08839177112190091, "compression_ratio": 1.6055555555555556, "no_speech_prob": 0.000598409678786993}, {"id": 246, "seek": 106434, "start": 1081.34, "end": 1083.34, "text": " which gives us that array,", "tokens": [51215, 597, 2709, 505, 300, 10225, 11, 51315], "temperature": 0.0, "avg_logprob": -0.08839177112190091, "compression_ratio": 1.6055555555555556, "no_speech_prob": 0.000598409678786993}, {"id": 247, "seek": 106434, "start": 1083.34, "end": 1085.34, "text": " and then we index into 13 by 2", "tokens": [51315, 293, 550, 321, 8186, 666, 3705, 538, 568, 51415], "temperature": 0.0, "avg_logprob": -0.08839177112190091, "compression_ratio": 1.6055555555555556, "no_speech_prob": 0.000598409678786993}, {"id": 248, "seek": 106434, "start": 1085.34, "end": 1087.34, "text": " of that array,", "tokens": [51415, 295, 300, 10225, 11, 51515], "temperature": 0.0, "avg_logprob": -0.08839177112190091, "compression_ratio": 1.6055555555555556, "no_speech_prob": 0.000598409678786993}, {"id": 249, "seek": 106434, "start": 1087.34, "end": 1090.34, "text": " then we get the embedding here.", "tokens": [51515, 550, 321, 483, 264, 12240, 3584, 510, 13, 51665], "temperature": 0.0, "avg_logprob": -0.08839177112190091, "compression_ratio": 1.6055555555555556, "no_speech_prob": 0.000598409678786993}, {"id": 250, "seek": 106434, "start": 1090.34, "end": 1093.34, "text": " And you can verify that C at 1", "tokens": [51665, 400, 291, 393, 16888, 300, 383, 412, 502, 51815], "temperature": 0.0, "avg_logprob": -0.08839177112190091, "compression_ratio": 1.6055555555555556, "no_speech_prob": 0.000598409678786993}, {"id": 251, "seek": 109334, "start": 1093.34, "end": 1096.34, "text": " which is the integer at that location,", "tokens": [50365, 597, 307, 264, 24922, 412, 300, 4914, 11, 50515], "temperature": 0.0, "avg_logprob": -0.06628490447998046, "compression_ratio": 1.5714285714285714, "no_speech_prob": 0.0004423759819474071}, {"id": 252, "seek": 109334, "start": 1096.34, "end": 1099.34, "text": " is indeed equal to this.", "tokens": [50515, 307, 6451, 2681, 281, 341, 13, 50665], "temperature": 0.0, "avg_logprob": -0.06628490447998046, "compression_ratio": 1.5714285714285714, "no_speech_prob": 0.0004423759819474071}, {"id": 253, "seek": 109334, "start": 1099.34, "end": 1101.34, "text": " You see they're equal.", "tokens": [50665, 509, 536, 436, 434, 2681, 13, 50765], "temperature": 0.0, "avg_logprob": -0.06628490447998046, "compression_ratio": 1.5714285714285714, "no_speech_prob": 0.0004423759819474071}, {"id": 254, "seek": 109334, "start": 1101.34, "end": 1103.34, "text": " So basically, long story short,", "tokens": [50765, 407, 1936, 11, 938, 1657, 2099, 11, 50865], "temperature": 0.0, "avg_logprob": -0.06628490447998046, "compression_ratio": 1.5714285714285714, "no_speech_prob": 0.0004423759819474071}, {"id": 255, "seek": 109334, "start": 1103.34, "end": 1105.34, "text": " PyTorch indexing is awesome.", "tokens": [50865, 9953, 51, 284, 339, 8186, 278, 307, 3476, 13, 50965], "temperature": 0.0, "avg_logprob": -0.06628490447998046, "compression_ratio": 1.5714285714285714, "no_speech_prob": 0.0004423759819474071}, {"id": 256, "seek": 109334, "start": 1105.34, "end": 1107.34, "text": " And to embed simultaneously", "tokens": [50965, 400, 281, 12240, 16561, 51065], "temperature": 0.0, "avg_logprob": -0.06628490447998046, "compression_ratio": 1.5714285714285714, "no_speech_prob": 0.0004423759819474071}, {"id": 257, "seek": 109334, "start": 1107.34, "end": 1109.34, "text": " all of the integers in X,", "tokens": [51065, 439, 295, 264, 41674, 294, 1783, 11, 51165], "temperature": 0.0, "avg_logprob": -0.06628490447998046, "compression_ratio": 1.5714285714285714, "no_speech_prob": 0.0004423759819474071}, {"id": 258, "seek": 109334, "start": 1109.34, "end": 1111.34, "text": " we can simply do C of X.", "tokens": [51165, 321, 393, 2935, 360, 383, 295, 1783, 13, 51265], "temperature": 0.0, "avg_logprob": -0.06628490447998046, "compression_ratio": 1.5714285714285714, "no_speech_prob": 0.0004423759819474071}, {"id": 259, "seek": 109334, "start": 1111.34, "end": 1113.34, "text": " And that is our embedding.", "tokens": [51265, 400, 300, 307, 527, 12240, 3584, 13, 51365], "temperature": 0.0, "avg_logprob": -0.06628490447998046, "compression_ratio": 1.5714285714285714, "no_speech_prob": 0.0004423759819474071}, {"id": 260, "seek": 109334, "start": 1113.34, "end": 1115.34, "text": " And that just works.", "tokens": [51365, 400, 300, 445, 1985, 13, 51465], "temperature": 0.0, "avg_logprob": -0.06628490447998046, "compression_ratio": 1.5714285714285714, "no_speech_prob": 0.0004423759819474071}, {"id": 261, "seek": 109334, "start": 1115.34, "end": 1117.34, "text": " Now let's construct this layer here,", "tokens": [51465, 823, 718, 311, 7690, 341, 4583, 510, 11, 51565], "temperature": 0.0, "avg_logprob": -0.06628490447998046, "compression_ratio": 1.5714285714285714, "no_speech_prob": 0.0004423759819474071}, {"id": 262, "seek": 109334, "start": 1117.34, "end": 1119.34, "text": " the hidden layer.", "tokens": [51565, 264, 7633, 4583, 13, 51665], "temperature": 0.0, "avg_logprob": -0.06628490447998046, "compression_ratio": 1.5714285714285714, "no_speech_prob": 0.0004423759819474071}, {"id": 263, "seek": 109334, "start": 1119.34, "end": 1121.34, "text": " So we have that W1, as I'll call it,", "tokens": [51665, 407, 321, 362, 300, 343, 16, 11, 382, 286, 603, 818, 309, 11, 51765], "temperature": 0.0, "avg_logprob": -0.06628490447998046, "compression_ratio": 1.5714285714285714, "no_speech_prob": 0.0004423759819474071}, {"id": 264, "seek": 109334, "start": 1121.34, "end": 1123.34, "text": " are these weights.", "tokens": [51765, 366, 613, 17443, 13, 51865], "temperature": 0.0, "avg_logprob": -0.06628490447998046, "compression_ratio": 1.5714285714285714, "no_speech_prob": 0.0004423759819474071}, {"id": 265, "seek": 112334, "start": 1123.34, "end": 1125.34, "text": " Which we will initialize randomly.", "tokens": [50365, 3013, 321, 486, 5883, 1125, 16979, 13, 50465], "temperature": 0.0, "avg_logprob": -0.07668928335641177, "compression_ratio": 1.7925311203319503, "no_speech_prob": 0.00024932430824264884}, {"id": 266, "seek": 112334, "start": 1125.34, "end": 1127.34, "text": " Now the number of inputs to this layer", "tokens": [50465, 823, 264, 1230, 295, 15743, 281, 341, 4583, 50565], "temperature": 0.0, "avg_logprob": -0.07668928335641177, "compression_ratio": 1.7925311203319503, "no_speech_prob": 0.00024932430824264884}, {"id": 267, "seek": 112334, "start": 1127.34, "end": 1129.34, "text": " is going to be 3 times 2.", "tokens": [50565, 307, 516, 281, 312, 805, 1413, 568, 13, 50665], "temperature": 0.0, "avg_logprob": -0.07668928335641177, "compression_ratio": 1.7925311203319503, "no_speech_prob": 0.00024932430824264884}, {"id": 268, "seek": 112334, "start": 1129.34, "end": 1131.34, "text": " Right?", "tokens": [50665, 1779, 30, 50765], "temperature": 0.0, "avg_logprob": -0.07668928335641177, "compression_ratio": 1.7925311203319503, "no_speech_prob": 0.00024932430824264884}, {"id": 269, "seek": 112334, "start": 1131.34, "end": 1133.34, "text": " Because we have two-dimensional embeddings", "tokens": [50765, 1436, 321, 362, 732, 12, 18759, 12240, 29432, 50865], "temperature": 0.0, "avg_logprob": -0.07668928335641177, "compression_ratio": 1.7925311203319503, "no_speech_prob": 0.00024932430824264884}, {"id": 270, "seek": 112334, "start": 1133.34, "end": 1135.34, "text": " and we have three of them.", "tokens": [50865, 293, 321, 362, 1045, 295, 552, 13, 50965], "temperature": 0.0, "avg_logprob": -0.07668928335641177, "compression_ratio": 1.7925311203319503, "no_speech_prob": 0.00024932430824264884}, {"id": 271, "seek": 112334, "start": 1135.34, "end": 1137.34, "text": " So the number of inputs is 6.", "tokens": [50965, 407, 264, 1230, 295, 15743, 307, 1386, 13, 51065], "temperature": 0.0, "avg_logprob": -0.07668928335641177, "compression_ratio": 1.7925311203319503, "no_speech_prob": 0.00024932430824264884}, {"id": 272, "seek": 112334, "start": 1137.34, "end": 1139.34, "text": " And the number of neurons in this layer", "tokens": [51065, 400, 264, 1230, 295, 22027, 294, 341, 4583, 51165], "temperature": 0.0, "avg_logprob": -0.07668928335641177, "compression_ratio": 1.7925311203319503, "no_speech_prob": 0.00024932430824264884}, {"id": 273, "seek": 112334, "start": 1139.34, "end": 1141.34, "text": " is a variable up to us.", "tokens": [51165, 307, 257, 7006, 493, 281, 505, 13, 51265], "temperature": 0.0, "avg_logprob": -0.07668928335641177, "compression_ratio": 1.7925311203319503, "no_speech_prob": 0.00024932430824264884}, {"id": 274, "seek": 112334, "start": 1141.34, "end": 1143.34, "text": " Let's use 100 neurons as an example.", "tokens": [51265, 961, 311, 764, 2319, 22027, 382, 364, 1365, 13, 51365], "temperature": 0.0, "avg_logprob": -0.07668928335641177, "compression_ratio": 1.7925311203319503, "no_speech_prob": 0.00024932430824264884}, {"id": 275, "seek": 112334, "start": 1143.34, "end": 1145.34, "text": " And then biases", "tokens": [51365, 400, 550, 32152, 51465], "temperature": 0.0, "avg_logprob": -0.07668928335641177, "compression_ratio": 1.7925311203319503, "no_speech_prob": 0.00024932430824264884}, {"id": 276, "seek": 112334, "start": 1145.34, "end": 1147.34, "text": " will be also initialized randomly", "tokens": [51465, 486, 312, 611, 5883, 1602, 16979, 51565], "temperature": 0.0, "avg_logprob": -0.07668928335641177, "compression_ratio": 1.7925311203319503, "no_speech_prob": 0.00024932430824264884}, {"id": 277, "seek": 112334, "start": 1147.34, "end": 1149.34, "text": " as an example.", "tokens": [51565, 382, 364, 1365, 13, 51665], "temperature": 0.0, "avg_logprob": -0.07668928335641177, "compression_ratio": 1.7925311203319503, "no_speech_prob": 0.00024932430824264884}, {"id": 278, "seek": 112334, "start": 1149.34, "end": 1151.34, "text": " And we just need 100 of them.", "tokens": [51665, 400, 321, 445, 643, 2319, 295, 552, 13, 51765], "temperature": 0.0, "avg_logprob": -0.07668928335641177, "compression_ratio": 1.7925311203319503, "no_speech_prob": 0.00024932430824264884}, {"id": 279, "seek": 112334, "start": 1151.34, "end": 1153.34, "text": " Now the problem with this is,", "tokens": [51765, 823, 264, 1154, 365, 341, 307, 11, 51865], "temperature": 0.0, "avg_logprob": -0.07668928335641177, "compression_ratio": 1.7925311203319503, "no_speech_prob": 0.00024932430824264884}, {"id": 280, "seek": 115334, "start": 1153.34, "end": 1155.34, "text": " we can't simply,", "tokens": [50365, 321, 393, 380, 2935, 11, 50465], "temperature": 0.0, "avg_logprob": -0.06852395945581896, "compression_ratio": 1.7027972027972027, "no_speech_prob": 0.0003258239012211561}, {"id": 281, "seek": 115334, "start": 1155.34, "end": 1157.34, "text": " normally we would take the input,", "tokens": [50465, 5646, 321, 576, 747, 264, 4846, 11, 50565], "temperature": 0.0, "avg_logprob": -0.06852395945581896, "compression_ratio": 1.7027972027972027, "no_speech_prob": 0.0003258239012211561}, {"id": 282, "seek": 115334, "start": 1157.34, "end": 1159.34, "text": " in this case that's embedding,", "tokens": [50565, 294, 341, 1389, 300, 311, 12240, 3584, 11, 50665], "temperature": 0.0, "avg_logprob": -0.06852395945581896, "compression_ratio": 1.7027972027972027, "no_speech_prob": 0.0003258239012211561}, {"id": 283, "seek": 115334, "start": 1159.34, "end": 1161.34, "text": " and we'd like to multiply it with these weights.", "tokens": [50665, 293, 321, 1116, 411, 281, 12972, 309, 365, 613, 17443, 13, 50765], "temperature": 0.0, "avg_logprob": -0.06852395945581896, "compression_ratio": 1.7027972027972027, "no_speech_prob": 0.0003258239012211561}, {"id": 284, "seek": 115334, "start": 1161.34, "end": 1163.34, "text": " And then we would like to add the bias.", "tokens": [50765, 400, 550, 321, 576, 411, 281, 909, 264, 12577, 13, 50865], "temperature": 0.0, "avg_logprob": -0.06852395945581896, "compression_ratio": 1.7027972027972027, "no_speech_prob": 0.0003258239012211561}, {"id": 285, "seek": 115334, "start": 1163.34, "end": 1165.34, "text": " This is roughly what we want to do.", "tokens": [50865, 639, 307, 9810, 437, 321, 528, 281, 360, 13, 50965], "temperature": 0.0, "avg_logprob": -0.06852395945581896, "compression_ratio": 1.7027972027972027, "no_speech_prob": 0.0003258239012211561}, {"id": 286, "seek": 115334, "start": 1165.34, "end": 1167.34, "text": " But the problem here is that", "tokens": [50965, 583, 264, 1154, 510, 307, 300, 51065], "temperature": 0.0, "avg_logprob": -0.06852395945581896, "compression_ratio": 1.7027972027972027, "no_speech_prob": 0.0003258239012211561}, {"id": 287, "seek": 115334, "start": 1167.34, "end": 1169.34, "text": " these embeddings are stacked up", "tokens": [51065, 613, 12240, 29432, 366, 28867, 493, 51165], "temperature": 0.0, "avg_logprob": -0.06852395945581896, "compression_ratio": 1.7027972027972027, "no_speech_prob": 0.0003258239012211561}, {"id": 288, "seek": 115334, "start": 1169.34, "end": 1171.34, "text": " in the dimensions of this input tensor.", "tokens": [51165, 294, 264, 12819, 295, 341, 4846, 40863, 13, 51265], "temperature": 0.0, "avg_logprob": -0.06852395945581896, "compression_ratio": 1.7027972027972027, "no_speech_prob": 0.0003258239012211561}, {"id": 289, "seek": 115334, "start": 1171.34, "end": 1173.34, "text": " So this will not work,", "tokens": [51265, 407, 341, 486, 406, 589, 11, 51365], "temperature": 0.0, "avg_logprob": -0.06852395945581896, "compression_ratio": 1.7027972027972027, "no_speech_prob": 0.0003258239012211561}, {"id": 290, "seek": 115334, "start": 1173.34, "end": 1175.34, "text": " this matrix multiplication,", "tokens": [51365, 341, 8141, 27290, 11, 51465], "temperature": 0.0, "avg_logprob": -0.06852395945581896, "compression_ratio": 1.7027972027972027, "no_speech_prob": 0.0003258239012211561}, {"id": 291, "seek": 115334, "start": 1175.34, "end": 1177.34, "text": " because this is a shape 32x3x2", "tokens": [51465, 570, 341, 307, 257, 3909, 8858, 87, 18, 87, 17, 51565], "temperature": 0.0, "avg_logprob": -0.06852395945581896, "compression_ratio": 1.7027972027972027, "no_speech_prob": 0.0003258239012211561}, {"id": 292, "seek": 115334, "start": 1177.34, "end": 1179.34, "text": " and I can't multiply that by 6x100.", "tokens": [51565, 293, 286, 393, 380, 12972, 300, 538, 1386, 87, 6879, 13, 51665], "temperature": 0.0, "avg_logprob": -0.06852395945581896, "compression_ratio": 1.7027972027972027, "no_speech_prob": 0.0003258239012211561}, {"id": 293, "seek": 115334, "start": 1179.34, "end": 1181.34, "text": " So somehow we need to concatenate", "tokens": [51665, 407, 6063, 321, 643, 281, 1588, 7186, 473, 51765], "temperature": 0.0, "avg_logprob": -0.06852395945581896, "compression_ratio": 1.7027972027972027, "no_speech_prob": 0.0003258239012211561}, {"id": 294, "seek": 115334, "start": 1181.34, "end": 1183.34, "text": " these inputs here together,", "tokens": [51765, 613, 15743, 510, 1214, 11, 51865], "temperature": 0.0, "avg_logprob": -0.06852395945581896, "compression_ratio": 1.7027972027972027, "no_speech_prob": 0.0003258239012211561}, {"id": 295, "seek": 118334, "start": 1183.34, "end": 1185.34, "text": " which apparently does not work.", "tokens": [50365, 597, 7970, 775, 406, 589, 13, 50465], "temperature": 0.0, "avg_logprob": -0.07090030538624731, "compression_ratio": 1.6597222222222223, "no_speech_prob": 0.00031296603265218437}, {"id": 296, "seek": 118334, "start": 1185.34, "end": 1187.34, "text": " So how do we transform this 32x3x2", "tokens": [50465, 407, 577, 360, 321, 4088, 341, 8858, 87, 18, 87, 17, 50565], "temperature": 0.0, "avg_logprob": -0.07090030538624731, "compression_ratio": 1.6597222222222223, "no_speech_prob": 0.00031296603265218437}, {"id": 297, "seek": 118334, "start": 1187.34, "end": 1189.34, "text": " into a 32x6", "tokens": [50565, 666, 257, 8858, 87, 21, 50665], "temperature": 0.0, "avg_logprob": -0.07090030538624731, "compression_ratio": 1.6597222222222223, "no_speech_prob": 0.00031296603265218437}, {"id": 298, "seek": 118334, "start": 1189.34, "end": 1191.34, "text": " so that we can actually perform", "tokens": [50665, 370, 300, 321, 393, 767, 2042, 50765], "temperature": 0.0, "avg_logprob": -0.07090030538624731, "compression_ratio": 1.6597222222222223, "no_speech_prob": 0.00031296603265218437}, {"id": 299, "seek": 118334, "start": 1191.34, "end": 1193.34, "text": " this multiplication over here?", "tokens": [50765, 341, 27290, 670, 510, 30, 50865], "temperature": 0.0, "avg_logprob": -0.07090030538624731, "compression_ratio": 1.6597222222222223, "no_speech_prob": 0.00031296603265218437}, {"id": 300, "seek": 118334, "start": 1193.34, "end": 1195.34, "text": " I'd like to show you that there are", "tokens": [50865, 286, 1116, 411, 281, 855, 291, 300, 456, 366, 50965], "temperature": 0.0, "avg_logprob": -0.07090030538624731, "compression_ratio": 1.6597222222222223, "no_speech_prob": 0.00031296603265218437}, {"id": 301, "seek": 118334, "start": 1195.34, "end": 1197.34, "text": " usually many ways of", "tokens": [50965, 2673, 867, 2098, 295, 51065], "temperature": 0.0, "avg_logprob": -0.07090030538624731, "compression_ratio": 1.6597222222222223, "no_speech_prob": 0.00031296603265218437}, {"id": 302, "seek": 118334, "start": 1197.34, "end": 1199.34, "text": " implementing what you'd like to do", "tokens": [51065, 18114, 437, 291, 1116, 411, 281, 360, 51165], "temperature": 0.0, "avg_logprob": -0.07090030538624731, "compression_ratio": 1.6597222222222223, "no_speech_prob": 0.00031296603265218437}, {"id": 303, "seek": 118334, "start": 1199.34, "end": 1201.34, "text": " in Torch.", "tokens": [51165, 294, 7160, 339, 13, 51265], "temperature": 0.0, "avg_logprob": -0.07090030538624731, "compression_ratio": 1.6597222222222223, "no_speech_prob": 0.00031296603265218437}, {"id": 304, "seek": 118334, "start": 1201.34, "end": 1203.34, "text": " And some of them will be faster, better, shorter, etc.", "tokens": [51265, 400, 512, 295, 552, 486, 312, 4663, 11, 1101, 11, 11639, 11, 5183, 13, 51365], "temperature": 0.0, "avg_logprob": -0.07090030538624731, "compression_ratio": 1.6597222222222223, "no_speech_prob": 0.00031296603265218437}, {"id": 305, "seek": 118334, "start": 1203.34, "end": 1205.34, "text": " And that's because Torch is", "tokens": [51365, 400, 300, 311, 570, 7160, 339, 307, 51465], "temperature": 0.0, "avg_logprob": -0.07090030538624731, "compression_ratio": 1.6597222222222223, "no_speech_prob": 0.00031296603265218437}, {"id": 306, "seek": 118334, "start": 1205.34, "end": 1207.34, "text": " a very large library,", "tokens": [51465, 257, 588, 2416, 6405, 11, 51565], "temperature": 0.0, "avg_logprob": -0.07090030538624731, "compression_ratio": 1.6597222222222223, "no_speech_prob": 0.00031296603265218437}, {"id": 307, "seek": 118334, "start": 1207.34, "end": 1209.34, "text": " and it's got lots and lots of functions.", "tokens": [51565, 293, 309, 311, 658, 3195, 293, 3195, 295, 6828, 13, 51665], "temperature": 0.0, "avg_logprob": -0.07090030538624731, "compression_ratio": 1.6597222222222223, "no_speech_prob": 0.00031296603265218437}, {"id": 308, "seek": 118334, "start": 1209.34, "end": 1211.34, "text": " So if we just go to the documentation and click on Torch,", "tokens": [51665, 407, 498, 321, 445, 352, 281, 264, 14333, 293, 2052, 322, 7160, 339, 11, 51765], "temperature": 0.0, "avg_logprob": -0.07090030538624731, "compression_ratio": 1.6597222222222223, "no_speech_prob": 0.00031296603265218437}, {"id": 309, "seek": 118334, "start": 1211.34, "end": 1213.34, "text": " you'll see that my slider here", "tokens": [51765, 291, 603, 536, 300, 452, 26046, 510, 51865], "temperature": 0.0, "avg_logprob": -0.07090030538624731, "compression_ratio": 1.6597222222222223, "no_speech_prob": 0.00031296603265218437}, {"id": 310, "seek": 121334, "start": 1213.34, "end": 1215.34, "text": " is very tiny.", "tokens": [50365, 307, 588, 5870, 13, 50465], "temperature": 0.0, "avg_logprob": -0.09879184614682028, "compression_ratio": 1.8464566929133859, "no_speech_prob": 0.00020112913625780493}, {"id": 311, "seek": 121334, "start": 1215.34, "end": 1217.34, "text": " And that's because there are so many functions", "tokens": [50465, 400, 300, 311, 570, 456, 366, 370, 867, 6828, 50565], "temperature": 0.0, "avg_logprob": -0.09879184614682028, "compression_ratio": 1.8464566929133859, "no_speech_prob": 0.00020112913625780493}, {"id": 312, "seek": 121334, "start": 1217.34, "end": 1219.34, "text": " that you can call on these tensors", "tokens": [50565, 300, 291, 393, 818, 322, 613, 10688, 830, 50665], "temperature": 0.0, "avg_logprob": -0.09879184614682028, "compression_ratio": 1.8464566929133859, "no_speech_prob": 0.00020112913625780493}, {"id": 313, "seek": 121334, "start": 1219.34, "end": 1221.34, "text": " to transform them, create them,", "tokens": [50665, 281, 4088, 552, 11, 1884, 552, 11, 50765], "temperature": 0.0, "avg_logprob": -0.09879184614682028, "compression_ratio": 1.8464566929133859, "no_speech_prob": 0.00020112913625780493}, {"id": 314, "seek": 121334, "start": 1221.34, "end": 1223.34, "text": " multiply them, add them,", "tokens": [50765, 12972, 552, 11, 909, 552, 11, 50865], "temperature": 0.0, "avg_logprob": -0.09879184614682028, "compression_ratio": 1.8464566929133859, "no_speech_prob": 0.00020112913625780493}, {"id": 315, "seek": 121334, "start": 1223.34, "end": 1225.34, "text": " perform all kinds of different operations on them.", "tokens": [50865, 2042, 439, 3685, 295, 819, 7705, 322, 552, 13, 50965], "temperature": 0.0, "avg_logprob": -0.09879184614682028, "compression_ratio": 1.8464566929133859, "no_speech_prob": 0.00020112913625780493}, {"id": 316, "seek": 121334, "start": 1225.34, "end": 1227.34, "text": " And so this is kind of like", "tokens": [50965, 400, 370, 341, 307, 733, 295, 411, 51065], "temperature": 0.0, "avg_logprob": -0.09879184614682028, "compression_ratio": 1.8464566929133859, "no_speech_prob": 0.00020112913625780493}, {"id": 317, "seek": 121334, "start": 1227.34, "end": 1229.34, "text": " the space of possibility,", "tokens": [51065, 264, 1901, 295, 7959, 11, 51165], "temperature": 0.0, "avg_logprob": -0.09879184614682028, "compression_ratio": 1.8464566929133859, "no_speech_prob": 0.00020112913625780493}, {"id": 318, "seek": 121334, "start": 1229.34, "end": 1231.34, "text": " if you will.", "tokens": [51165, 498, 291, 486, 13, 51265], "temperature": 0.0, "avg_logprob": -0.09879184614682028, "compression_ratio": 1.8464566929133859, "no_speech_prob": 0.00020112913625780493}, {"id": 319, "seek": 121334, "start": 1231.34, "end": 1233.34, "text": " Now one of the things that you can do", "tokens": [51265, 823, 472, 295, 264, 721, 300, 291, 393, 360, 51365], "temperature": 0.0, "avg_logprob": -0.09879184614682028, "compression_ratio": 1.8464566929133859, "no_speech_prob": 0.00020112913625780493}, {"id": 320, "seek": 121334, "start": 1233.34, "end": 1235.34, "text": " is if we can control F for concatenate.", "tokens": [51365, 307, 498, 321, 393, 1969, 479, 337, 1588, 7186, 473, 13, 51465], "temperature": 0.0, "avg_logprob": -0.09879184614682028, "compression_ratio": 1.8464566929133859, "no_speech_prob": 0.00020112913625780493}, {"id": 321, "seek": 121334, "start": 1235.34, "end": 1237.34, "text": " And we see that there's a function", "tokens": [51465, 400, 321, 536, 300, 456, 311, 257, 2445, 51565], "temperature": 0.0, "avg_logprob": -0.09879184614682028, "compression_ratio": 1.8464566929133859, "no_speech_prob": 0.00020112913625780493}, {"id": 322, "seek": 121334, "start": 1237.34, "end": 1239.34, "text": " torch.cat, short for concatenate.", "tokens": [51565, 3930, 339, 13, 18035, 11, 2099, 337, 1588, 7186, 473, 13, 51665], "temperature": 0.0, "avg_logprob": -0.09879184614682028, "compression_ratio": 1.8464566929133859, "no_speech_prob": 0.00020112913625780493}, {"id": 323, "seek": 121334, "start": 1239.34, "end": 1241.34, "text": " And this concatenate", "tokens": [51665, 400, 341, 1588, 7186, 473, 51765], "temperature": 0.0, "avg_logprob": -0.09879184614682028, "compression_ratio": 1.8464566929133859, "no_speech_prob": 0.00020112913625780493}, {"id": 324, "seek": 121334, "start": 1241.34, "end": 1243.34, "text": " is a given sequence of tensors", "tokens": [51765, 307, 257, 2212, 8310, 295, 10688, 830, 51865], "temperature": 0.0, "avg_logprob": -0.09879184614682028, "compression_ratio": 1.8464566929133859, "no_speech_prob": 0.00020112913625780493}, {"id": 325, "seek": 124334, "start": 1243.34, "end": 1245.34, "text": " of a given dimension.", "tokens": [50365, 295, 257, 2212, 10139, 13, 50465], "temperature": 0.0, "avg_logprob": -0.12175297924852747, "compression_ratio": 1.8, "no_speech_prob": 0.0004432654823176563}, {"id": 326, "seek": 124334, "start": 1245.34, "end": 1247.34, "text": " And these tensors must have the same shape, etc.", "tokens": [50465, 400, 613, 10688, 830, 1633, 362, 264, 912, 3909, 11, 5183, 13, 50565], "temperature": 0.0, "avg_logprob": -0.12175297924852747, "compression_ratio": 1.8, "no_speech_prob": 0.0004432654823176563}, {"id": 327, "seek": 124334, "start": 1247.34, "end": 1249.34, "text": " So we can use the concatenate operation", "tokens": [50565, 407, 321, 393, 764, 264, 1588, 7186, 473, 6916, 50665], "temperature": 0.0, "avg_logprob": -0.12175297924852747, "compression_ratio": 1.8, "no_speech_prob": 0.0004432654823176563}, {"id": 328, "seek": 124334, "start": 1249.34, "end": 1251.34, "text": " to, in a naive way,", "tokens": [50665, 281, 11, 294, 257, 29052, 636, 11, 50765], "temperature": 0.0, "avg_logprob": -0.12175297924852747, "compression_ratio": 1.8, "no_speech_prob": 0.0004432654823176563}, {"id": 329, "seek": 124334, "start": 1251.34, "end": 1253.34, "text": " concatenate these three embeddings", "tokens": [50765, 1588, 7186, 473, 613, 1045, 12240, 29432, 50865], "temperature": 0.0, "avg_logprob": -0.12175297924852747, "compression_ratio": 1.8, "no_speech_prob": 0.0004432654823176563}, {"id": 330, "seek": 124334, "start": 1253.34, "end": 1255.34, "text": " for each input.", "tokens": [50865, 337, 1184, 4846, 13, 50965], "temperature": 0.0, "avg_logprob": -0.12175297924852747, "compression_ratio": 1.8, "no_speech_prob": 0.0004432654823176563}, {"id": 331, "seek": 124334, "start": 1255.34, "end": 1257.34, "text": " So in this case, we have", "tokens": [50965, 407, 294, 341, 1389, 11, 321, 362, 51065], "temperature": 0.0, "avg_logprob": -0.12175297924852747, "compression_ratio": 1.8, "no_speech_prob": 0.0004432654823176563}, {"id": 332, "seek": 124334, "start": 1257.34, "end": 1259.34, "text": " emb of the shape.", "tokens": [51065, 4605, 295, 264, 3909, 13, 51165], "temperature": 0.0, "avg_logprob": -0.12175297924852747, "compression_ratio": 1.8, "no_speech_prob": 0.0004432654823176563}, {"id": 333, "seek": 124334, "start": 1259.34, "end": 1261.34, "text": " And really what we want to do", "tokens": [51165, 400, 534, 437, 321, 528, 281, 360, 51265], "temperature": 0.0, "avg_logprob": -0.12175297924852747, "compression_ratio": 1.8, "no_speech_prob": 0.0004432654823176563}, {"id": 334, "seek": 124334, "start": 1261.34, "end": 1263.34, "text": " is we want to retrieve these three parts", "tokens": [51265, 307, 321, 528, 281, 30254, 613, 1045, 3166, 51365], "temperature": 0.0, "avg_logprob": -0.12175297924852747, "compression_ratio": 1.8, "no_speech_prob": 0.0004432654823176563}, {"id": 335, "seek": 124334, "start": 1263.34, "end": 1265.34, "text": " and concatenate them.", "tokens": [51365, 293, 1588, 7186, 473, 552, 13, 51465], "temperature": 0.0, "avg_logprob": -0.12175297924852747, "compression_ratio": 1.8, "no_speech_prob": 0.0004432654823176563}, {"id": 336, "seek": 124334, "start": 1265.34, "end": 1267.34, "text": " So we want to grab all the examples.", "tokens": [51465, 407, 321, 528, 281, 4444, 439, 264, 5110, 13, 51565], "temperature": 0.0, "avg_logprob": -0.12175297924852747, "compression_ratio": 1.8, "no_speech_prob": 0.0004432654823176563}, {"id": 337, "seek": 124334, "start": 1267.34, "end": 1269.34, "text": " We want to grab", "tokens": [51565, 492, 528, 281, 4444, 51665], "temperature": 0.0, "avg_logprob": -0.12175297924852747, "compression_ratio": 1.8, "no_speech_prob": 0.0004432654823176563}, {"id": 338, "seek": 124334, "start": 1269.34, "end": 1271.34, "text": " first the zeroth", "tokens": [51665, 700, 264, 44746, 900, 51765], "temperature": 0.0, "avg_logprob": -0.12175297924852747, "compression_ratio": 1.8, "no_speech_prob": 0.0004432654823176563}, {"id": 339, "seek": 124334, "start": 1271.34, "end": 1273.34, "text": " and then", "tokens": [51765, 293, 550, 51865], "temperature": 0.0, "avg_logprob": -0.12175297924852747, "compression_ratio": 1.8, "no_speech_prob": 0.0004432654823176563}, {"id": 340, "seek": 127334, "start": 1273.34, "end": 1275.34, "text": " index.", "tokens": [50365, 8186, 13, 50465], "temperature": 0.0, "avg_logprob": -0.07119348116010149, "compression_ratio": 1.7647058823529411, "no_speech_prob": 0.0014402607921510935}, {"id": 341, "seek": 127334, "start": 1275.34, "end": 1277.34, "text": " And then all of this.", "tokens": [50465, 400, 550, 439, 295, 341, 13, 50565], "temperature": 0.0, "avg_logprob": -0.07119348116010149, "compression_ratio": 1.7647058823529411, "no_speech_prob": 0.0014402607921510935}, {"id": 342, "seek": 127334, "start": 1277.34, "end": 1279.34, "text": " So this plucks out", "tokens": [50565, 407, 341, 499, 15493, 484, 50665], "temperature": 0.0, "avg_logprob": -0.07119348116010149, "compression_ratio": 1.7647058823529411, "no_speech_prob": 0.0014402607921510935}, {"id": 343, "seek": 127334, "start": 1279.34, "end": 1281.34, "text": " the 32 by 2", "tokens": [50665, 264, 8858, 538, 568, 50765], "temperature": 0.0, "avg_logprob": -0.07119348116010149, "compression_ratio": 1.7647058823529411, "no_speech_prob": 0.0014402607921510935}, {"id": 344, "seek": 127334, "start": 1281.34, "end": 1283.34, "text": " embeddings of just", "tokens": [50765, 12240, 29432, 295, 445, 50865], "temperature": 0.0, "avg_logprob": -0.07119348116010149, "compression_ratio": 1.7647058823529411, "no_speech_prob": 0.0014402607921510935}, {"id": 345, "seek": 127334, "start": 1283.34, "end": 1285.34, "text": " the first word here.", "tokens": [50865, 264, 700, 1349, 510, 13, 50965], "temperature": 0.0, "avg_logprob": -0.07119348116010149, "compression_ratio": 1.7647058823529411, "no_speech_prob": 0.0014402607921510935}, {"id": 346, "seek": 127334, "start": 1285.34, "end": 1287.34, "text": " And so basically", "tokens": [50965, 400, 370, 1936, 51065], "temperature": 0.0, "avg_logprob": -0.07119348116010149, "compression_ratio": 1.7647058823529411, "no_speech_prob": 0.0014402607921510935}, {"id": 347, "seek": 127334, "start": 1287.34, "end": 1289.34, "text": " we want this guy,", "tokens": [51065, 321, 528, 341, 2146, 11, 51165], "temperature": 0.0, "avg_logprob": -0.07119348116010149, "compression_ratio": 1.7647058823529411, "no_speech_prob": 0.0014402607921510935}, {"id": 348, "seek": 127334, "start": 1289.34, "end": 1291.34, "text": " we want the first dimension,", "tokens": [51165, 321, 528, 264, 700, 10139, 11, 51265], "temperature": 0.0, "avg_logprob": -0.07119348116010149, "compression_ratio": 1.7647058823529411, "no_speech_prob": 0.0014402607921510935}, {"id": 349, "seek": 127334, "start": 1291.34, "end": 1293.34, "text": " and we want the second dimension.", "tokens": [51265, 293, 321, 528, 264, 1150, 10139, 13, 51365], "temperature": 0.0, "avg_logprob": -0.07119348116010149, "compression_ratio": 1.7647058823529411, "no_speech_prob": 0.0014402607921510935}, {"id": 350, "seek": 127334, "start": 1293.34, "end": 1295.34, "text": " And these are the three pieces individually.", "tokens": [51365, 400, 613, 366, 264, 1045, 3755, 16652, 13, 51465], "temperature": 0.0, "avg_logprob": -0.07119348116010149, "compression_ratio": 1.7647058823529411, "no_speech_prob": 0.0014402607921510935}, {"id": 351, "seek": 127334, "start": 1295.34, "end": 1297.34, "text": " And then we want to", "tokens": [51465, 400, 550, 321, 528, 281, 51565], "temperature": 0.0, "avg_logprob": -0.07119348116010149, "compression_ratio": 1.7647058823529411, "no_speech_prob": 0.0014402607921510935}, {"id": 352, "seek": 127334, "start": 1297.34, "end": 1299.34, "text": " treat this as a sequence", "tokens": [51565, 2387, 341, 382, 257, 8310, 51665], "temperature": 0.0, "avg_logprob": -0.07119348116010149, "compression_ratio": 1.7647058823529411, "no_speech_prob": 0.0014402607921510935}, {"id": 353, "seek": 127334, "start": 1299.34, "end": 1301.34, "text": " and we want to torch.cat", "tokens": [51665, 293, 321, 528, 281, 27822, 13, 18035, 51765], "temperature": 0.0, "avg_logprob": -0.07119348116010149, "compression_ratio": 1.7647058823529411, "no_speech_prob": 0.0014402607921510935}, {"id": 354, "seek": 127334, "start": 1301.34, "end": 1303.34, "text": " on that sequence.", "tokens": [51765, 322, 300, 8310, 13, 51865], "temperature": 0.0, "avg_logprob": -0.07119348116010149, "compression_ratio": 1.7647058823529411, "no_speech_prob": 0.0014402607921510935}, {"id": 355, "seek": 130334, "start": 1303.34, "end": 1305.34, "text": " torch.cat takes a", "tokens": [50365, 27822, 13, 18035, 2516, 257, 50465], "temperature": 0.0, "avg_logprob": -0.05791057962359804, "compression_ratio": 1.7183673469387755, "no_speech_prob": 0.0005528069450519979}, {"id": 356, "seek": 130334, "start": 1305.34, "end": 1307.34, "text": " sequence of tensors", "tokens": [50465, 8310, 295, 10688, 830, 50565], "temperature": 0.0, "avg_logprob": -0.05791057962359804, "compression_ratio": 1.7183673469387755, "no_speech_prob": 0.0005528069450519979}, {"id": 357, "seek": 130334, "start": 1307.34, "end": 1309.34, "text": " and then we have to tell it along which dimension", "tokens": [50565, 293, 550, 321, 362, 281, 980, 309, 2051, 597, 10139, 50665], "temperature": 0.0, "avg_logprob": -0.05791057962359804, "compression_ratio": 1.7183673469387755, "no_speech_prob": 0.0005528069450519979}, {"id": 358, "seek": 130334, "start": 1309.34, "end": 1311.34, "text": " to concatenate.", "tokens": [50665, 281, 1588, 7186, 473, 13, 50765], "temperature": 0.0, "avg_logprob": -0.05791057962359804, "compression_ratio": 1.7183673469387755, "no_speech_prob": 0.0005528069450519979}, {"id": 359, "seek": 130334, "start": 1311.34, "end": 1313.34, "text": " So in this case, all these are 32 by 2", "tokens": [50765, 407, 294, 341, 1389, 11, 439, 613, 366, 8858, 538, 568, 50865], "temperature": 0.0, "avg_logprob": -0.05791057962359804, "compression_ratio": 1.7183673469387755, "no_speech_prob": 0.0005528069450519979}, {"id": 360, "seek": 130334, "start": 1313.34, "end": 1315.34, "text": " and we want to concatenate not across", "tokens": [50865, 293, 321, 528, 281, 1588, 7186, 473, 406, 2108, 50965], "temperature": 0.0, "avg_logprob": -0.05791057962359804, "compression_ratio": 1.7183673469387755, "no_speech_prob": 0.0005528069450519979}, {"id": 361, "seek": 130334, "start": 1315.34, "end": 1317.34, "text": " dimension 0, but across dimension 1.", "tokens": [50965, 10139, 1958, 11, 457, 2108, 10139, 502, 13, 51065], "temperature": 0.0, "avg_logprob": -0.05791057962359804, "compression_ratio": 1.7183673469387755, "no_speech_prob": 0.0005528069450519979}, {"id": 362, "seek": 130334, "start": 1317.34, "end": 1319.34, "text": " So passing in 1", "tokens": [51065, 407, 8437, 294, 502, 51165], "temperature": 0.0, "avg_logprob": -0.05791057962359804, "compression_ratio": 1.7183673469387755, "no_speech_prob": 0.0005528069450519979}, {"id": 363, "seek": 130334, "start": 1319.34, "end": 1321.34, "text": " gives us a result", "tokens": [51165, 2709, 505, 257, 1874, 51265], "temperature": 0.0, "avg_logprob": -0.05791057962359804, "compression_ratio": 1.7183673469387755, "no_speech_prob": 0.0005528069450519979}, {"id": 364, "seek": 130334, "start": 1321.34, "end": 1323.34, "text": " that the shape of this is 32 by 6", "tokens": [51265, 300, 264, 3909, 295, 341, 307, 8858, 538, 1386, 51365], "temperature": 0.0, "avg_logprob": -0.05791057962359804, "compression_ratio": 1.7183673469387755, "no_speech_prob": 0.0005528069450519979}, {"id": 365, "seek": 130334, "start": 1323.34, "end": 1325.34, "text": " exactly as we'd like.", "tokens": [51365, 2293, 382, 321, 1116, 411, 13, 51465], "temperature": 0.0, "avg_logprob": -0.05791057962359804, "compression_ratio": 1.7183673469387755, "no_speech_prob": 0.0005528069450519979}, {"id": 366, "seek": 130334, "start": 1325.34, "end": 1327.34, "text": " So that basically took 32 and", "tokens": [51465, 407, 300, 1936, 1890, 8858, 293, 51565], "temperature": 0.0, "avg_logprob": -0.05791057962359804, "compression_ratio": 1.7183673469387755, "no_speech_prob": 0.0005528069450519979}, {"id": 367, "seek": 130334, "start": 1327.34, "end": 1329.34, "text": " squashed these by concatenating", "tokens": [51565, 2339, 12219, 613, 538, 1588, 7186, 990, 51665], "temperature": 0.0, "avg_logprob": -0.05791057962359804, "compression_ratio": 1.7183673469387755, "no_speech_prob": 0.0005528069450519979}, {"id": 368, "seek": 130334, "start": 1329.34, "end": 1331.34, "text": " them into 32 by 6.", "tokens": [51665, 552, 666, 8858, 538, 1386, 13, 51765], "temperature": 0.0, "avg_logprob": -0.05791057962359804, "compression_ratio": 1.7183673469387755, "no_speech_prob": 0.0005528069450519979}, {"id": 369, "seek": 130334, "start": 1331.34, "end": 1333.34, "text": " Now this is kind of ugly because", "tokens": [51765, 823, 341, 307, 733, 295, 12246, 570, 51865], "temperature": 0.0, "avg_logprob": -0.05791057962359804, "compression_ratio": 1.7183673469387755, "no_speech_prob": 0.0005528069450519979}, {"id": 370, "seek": 133334, "start": 1333.34, "end": 1335.34, "text": " this code would not generalize", "tokens": [50365, 341, 3089, 576, 406, 2674, 1125, 50465], "temperature": 0.0, "avg_logprob": -0.06776013768705211, "compression_ratio": 1.7362637362637363, "no_speech_prob": 0.00012054687977069989}, {"id": 371, "seek": 133334, "start": 1335.34, "end": 1337.34, "text": " if we want to later change the block size.", "tokens": [50465, 498, 321, 528, 281, 1780, 1319, 264, 3461, 2744, 13, 50565], "temperature": 0.0, "avg_logprob": -0.06776013768705211, "compression_ratio": 1.7362637362637363, "no_speech_prob": 0.00012054687977069989}, {"id": 372, "seek": 133334, "start": 1337.34, "end": 1339.34, "text": " Right now we have three inputs,", "tokens": [50565, 1779, 586, 321, 362, 1045, 15743, 11, 50665], "temperature": 0.0, "avg_logprob": -0.06776013768705211, "compression_ratio": 1.7362637362637363, "no_speech_prob": 0.00012054687977069989}, {"id": 373, "seek": 133334, "start": 1339.34, "end": 1341.34, "text": " three words, but what if we had", "tokens": [50665, 1045, 2283, 11, 457, 437, 498, 321, 632, 50765], "temperature": 0.0, "avg_logprob": -0.06776013768705211, "compression_ratio": 1.7362637362637363, "no_speech_prob": 0.00012054687977069989}, {"id": 374, "seek": 133334, "start": 1341.34, "end": 1343.34, "text": " five? Then here we would have to", "tokens": [50765, 1732, 30, 1396, 510, 321, 576, 362, 281, 50865], "temperature": 0.0, "avg_logprob": -0.06776013768705211, "compression_ratio": 1.7362637362637363, "no_speech_prob": 0.00012054687977069989}, {"id": 375, "seek": 133334, "start": 1343.34, "end": 1345.34, "text": " change the code because I'm indexing directly.", "tokens": [50865, 1319, 264, 3089, 570, 286, 478, 8186, 278, 3838, 13, 50965], "temperature": 0.0, "avg_logprob": -0.06776013768705211, "compression_ratio": 1.7362637362637363, "no_speech_prob": 0.00012054687977069989}, {"id": 376, "seek": 133334, "start": 1345.34, "end": 1347.34, "text": " Well, torch comes to rescue again", "tokens": [50965, 1042, 11, 27822, 1487, 281, 13283, 797, 51065], "temperature": 0.0, "avg_logprob": -0.06776013768705211, "compression_ratio": 1.7362637362637363, "no_speech_prob": 0.00012054687977069989}, {"id": 377, "seek": 133334, "start": 1347.34, "end": 1349.34, "text": " because there turns out to be", "tokens": [51065, 570, 456, 4523, 484, 281, 312, 51165], "temperature": 0.0, "avg_logprob": -0.06776013768705211, "compression_ratio": 1.7362637362637363, "no_speech_prob": 0.00012054687977069989}, {"id": 378, "seek": 133334, "start": 1349.34, "end": 1351.34, "text": " a function called unbind", "tokens": [51165, 257, 2445, 1219, 517, 65, 471, 51265], "temperature": 0.0, "avg_logprob": -0.06776013768705211, "compression_ratio": 1.7362637362637363, "no_speech_prob": 0.00012054687977069989}, {"id": 379, "seek": 133334, "start": 1351.34, "end": 1353.34, "text": " and it removes a tensor dimension.", "tokens": [51265, 293, 309, 30445, 257, 40863, 10139, 13, 51365], "temperature": 0.0, "avg_logprob": -0.06776013768705211, "compression_ratio": 1.7362637362637363, "no_speech_prob": 0.00012054687977069989}, {"id": 380, "seek": 133334, "start": 1355.34, "end": 1357.34, "text": " So it removes a tensor dimension, returns", "tokens": [51465, 407, 309, 30445, 257, 40863, 10139, 11, 11247, 51565], "temperature": 0.0, "avg_logprob": -0.06776013768705211, "compression_ratio": 1.7362637362637363, "no_speech_prob": 0.00012054687977069989}, {"id": 381, "seek": 133334, "start": 1357.34, "end": 1359.34, "text": " a tuple of all slices along a given", "tokens": [51565, 257, 2604, 781, 295, 439, 19793, 2051, 257, 2212, 51665], "temperature": 0.0, "avg_logprob": -0.06776013768705211, "compression_ratio": 1.7362637362637363, "no_speech_prob": 0.00012054687977069989}, {"id": 382, "seek": 133334, "start": 1359.34, "end": 1361.34, "text": " dimension without it.", "tokens": [51665, 10139, 1553, 309, 13, 51765], "temperature": 0.0, "avg_logprob": -0.06776013768705211, "compression_ratio": 1.7362637362637363, "no_speech_prob": 0.00012054687977069989}, {"id": 383, "seek": 133334, "start": 1361.34, "end": 1363.34, "text": " So this is exactly what we need.", "tokens": [51765, 407, 341, 307, 2293, 437, 321, 643, 13, 51865], "temperature": 0.0, "avg_logprob": -0.06776013768705211, "compression_ratio": 1.7362637362637363, "no_speech_prob": 0.00012054687977069989}, {"id": 384, "seek": 136334, "start": 1363.34, "end": 1365.34, "text": " And basically when we call", "tokens": [50365, 400, 1936, 562, 321, 818, 50465], "temperature": 0.0, "avg_logprob": -0.08272116382916768, "compression_ratio": 1.6797385620915033, "no_speech_prob": 0.00055357173550874}, {"id": 385, "seek": 136334, "start": 1365.34, "end": 1367.34, "text": " torch.unbind", "tokens": [50465, 27822, 13, 409, 65, 471, 50565], "temperature": 0.0, "avg_logprob": -0.08272116382916768, "compression_ratio": 1.6797385620915033, "no_speech_prob": 0.00055357173550874}, {"id": 386, "seek": 136334, "start": 1367.34, "end": 1369.34, "text": " torch.unbind", "tokens": [50565, 27822, 13, 409, 65, 471, 50665], "temperature": 0.0, "avg_logprob": -0.08272116382916768, "compression_ratio": 1.6797385620915033, "no_speech_prob": 0.00055357173550874}, {"id": 387, "seek": 136334, "start": 1369.34, "end": 1371.34, "text": " of m", "tokens": [50665, 295, 275, 50765], "temperature": 0.0, "avg_logprob": -0.08272116382916768, "compression_ratio": 1.6797385620915033, "no_speech_prob": 0.00055357173550874}, {"id": 388, "seek": 136334, "start": 1371.34, "end": 1373.34, "text": " and passing dimension", "tokens": [50765, 293, 8437, 10139, 50865], "temperature": 0.0, "avg_logprob": -0.08272116382916768, "compression_ratio": 1.6797385620915033, "no_speech_prob": 0.00055357173550874}, {"id": 389, "seek": 136334, "start": 1373.34, "end": 1375.34, "text": " 1", "tokens": [50865, 502, 50965], "temperature": 0.0, "avg_logprob": -0.08272116382916768, "compression_ratio": 1.6797385620915033, "no_speech_prob": 0.00055357173550874}, {"id": 390, "seek": 136334, "start": 1375.34, "end": 1377.34, "text": " index 1, this gives us", "tokens": [50965, 8186, 502, 11, 341, 2709, 505, 51065], "temperature": 0.0, "avg_logprob": -0.08272116382916768, "compression_ratio": 1.6797385620915033, "no_speech_prob": 0.00055357173550874}, {"id": 391, "seek": 136334, "start": 1377.34, "end": 1379.34, "text": " a list of", "tokens": [51065, 257, 1329, 295, 51165], "temperature": 0.0, "avg_logprob": -0.08272116382916768, "compression_ratio": 1.6797385620915033, "no_speech_prob": 0.00055357173550874}, {"id": 392, "seek": 136334, "start": 1379.34, "end": 1381.34, "text": " a list of tensors exactly", "tokens": [51165, 257, 1329, 295, 10688, 830, 2293, 51265], "temperature": 0.0, "avg_logprob": -0.08272116382916768, "compression_ratio": 1.6797385620915033, "no_speech_prob": 0.00055357173550874}, {"id": 393, "seek": 136334, "start": 1381.34, "end": 1383.34, "text": " equivalent to this. So running this", "tokens": [51265, 10344, 281, 341, 13, 407, 2614, 341, 51365], "temperature": 0.0, "avg_logprob": -0.08272116382916768, "compression_ratio": 1.6797385620915033, "no_speech_prob": 0.00055357173550874}, {"id": 394, "seek": 136334, "start": 1383.34, "end": 1385.34, "text": " gives us a line", "tokens": [51365, 2709, 505, 257, 1622, 51465], "temperature": 0.0, "avg_logprob": -0.08272116382916768, "compression_ratio": 1.6797385620915033, "no_speech_prob": 0.00055357173550874}, {"id": 395, "seek": 136334, "start": 1385.34, "end": 1387.34, "text": " 3", "tokens": [51465, 805, 51565], "temperature": 0.0, "avg_logprob": -0.08272116382916768, "compression_ratio": 1.6797385620915033, "no_speech_prob": 0.00055357173550874}, {"id": 396, "seek": 136334, "start": 1387.34, "end": 1389.34, "text": " and it's exactly this list.", "tokens": [51565, 293, 309, 311, 2293, 341, 1329, 13, 51665], "temperature": 0.0, "avg_logprob": -0.08272116382916768, "compression_ratio": 1.6797385620915033, "no_speech_prob": 0.00055357173550874}, {"id": 397, "seek": 136334, "start": 1389.34, "end": 1391.34, "text": " So we can call torch.cat on it", "tokens": [51665, 407, 321, 393, 818, 27822, 13, 18035, 322, 309, 51765], "temperature": 0.0, "avg_logprob": -0.08272116382916768, "compression_ratio": 1.6797385620915033, "no_speech_prob": 0.00055357173550874}, {"id": 398, "seek": 136334, "start": 1391.34, "end": 1393.34, "text": " and", "tokens": [51765, 293, 51865], "temperature": 0.0, "avg_logprob": -0.08272116382916768, "compression_ratio": 1.6797385620915033, "no_speech_prob": 0.00055357173550874}, {"id": 399, "seek": 139334, "start": 1393.34, "end": 1395.34, "text": " the first dimension.", "tokens": [50365, 264, 700, 10139, 13, 50465], "temperature": 0.0, "avg_logprob": -0.12161856112272842, "compression_ratio": 1.651685393258427, "no_speech_prob": 0.0005508055328391492}, {"id": 400, "seek": 139334, "start": 1395.34, "end": 1397.34, "text": " And this works.", "tokens": [50465, 400, 341, 1985, 13, 50565], "temperature": 0.0, "avg_logprob": -0.12161856112272842, "compression_ratio": 1.651685393258427, "no_speech_prob": 0.0005508055328391492}, {"id": 401, "seek": 139334, "start": 1397.34, "end": 1399.34, "text": " And this shape is the same.", "tokens": [50565, 400, 341, 3909, 307, 264, 912, 13, 50665], "temperature": 0.0, "avg_logprob": -0.12161856112272842, "compression_ratio": 1.651685393258427, "no_speech_prob": 0.0005508055328391492}, {"id": 402, "seek": 139334, "start": 1399.34, "end": 1401.34, "text": " But now this is, it doesn't matter if we", "tokens": [50665, 583, 586, 341, 307, 11, 309, 1177, 380, 1871, 498, 321, 50765], "temperature": 0.0, "avg_logprob": -0.12161856112272842, "compression_ratio": 1.651685393258427, "no_speech_prob": 0.0005508055328391492}, {"id": 403, "seek": 139334, "start": 1401.34, "end": 1403.34, "text": " have block size 3 or 5 or 10,", "tokens": [50765, 362, 3461, 2744, 805, 420, 1025, 420, 1266, 11, 50865], "temperature": 0.0, "avg_logprob": -0.12161856112272842, "compression_ratio": 1.651685393258427, "no_speech_prob": 0.0005508055328391492}, {"id": 404, "seek": 139334, "start": 1403.34, "end": 1405.34, "text": " this will just work.", "tokens": [50865, 341, 486, 445, 589, 13, 50965], "temperature": 0.0, "avg_logprob": -0.12161856112272842, "compression_ratio": 1.651685393258427, "no_speech_prob": 0.0005508055328391492}, {"id": 405, "seek": 139334, "start": 1405.34, "end": 1407.34, "text": " So this is one way to do it. But it turns out that", "tokens": [50965, 407, 341, 307, 472, 636, 281, 360, 309, 13, 583, 309, 4523, 484, 300, 51065], "temperature": 0.0, "avg_logprob": -0.12161856112272842, "compression_ratio": 1.651685393258427, "no_speech_prob": 0.0005508055328391492}, {"id": 406, "seek": 139334, "start": 1407.34, "end": 1409.34, "text": " in this case, there's actually a", "tokens": [51065, 294, 341, 1389, 11, 456, 311, 767, 257, 51165], "temperature": 0.0, "avg_logprob": -0.12161856112272842, "compression_ratio": 1.651685393258427, "no_speech_prob": 0.0005508055328391492}, {"id": 407, "seek": 139334, "start": 1409.34, "end": 1411.34, "text": " significantly better and more efficient way.", "tokens": [51165, 10591, 1101, 293, 544, 7148, 636, 13, 51265], "temperature": 0.0, "avg_logprob": -0.12161856112272842, "compression_ratio": 1.651685393258427, "no_speech_prob": 0.0005508055328391492}, {"id": 408, "seek": 139334, "start": 1411.34, "end": 1413.34, "text": " And this gives me an opportunity to hint", "tokens": [51265, 400, 341, 2709, 385, 364, 2650, 281, 12075, 51365], "temperature": 0.0, "avg_logprob": -0.12161856112272842, "compression_ratio": 1.651685393258427, "no_speech_prob": 0.0005508055328391492}, {"id": 409, "seek": 139334, "start": 1413.34, "end": 1415.34, "text": " at some of the internals of torch.tensor.", "tokens": [51365, 412, 512, 295, 264, 2154, 1124, 295, 27822, 13, 83, 23153, 13, 51465], "temperature": 0.0, "avg_logprob": -0.12161856112272842, "compression_ratio": 1.651685393258427, "no_speech_prob": 0.0005508055328391492}, {"id": 410, "seek": 139334, "start": 1415.34, "end": 1417.34, "text": " So let's create", "tokens": [51465, 407, 718, 311, 1884, 51565], "temperature": 0.0, "avg_logprob": -0.12161856112272842, "compression_ratio": 1.651685393258427, "no_speech_prob": 0.0005508055328391492}, {"id": 411, "seek": 139334, "start": 1417.34, "end": 1419.34, "text": " an array here", "tokens": [51565, 364, 10225, 510, 51665], "temperature": 0.0, "avg_logprob": -0.12161856112272842, "compression_ratio": 1.651685393258427, "no_speech_prob": 0.0005508055328391492}, {"id": 412, "seek": 139334, "start": 1419.34, "end": 1421.34, "text": " of elements from", "tokens": [51665, 295, 4959, 490, 51765], "temperature": 0.0, "avg_logprob": -0.12161856112272842, "compression_ratio": 1.651685393258427, "no_speech_prob": 0.0005508055328391492}, {"id": 413, "seek": 139334, "start": 1421.34, "end": 1423.34, "text": " 0 to 17. And the shape of", "tokens": [51765, 1958, 281, 3282, 13, 400, 264, 3909, 295, 51865], "temperature": 0.0, "avg_logprob": -0.12161856112272842, "compression_ratio": 1.651685393258427, "no_speech_prob": 0.0005508055328391492}, {"id": 414, "seek": 142334, "start": 1423.34, "end": 1425.34, "text": " this is just 18.", "tokens": [50365, 341, 307, 445, 2443, 13, 50465], "temperature": 0.0, "avg_logprob": -0.04208688285407119, "compression_ratio": 1.7330316742081449, "no_speech_prob": 0.0005360675859265029}, {"id": 415, "seek": 142334, "start": 1425.34, "end": 1427.34, "text": " It's a single vector of 18 numbers.", "tokens": [50465, 467, 311, 257, 2167, 8062, 295, 2443, 3547, 13, 50565], "temperature": 0.0, "avg_logprob": -0.04208688285407119, "compression_ratio": 1.7330316742081449, "no_speech_prob": 0.0005360675859265029}, {"id": 416, "seek": 142334, "start": 1427.34, "end": 1429.34, "text": " It turns out that we can", "tokens": [50565, 467, 4523, 484, 300, 321, 393, 50665], "temperature": 0.0, "avg_logprob": -0.04208688285407119, "compression_ratio": 1.7330316742081449, "no_speech_prob": 0.0005360675859265029}, {"id": 417, "seek": 142334, "start": 1429.34, "end": 1431.34, "text": " very quickly re-represent this", "tokens": [50665, 588, 2661, 319, 12, 19919, 11662, 341, 50765], "temperature": 0.0, "avg_logprob": -0.04208688285407119, "compression_ratio": 1.7330316742081449, "no_speech_prob": 0.0005360675859265029}, {"id": 418, "seek": 142334, "start": 1431.34, "end": 1433.34, "text": " as different sized n-dimensional", "tokens": [50765, 382, 819, 20004, 297, 12, 18759, 50865], "temperature": 0.0, "avg_logprob": -0.04208688285407119, "compression_ratio": 1.7330316742081449, "no_speech_prob": 0.0005360675859265029}, {"id": 419, "seek": 142334, "start": 1433.34, "end": 1435.34, "text": " tensors. We do this by", "tokens": [50865, 10688, 830, 13, 492, 360, 341, 538, 50965], "temperature": 0.0, "avg_logprob": -0.04208688285407119, "compression_ratio": 1.7330316742081449, "no_speech_prob": 0.0005360675859265029}, {"id": 420, "seek": 142334, "start": 1435.34, "end": 1437.34, "text": " calling a view", "tokens": [50965, 5141, 257, 1910, 51065], "temperature": 0.0, "avg_logprob": -0.04208688285407119, "compression_ratio": 1.7330316742081449, "no_speech_prob": 0.0005360675859265029}, {"id": 421, "seek": 142334, "start": 1437.34, "end": 1439.34, "text": " and we can say that actually this is not", "tokens": [51065, 293, 321, 393, 584, 300, 767, 341, 307, 406, 51165], "temperature": 0.0, "avg_logprob": -0.04208688285407119, "compression_ratio": 1.7330316742081449, "no_speech_prob": 0.0005360675859265029}, {"id": 422, "seek": 142334, "start": 1439.34, "end": 1441.34, "text": " a single vector of 18.", "tokens": [51165, 257, 2167, 8062, 295, 2443, 13, 51265], "temperature": 0.0, "avg_logprob": -0.04208688285407119, "compression_ratio": 1.7330316742081449, "no_speech_prob": 0.0005360675859265029}, {"id": 423, "seek": 142334, "start": 1441.34, "end": 1443.34, "text": " This is a 2 by 9 tensor.", "tokens": [51265, 639, 307, 257, 568, 538, 1722, 40863, 13, 51365], "temperature": 0.0, "avg_logprob": -0.04208688285407119, "compression_ratio": 1.7330316742081449, "no_speech_prob": 0.0005360675859265029}, {"id": 424, "seek": 142334, "start": 1443.34, "end": 1445.34, "text": " Or alternatively", "tokens": [51365, 1610, 8535, 356, 51465], "temperature": 0.0, "avg_logprob": -0.04208688285407119, "compression_ratio": 1.7330316742081449, "no_speech_prob": 0.0005360675859265029}, {"id": 425, "seek": 142334, "start": 1445.34, "end": 1447.34, "text": " this is a 9 by 2 tensor.", "tokens": [51465, 341, 307, 257, 1722, 538, 568, 40863, 13, 51565], "temperature": 0.0, "avg_logprob": -0.04208688285407119, "compression_ratio": 1.7330316742081449, "no_speech_prob": 0.0005360675859265029}, {"id": 426, "seek": 142334, "start": 1447.34, "end": 1449.34, "text": " Or this is actually", "tokens": [51565, 1610, 341, 307, 767, 51665], "temperature": 0.0, "avg_logprob": -0.04208688285407119, "compression_ratio": 1.7330316742081449, "no_speech_prob": 0.0005360675859265029}, {"id": 427, "seek": 142334, "start": 1449.34, "end": 1451.34, "text": " a 3 by 3 by 2 tensor.", "tokens": [51665, 257, 805, 538, 805, 538, 568, 40863, 13, 51765], "temperature": 0.0, "avg_logprob": -0.04208688285407119, "compression_ratio": 1.7330316742081449, "no_speech_prob": 0.0005360675859265029}, {"id": 428, "seek": 142334, "start": 1451.34, "end": 1453.34, "text": " As long as the total number of", "tokens": [51765, 1018, 938, 382, 264, 3217, 1230, 295, 51865], "temperature": 0.0, "avg_logprob": -0.04208688285407119, "compression_ratio": 1.7330316742081449, "no_speech_prob": 0.0005360675859265029}, {"id": 429, "seek": 145334, "start": 1453.34, "end": 1455.34, "text": " elements here multiply to be", "tokens": [50365, 4959, 510, 12972, 281, 312, 50465], "temperature": 0.0, "avg_logprob": -0.08416542816162109, "compression_ratio": 1.7327935222672064, "no_speech_prob": 0.00012217843323014677}, {"id": 430, "seek": 145334, "start": 1455.34, "end": 1457.34, "text": " the same, this will just work.", "tokens": [50465, 264, 912, 11, 341, 486, 445, 589, 13, 50565], "temperature": 0.0, "avg_logprob": -0.08416542816162109, "compression_ratio": 1.7327935222672064, "no_speech_prob": 0.00012217843323014677}, {"id": 431, "seek": 145334, "start": 1457.34, "end": 1459.34, "text": " And in PyTorch,", "tokens": [50565, 400, 294, 9953, 51, 284, 339, 11, 50665], "temperature": 0.0, "avg_logprob": -0.08416542816162109, "compression_ratio": 1.7327935222672064, "no_speech_prob": 0.00012217843323014677}, {"id": 432, "seek": 145334, "start": 1459.34, "end": 1461.34, "text": " this operation, calling", "tokens": [50665, 341, 6916, 11, 5141, 50765], "temperature": 0.0, "avg_logprob": -0.08416542816162109, "compression_ratio": 1.7327935222672064, "no_speech_prob": 0.00012217843323014677}, {"id": 433, "seek": 145334, "start": 1461.34, "end": 1463.34, "text": " .view, is extremely efficient.", "tokens": [50765, 2411, 1759, 11, 307, 4664, 7148, 13, 50865], "temperature": 0.0, "avg_logprob": -0.08416542816162109, "compression_ratio": 1.7327935222672064, "no_speech_prob": 0.00012217843323014677}, {"id": 434, "seek": 145334, "start": 1463.34, "end": 1465.34, "text": " And the reason for that is that", "tokens": [50865, 400, 264, 1778, 337, 300, 307, 300, 50965], "temperature": 0.0, "avg_logprob": -0.08416542816162109, "compression_ratio": 1.7327935222672064, "no_speech_prob": 0.00012217843323014677}, {"id": 435, "seek": 145334, "start": 1465.34, "end": 1467.34, "text": " in each tensor, there's", "tokens": [50965, 294, 1184, 40863, 11, 456, 311, 51065], "temperature": 0.0, "avg_logprob": -0.08416542816162109, "compression_ratio": 1.7327935222672064, "no_speech_prob": 0.00012217843323014677}, {"id": 436, "seek": 145334, "start": 1467.34, "end": 1469.34, "text": " something called the underlying storage.", "tokens": [51065, 746, 1219, 264, 14217, 6725, 13, 51165], "temperature": 0.0, "avg_logprob": -0.08416542816162109, "compression_ratio": 1.7327935222672064, "no_speech_prob": 0.00012217843323014677}, {"id": 437, "seek": 145334, "start": 1469.34, "end": 1471.34, "text": " And the storage", "tokens": [51165, 400, 264, 6725, 51265], "temperature": 0.0, "avg_logprob": -0.08416542816162109, "compression_ratio": 1.7327935222672064, "no_speech_prob": 0.00012217843323014677}, {"id": 438, "seek": 145334, "start": 1471.34, "end": 1473.34, "text": " is just the numbers always", "tokens": [51265, 307, 445, 264, 3547, 1009, 51365], "temperature": 0.0, "avg_logprob": -0.08416542816162109, "compression_ratio": 1.7327935222672064, "no_speech_prob": 0.00012217843323014677}, {"id": 439, "seek": 145334, "start": 1473.34, "end": 1475.34, "text": " as a one-dimensional vector. And this is", "tokens": [51365, 382, 257, 472, 12, 18759, 8062, 13, 400, 341, 307, 51465], "temperature": 0.0, "avg_logprob": -0.08416542816162109, "compression_ratio": 1.7327935222672064, "no_speech_prob": 0.00012217843323014677}, {"id": 440, "seek": 145334, "start": 1475.34, "end": 1477.34, "text": " how this tensor is represented", "tokens": [51465, 577, 341, 40863, 307, 10379, 51565], "temperature": 0.0, "avg_logprob": -0.08416542816162109, "compression_ratio": 1.7327935222672064, "no_speech_prob": 0.00012217843323014677}, {"id": 441, "seek": 145334, "start": 1477.34, "end": 1479.34, "text": " in the computer memory. It's always a one-dimensional", "tokens": [51565, 294, 264, 3820, 4675, 13, 467, 311, 1009, 257, 472, 12, 18759, 51665], "temperature": 0.0, "avg_logprob": -0.08416542816162109, "compression_ratio": 1.7327935222672064, "no_speech_prob": 0.00012217843323014677}, {"id": 442, "seek": 145334, "start": 1479.34, "end": 1481.34, "text": " vector.", "tokens": [51665, 8062, 13, 51765], "temperature": 0.0, "avg_logprob": -0.08416542816162109, "compression_ratio": 1.7327935222672064, "no_speech_prob": 0.00012217843323014677}, {"id": 443, "seek": 145334, "start": 1481.34, "end": 1483.34, "text": " But when we call .view,", "tokens": [51765, 583, 562, 321, 818, 2411, 1759, 11, 51865], "temperature": 0.0, "avg_logprob": -0.08416542816162109, "compression_ratio": 1.7327935222672064, "no_speech_prob": 0.00012217843323014677}, {"id": 444, "seek": 148334, "start": 1483.34, "end": 1485.34, "text": " we are manipulating some of", "tokens": [50365, 321, 366, 40805, 512, 295, 50465], "temperature": 0.0, "avg_logprob": -0.04374820604099063, "compression_ratio": 1.790874524714829, "no_speech_prob": 0.000257451698416844}, {"id": 445, "seek": 148334, "start": 1485.34, "end": 1487.34, "text": " attributes of that tensor that", "tokens": [50465, 17212, 295, 300, 40863, 300, 50565], "temperature": 0.0, "avg_logprob": -0.04374820604099063, "compression_ratio": 1.790874524714829, "no_speech_prob": 0.000257451698416844}, {"id": 446, "seek": 148334, "start": 1487.34, "end": 1489.34, "text": " dictate how this one-dimensional", "tokens": [50565, 36071, 577, 341, 472, 12, 18759, 50665], "temperature": 0.0, "avg_logprob": -0.04374820604099063, "compression_ratio": 1.790874524714829, "no_speech_prob": 0.000257451698416844}, {"id": 447, "seek": 148334, "start": 1489.34, "end": 1491.34, "text": " sequence is interpreted to be", "tokens": [50665, 8310, 307, 26749, 281, 312, 50765], "temperature": 0.0, "avg_logprob": -0.04374820604099063, "compression_ratio": 1.790874524714829, "no_speech_prob": 0.000257451698416844}, {"id": 448, "seek": 148334, "start": 1491.34, "end": 1493.34, "text": " an n-dimensional tensor.", "tokens": [50765, 364, 297, 12, 18759, 40863, 13, 50865], "temperature": 0.0, "avg_logprob": -0.04374820604099063, "compression_ratio": 1.790874524714829, "no_speech_prob": 0.000257451698416844}, {"id": 449, "seek": 148334, "start": 1493.34, "end": 1495.34, "text": " And so what's happening here is that", "tokens": [50865, 400, 370, 437, 311, 2737, 510, 307, 300, 50965], "temperature": 0.0, "avg_logprob": -0.04374820604099063, "compression_ratio": 1.790874524714829, "no_speech_prob": 0.000257451698416844}, {"id": 450, "seek": 148334, "start": 1495.34, "end": 1497.34, "text": " no memory is being changed, copied, moved,", "tokens": [50965, 572, 4675, 307, 885, 3105, 11, 25365, 11, 4259, 11, 51065], "temperature": 0.0, "avg_logprob": -0.04374820604099063, "compression_ratio": 1.790874524714829, "no_speech_prob": 0.000257451698416844}, {"id": 451, "seek": 148334, "start": 1497.34, "end": 1499.34, "text": " or created when we call .view.", "tokens": [51065, 420, 2942, 562, 321, 818, 2411, 1759, 13, 51165], "temperature": 0.0, "avg_logprob": -0.04374820604099063, "compression_ratio": 1.790874524714829, "no_speech_prob": 0.000257451698416844}, {"id": 452, "seek": 148334, "start": 1499.34, "end": 1501.34, "text": " The storage is identical.", "tokens": [51165, 440, 6725, 307, 14800, 13, 51265], "temperature": 0.0, "avg_logprob": -0.04374820604099063, "compression_ratio": 1.790874524714829, "no_speech_prob": 0.000257451698416844}, {"id": 453, "seek": 148334, "start": 1501.34, "end": 1503.34, "text": " But when you call .view,", "tokens": [51265, 583, 562, 291, 818, 2411, 1759, 11, 51365], "temperature": 0.0, "avg_logprob": -0.04374820604099063, "compression_ratio": 1.790874524714829, "no_speech_prob": 0.000257451698416844}, {"id": 454, "seek": 148334, "start": 1503.34, "end": 1505.34, "text": " some of the internal", "tokens": [51365, 512, 295, 264, 6920, 51465], "temperature": 0.0, "avg_logprob": -0.04374820604099063, "compression_ratio": 1.790874524714829, "no_speech_prob": 0.000257451698416844}, {"id": 455, "seek": 148334, "start": 1505.34, "end": 1507.34, "text": " attributes of the view of this tensor", "tokens": [51465, 17212, 295, 264, 1910, 295, 341, 40863, 51565], "temperature": 0.0, "avg_logprob": -0.04374820604099063, "compression_ratio": 1.790874524714829, "no_speech_prob": 0.000257451698416844}, {"id": 456, "seek": 148334, "start": 1507.34, "end": 1509.34, "text": " are being manipulated and changed.", "tokens": [51565, 366, 885, 37161, 293, 3105, 13, 51665], "temperature": 0.0, "avg_logprob": -0.04374820604099063, "compression_ratio": 1.790874524714829, "no_speech_prob": 0.000257451698416844}, {"id": 457, "seek": 148334, "start": 1509.34, "end": 1511.34, "text": " In particular, there's something called", "tokens": [51665, 682, 1729, 11, 456, 311, 746, 1219, 51765], "temperature": 0.0, "avg_logprob": -0.04374820604099063, "compression_ratio": 1.790874524714829, "no_speech_prob": 0.000257451698416844}, {"id": 458, "seek": 148334, "start": 1511.34, "end": 1513.34, "text": " storage offset, strides, and", "tokens": [51765, 6725, 18687, 11, 1056, 1875, 11, 293, 51865], "temperature": 0.0, "avg_logprob": -0.04374820604099063, "compression_ratio": 1.790874524714829, "no_speech_prob": 0.000257451698416844}, {"id": 459, "seek": 151334, "start": 1513.34, "end": 1515.34, "text": " shapes, and those are manipulated", "tokens": [50365, 10854, 11, 293, 729, 366, 37161, 50465], "temperature": 0.0, "avg_logprob": -0.0626557623589789, "compression_ratio": 1.7416107382550337, "no_speech_prob": 0.00029493376496247947}, {"id": 460, "seek": 151334, "start": 1515.34, "end": 1517.34, "text": " so that this one-dimensional sequence of bytes", "tokens": [50465, 370, 300, 341, 472, 12, 18759, 8310, 295, 36088, 50565], "temperature": 0.0, "avg_logprob": -0.0626557623589789, "compression_ratio": 1.7416107382550337, "no_speech_prob": 0.00029493376496247947}, {"id": 461, "seek": 151334, "start": 1517.34, "end": 1519.34, "text": " is seen as different n-dimensional arrays.", "tokens": [50565, 307, 1612, 382, 819, 297, 12, 18759, 41011, 13, 50665], "temperature": 0.0, "avg_logprob": -0.0626557623589789, "compression_ratio": 1.7416107382550337, "no_speech_prob": 0.00029493376496247947}, {"id": 462, "seek": 151334, "start": 1519.34, "end": 1521.34, "text": " There's a blog post", "tokens": [50665, 821, 311, 257, 6968, 2183, 50765], "temperature": 0.0, "avg_logprob": -0.0626557623589789, "compression_ratio": 1.7416107382550337, "no_speech_prob": 0.00029493376496247947}, {"id": 463, "seek": 151334, "start": 1521.34, "end": 1523.34, "text": " here from Eric called", "tokens": [50765, 510, 490, 9336, 1219, 50865], "temperature": 0.0, "avg_logprob": -0.0626557623589789, "compression_ratio": 1.7416107382550337, "no_speech_prob": 0.00029493376496247947}, {"id": 464, "seek": 151334, "start": 1523.34, "end": 1525.34, "text": " PyTorch Internals, where he", "tokens": [50865, 9953, 51, 284, 339, 4844, 1124, 11, 689, 415, 50965], "temperature": 0.0, "avg_logprob": -0.0626557623589789, "compression_ratio": 1.7416107382550337, "no_speech_prob": 0.00029493376496247947}, {"id": 465, "seek": 151334, "start": 1525.34, "end": 1527.34, "text": " goes into some of this with respect to tensor", "tokens": [50965, 1709, 666, 512, 295, 341, 365, 3104, 281, 40863, 51065], "temperature": 0.0, "avg_logprob": -0.0626557623589789, "compression_ratio": 1.7416107382550337, "no_speech_prob": 0.00029493376496247947}, {"id": 466, "seek": 151334, "start": 1527.34, "end": 1529.34, "text": " and how the view of a tensor is", "tokens": [51065, 293, 577, 264, 1910, 295, 257, 40863, 307, 51165], "temperature": 0.0, "avg_logprob": -0.0626557623589789, "compression_ratio": 1.7416107382550337, "no_speech_prob": 0.00029493376496247947}, {"id": 467, "seek": 151334, "start": 1529.34, "end": 1531.34, "text": " represented. And this is really just like", "tokens": [51165, 10379, 13, 400, 341, 307, 534, 445, 411, 51265], "temperature": 0.0, "avg_logprob": -0.0626557623589789, "compression_ratio": 1.7416107382550337, "no_speech_prob": 0.00029493376496247947}, {"id": 468, "seek": 151334, "start": 1531.34, "end": 1533.34, "text": " a logical construct", "tokens": [51265, 257, 14978, 7690, 51365], "temperature": 0.0, "avg_logprob": -0.0626557623589789, "compression_ratio": 1.7416107382550337, "no_speech_prob": 0.00029493376496247947}, {"id": 469, "seek": 151334, "start": 1533.34, "end": 1535.34, "text": " of representing the physical memory.", "tokens": [51365, 295, 13460, 264, 4001, 4675, 13, 51465], "temperature": 0.0, "avg_logprob": -0.0626557623589789, "compression_ratio": 1.7416107382550337, "no_speech_prob": 0.00029493376496247947}, {"id": 470, "seek": 151334, "start": 1535.34, "end": 1537.34, "text": " And so this is a pretty good", "tokens": [51465, 400, 370, 341, 307, 257, 1238, 665, 51565], "temperature": 0.0, "avg_logprob": -0.0626557623589789, "compression_ratio": 1.7416107382550337, "no_speech_prob": 0.00029493376496247947}, {"id": 471, "seek": 151334, "start": 1537.34, "end": 1539.34, "text": " blog post that you can go into.", "tokens": [51565, 6968, 2183, 300, 291, 393, 352, 666, 13, 51665], "temperature": 0.0, "avg_logprob": -0.0626557623589789, "compression_ratio": 1.7416107382550337, "no_speech_prob": 0.00029493376496247947}, {"id": 472, "seek": 151334, "start": 1539.34, "end": 1541.34, "text": " I might also create an entire video", "tokens": [51665, 286, 1062, 611, 1884, 364, 2302, 960, 51765], "temperature": 0.0, "avg_logprob": -0.0626557623589789, "compression_ratio": 1.7416107382550337, "no_speech_prob": 0.00029493376496247947}, {"id": 473, "seek": 151334, "start": 1541.34, "end": 1543.34, "text": " on the internals of TorchTensor and how this works.", "tokens": [51765, 322, 264, 2154, 1124, 295, 7160, 339, 51, 23153, 293, 577, 341, 1985, 13, 51865], "temperature": 0.0, "avg_logprob": -0.0626557623589789, "compression_ratio": 1.7416107382550337, "no_speech_prob": 0.00029493376496247947}, {"id": 474, "seek": 154334, "start": 1543.34, "end": 1545.34, "text": " For here,", "tokens": [50365, 1171, 510, 11, 50465], "temperature": 0.0, "avg_logprob": -0.06922691151247186, "compression_ratio": 1.5412844036697249, "no_speech_prob": 0.000362974067684263}, {"id": 475, "seek": 154334, "start": 1545.34, "end": 1547.34, "text": " we just note that this is an extremely efficient operation.", "tokens": [50465, 321, 445, 3637, 300, 341, 307, 364, 4664, 7148, 6916, 13, 50565], "temperature": 0.0, "avg_logprob": -0.06922691151247186, "compression_ratio": 1.5412844036697249, "no_speech_prob": 0.000362974067684263}, {"id": 476, "seek": 154334, "start": 1547.34, "end": 1549.34, "text": " And if I delete", "tokens": [50565, 400, 498, 286, 12097, 50665], "temperature": 0.0, "avg_logprob": -0.06922691151247186, "compression_ratio": 1.5412844036697249, "no_speech_prob": 0.000362974067684263}, {"id": 477, "seek": 154334, "start": 1549.34, "end": 1551.34, "text": " this and come back to our", "tokens": [50665, 341, 293, 808, 646, 281, 527, 50765], "temperature": 0.0, "avg_logprob": -0.06922691151247186, "compression_ratio": 1.5412844036697249, "no_speech_prob": 0.000362974067684263}, {"id": 478, "seek": 154334, "start": 1551.34, "end": 1553.34, "text": " emb,", "tokens": [50765, 4605, 11, 50865], "temperature": 0.0, "avg_logprob": -0.06922691151247186, "compression_ratio": 1.5412844036697249, "no_speech_prob": 0.000362974067684263}, {"id": 479, "seek": 154334, "start": 1553.34, "end": 1555.34, "text": " we see that the shape of our emb is", "tokens": [50865, 321, 536, 300, 264, 3909, 295, 527, 4605, 307, 50965], "temperature": 0.0, "avg_logprob": -0.06922691151247186, "compression_ratio": 1.5412844036697249, "no_speech_prob": 0.000362974067684263}, {"id": 480, "seek": 154334, "start": 1555.34, "end": 1557.34, "text": " 32x3x2, but we can simply", "tokens": [50965, 8858, 87, 18, 87, 17, 11, 457, 321, 393, 2935, 51065], "temperature": 0.0, "avg_logprob": -0.06922691151247186, "compression_ratio": 1.5412844036697249, "no_speech_prob": 0.000362974067684263}, {"id": 481, "seek": 154334, "start": 1557.34, "end": 1559.34, "text": " ask for PyTorch", "tokens": [51065, 1029, 337, 9953, 51, 284, 339, 51165], "temperature": 0.0, "avg_logprob": -0.06922691151247186, "compression_ratio": 1.5412844036697249, "no_speech_prob": 0.000362974067684263}, {"id": 482, "seek": 154334, "start": 1559.34, "end": 1561.34, "text": " to view this instead as a 32x6.", "tokens": [51165, 281, 1910, 341, 2602, 382, 257, 8858, 87, 21, 13, 51265], "temperature": 0.0, "avg_logprob": -0.06922691151247186, "compression_ratio": 1.5412844036697249, "no_speech_prob": 0.000362974067684263}, {"id": 483, "seek": 154334, "start": 1561.34, "end": 1563.34, "text": " And", "tokens": [51265, 400, 51365], "temperature": 0.0, "avg_logprob": -0.06922691151247186, "compression_ratio": 1.5412844036697249, "no_speech_prob": 0.000362974067684263}, {"id": 484, "seek": 154334, "start": 1563.34, "end": 1565.34, "text": " the way this gets flattened", "tokens": [51365, 264, 636, 341, 2170, 24183, 292, 51465], "temperature": 0.0, "avg_logprob": -0.06922691151247186, "compression_ratio": 1.5412844036697249, "no_speech_prob": 0.000362974067684263}, {"id": 485, "seek": 154334, "start": 1565.34, "end": 1567.34, "text": " into a 32x6 array", "tokens": [51465, 666, 257, 8858, 87, 21, 10225, 51565], "temperature": 0.0, "avg_logprob": -0.06922691151247186, "compression_ratio": 1.5412844036697249, "no_speech_prob": 0.000362974067684263}, {"id": 486, "seek": 154334, "start": 1567.34, "end": 1569.34, "text": " just happens that", "tokens": [51565, 445, 2314, 300, 51665], "temperature": 0.0, "avg_logprob": -0.06922691151247186, "compression_ratio": 1.5412844036697249, "no_speech_prob": 0.000362974067684263}, {"id": 487, "seek": 154334, "start": 1569.34, "end": 1571.34, "text": " these two get", "tokens": [51665, 613, 732, 483, 51765], "temperature": 0.0, "avg_logprob": -0.06922691151247186, "compression_ratio": 1.5412844036697249, "no_speech_prob": 0.000362974067684263}, {"id": 488, "seek": 154334, "start": 1571.34, "end": 1573.34, "text": " stacked up in a single row.", "tokens": [51765, 28867, 493, 294, 257, 2167, 5386, 13, 51865], "temperature": 0.0, "avg_logprob": -0.06922691151247186, "compression_ratio": 1.5412844036697249, "no_speech_prob": 0.000362974067684263}, {"id": 489, "seek": 157334, "start": 1573.34, "end": 1575.34, "text": " And so that's basically the concatenation operation", "tokens": [50365, 400, 370, 300, 311, 1936, 264, 1588, 7186, 399, 6916, 50465], "temperature": 0.0, "avg_logprob": -0.05089475843641493, "compression_ratio": 1.7773584905660378, "no_speech_prob": 0.00039522600127384067}, {"id": 490, "seek": 157334, "start": 1575.34, "end": 1577.34, "text": " that we're after.", "tokens": [50465, 300, 321, 434, 934, 13, 50565], "temperature": 0.0, "avg_logprob": -0.05089475843641493, "compression_ratio": 1.7773584905660378, "no_speech_prob": 0.00039522600127384067}, {"id": 491, "seek": 157334, "start": 1577.34, "end": 1579.34, "text": " And you can verify that this actually gives the exact", "tokens": [50565, 400, 291, 393, 16888, 300, 341, 767, 2709, 264, 1900, 50665], "temperature": 0.0, "avg_logprob": -0.05089475843641493, "compression_ratio": 1.7773584905660378, "no_speech_prob": 0.00039522600127384067}, {"id": 492, "seek": 157334, "start": 1579.34, "end": 1581.34, "text": " same result as what we had before.", "tokens": [50665, 912, 1874, 382, 437, 321, 632, 949, 13, 50765], "temperature": 0.0, "avg_logprob": -0.05089475843641493, "compression_ratio": 1.7773584905660378, "no_speech_prob": 0.00039522600127384067}, {"id": 493, "seek": 157334, "start": 1581.34, "end": 1583.34, "text": " So this is an element y equals", "tokens": [50765, 407, 341, 307, 364, 4478, 288, 6915, 50865], "temperature": 0.0, "avg_logprob": -0.05089475843641493, "compression_ratio": 1.7773584905660378, "no_speech_prob": 0.00039522600127384067}, {"id": 494, "seek": 157334, "start": 1583.34, "end": 1585.34, "text": " and you can see that all the elements of these", "tokens": [50865, 293, 291, 393, 536, 300, 439, 264, 4959, 295, 613, 50965], "temperature": 0.0, "avg_logprob": -0.05089475843641493, "compression_ratio": 1.7773584905660378, "no_speech_prob": 0.00039522600127384067}, {"id": 495, "seek": 157334, "start": 1585.34, "end": 1587.34, "text": " two tensors are the same.", "tokens": [50965, 732, 10688, 830, 366, 264, 912, 13, 51065], "temperature": 0.0, "avg_logprob": -0.05089475843641493, "compression_ratio": 1.7773584905660378, "no_speech_prob": 0.00039522600127384067}, {"id": 496, "seek": 157334, "start": 1587.34, "end": 1589.34, "text": " And so we get the exact same result.", "tokens": [51065, 400, 370, 321, 483, 264, 1900, 912, 1874, 13, 51165], "temperature": 0.0, "avg_logprob": -0.05089475843641493, "compression_ratio": 1.7773584905660378, "no_speech_prob": 0.00039522600127384067}, {"id": 497, "seek": 157334, "start": 1589.34, "end": 1591.34, "text": " So long story short,", "tokens": [51165, 407, 938, 1657, 2099, 11, 51265], "temperature": 0.0, "avg_logprob": -0.05089475843641493, "compression_ratio": 1.7773584905660378, "no_speech_prob": 0.00039522600127384067}, {"id": 498, "seek": 157334, "start": 1591.34, "end": 1593.34, "text": " we can actually just come here", "tokens": [51265, 321, 393, 767, 445, 808, 510, 51365], "temperature": 0.0, "avg_logprob": -0.05089475843641493, "compression_ratio": 1.7773584905660378, "no_speech_prob": 0.00039522600127384067}, {"id": 499, "seek": 157334, "start": 1593.34, "end": 1595.34, "text": " and if we just view this", "tokens": [51365, 293, 498, 321, 445, 1910, 341, 51465], "temperature": 0.0, "avg_logprob": -0.05089475843641493, "compression_ratio": 1.7773584905660378, "no_speech_prob": 0.00039522600127384067}, {"id": 500, "seek": 157334, "start": 1595.34, "end": 1597.34, "text": " as a 32x6", "tokens": [51465, 382, 257, 8858, 87, 21, 51565], "temperature": 0.0, "avg_logprob": -0.05089475843641493, "compression_ratio": 1.7773584905660378, "no_speech_prob": 0.00039522600127384067}, {"id": 501, "seek": 157334, "start": 1597.34, "end": 1599.34, "text": " instead,", "tokens": [51565, 2602, 11, 51665], "temperature": 0.0, "avg_logprob": -0.05089475843641493, "compression_ratio": 1.7773584905660378, "no_speech_prob": 0.00039522600127384067}, {"id": 502, "seek": 157334, "start": 1599.34, "end": 1601.34, "text": " then this multiplication will work", "tokens": [51665, 550, 341, 27290, 486, 589, 51765], "temperature": 0.0, "avg_logprob": -0.05089475843641493, "compression_ratio": 1.7773584905660378, "no_speech_prob": 0.00039522600127384067}, {"id": 503, "seek": 157334, "start": 1601.34, "end": 1603.34, "text": " and give us the hidden states that we're", "tokens": [51765, 293, 976, 505, 264, 7633, 4368, 300, 321, 434, 51865], "temperature": 0.0, "avg_logprob": -0.05089475843641493, "compression_ratio": 1.7773584905660378, "no_speech_prob": 0.00039522600127384067}, {"id": 504, "seek": 160334, "start": 1603.34, "end": 1605.34, "text": " after. So if this is h,", "tokens": [50365, 934, 13, 407, 498, 341, 307, 276, 11, 50465], "temperature": 0.0, "avg_logprob": -0.08330094113069422, "compression_ratio": 1.6108949416342413, "no_speech_prob": 0.00020683872571680695}, {"id": 505, "seek": 160334, "start": 1605.34, "end": 1607.34, "text": " then h-shape", "tokens": [50465, 550, 276, 12, 82, 42406, 50565], "temperature": 0.0, "avg_logprob": -0.08330094113069422, "compression_ratio": 1.6108949416342413, "no_speech_prob": 0.00020683872571680695}, {"id": 506, "seek": 160334, "start": 1607.34, "end": 1609.34, "text": " is now the hundred-dimensional", "tokens": [50565, 307, 586, 264, 3262, 12, 18759, 50665], "temperature": 0.0, "avg_logprob": -0.08330094113069422, "compression_ratio": 1.6108949416342413, "no_speech_prob": 0.00020683872571680695}, {"id": 507, "seek": 160334, "start": 1609.34, "end": 1611.34, "text": " activations for every", "tokens": [50665, 2430, 763, 337, 633, 50765], "temperature": 0.0, "avg_logprob": -0.08330094113069422, "compression_ratio": 1.6108949416342413, "no_speech_prob": 0.00020683872571680695}, {"id": 508, "seek": 160334, "start": 1611.34, "end": 1613.34, "text": " one of our 32 examples.", "tokens": [50765, 472, 295, 527, 8858, 5110, 13, 50865], "temperature": 0.0, "avg_logprob": -0.08330094113069422, "compression_ratio": 1.6108949416342413, "no_speech_prob": 0.00020683872571680695}, {"id": 509, "seek": 160334, "start": 1613.34, "end": 1615.34, "text": " And this gives the desired result.", "tokens": [50865, 400, 341, 2709, 264, 14721, 1874, 13, 50965], "temperature": 0.0, "avg_logprob": -0.08330094113069422, "compression_ratio": 1.6108949416342413, "no_speech_prob": 0.00020683872571680695}, {"id": 510, "seek": 160334, "start": 1615.34, "end": 1617.34, "text": " Let me do two things here.", "tokens": [50965, 961, 385, 360, 732, 721, 510, 13, 51065], "temperature": 0.0, "avg_logprob": -0.08330094113069422, "compression_ratio": 1.6108949416342413, "no_speech_prob": 0.00020683872571680695}, {"id": 511, "seek": 160334, "start": 1617.34, "end": 1619.34, "text": " Number one, let's not use 32.", "tokens": [51065, 5118, 472, 11, 718, 311, 406, 764, 8858, 13, 51165], "temperature": 0.0, "avg_logprob": -0.08330094113069422, "compression_ratio": 1.6108949416342413, "no_speech_prob": 0.00020683872571680695}, {"id": 512, "seek": 160334, "start": 1619.34, "end": 1621.34, "text": " We can, for example, do something like", "tokens": [51165, 492, 393, 11, 337, 1365, 11, 360, 746, 411, 51265], "temperature": 0.0, "avg_logprob": -0.08330094113069422, "compression_ratio": 1.6108949416342413, "no_speech_prob": 0.00020683872571680695}, {"id": 513, "seek": 160334, "start": 1621.34, "end": 1623.34, "text": " emb.shape", "tokens": [51265, 4605, 13, 82, 42406, 51365], "temperature": 0.0, "avg_logprob": -0.08330094113069422, "compression_ratio": 1.6108949416342413, "no_speech_prob": 0.00020683872571680695}, {"id": 514, "seek": 160334, "start": 1623.34, "end": 1625.34, "text": " at 0", "tokens": [51365, 412, 1958, 51465], "temperature": 0.0, "avg_logprob": -0.08330094113069422, "compression_ratio": 1.6108949416342413, "no_speech_prob": 0.00020683872571680695}, {"id": 515, "seek": 160334, "start": 1625.34, "end": 1627.34, "text": " so that we don't hardcode these numbers.", "tokens": [51465, 370, 300, 321, 500, 380, 1152, 22332, 613, 3547, 13, 51565], "temperature": 0.0, "avg_logprob": -0.08330094113069422, "compression_ratio": 1.6108949416342413, "no_speech_prob": 0.00020683872571680695}, {"id": 516, "seek": 160334, "start": 1627.34, "end": 1629.34, "text": " And this would work for any size of this", "tokens": [51565, 400, 341, 576, 589, 337, 604, 2744, 295, 341, 51665], "temperature": 0.0, "avg_logprob": -0.08330094113069422, "compression_ratio": 1.6108949416342413, "no_speech_prob": 0.00020683872571680695}, {"id": 517, "seek": 160334, "start": 1629.34, "end": 1631.34, "text": " emb. Or alternatively, we can", "tokens": [51665, 4605, 13, 1610, 8535, 356, 11, 321, 393, 51765], "temperature": 0.0, "avg_logprob": -0.08330094113069422, "compression_ratio": 1.6108949416342413, "no_speech_prob": 0.00020683872571680695}, {"id": 518, "seek": 160334, "start": 1631.34, "end": 1633.34, "text": " also do negative 1. When we do negative 1,", "tokens": [51765, 611, 360, 3671, 502, 13, 1133, 321, 360, 3671, 502, 11, 51865], "temperature": 0.0, "avg_logprob": -0.08330094113069422, "compression_ratio": 1.6108949416342413, "no_speech_prob": 0.00020683872571680695}, {"id": 519, "seek": 163334, "start": 1633.34, "end": 1635.34, "text": " PyTorch will infer", "tokens": [50365, 9953, 51, 284, 339, 486, 13596, 50465], "temperature": 0.0, "avg_logprob": -0.08370719196127473, "compression_ratio": 1.7265917602996255, "no_speech_prob": 0.00018632908177096397}, {"id": 520, "seek": 163334, "start": 1635.34, "end": 1637.34, "text": " what this should be.", "tokens": [50465, 437, 341, 820, 312, 13, 50565], "temperature": 0.0, "avg_logprob": -0.08370719196127473, "compression_ratio": 1.7265917602996255, "no_speech_prob": 0.00018632908177096397}, {"id": 521, "seek": 163334, "start": 1637.34, "end": 1639.34, "text": " Because the number of elements must be the same,", "tokens": [50565, 1436, 264, 1230, 295, 4959, 1633, 312, 264, 912, 11, 50665], "temperature": 0.0, "avg_logprob": -0.08370719196127473, "compression_ratio": 1.7265917602996255, "no_speech_prob": 0.00018632908177096397}, {"id": 522, "seek": 163334, "start": 1639.34, "end": 1641.34, "text": " and we're saying that this is 6, PyTorch will derive", "tokens": [50665, 293, 321, 434, 1566, 300, 341, 307, 1386, 11, 9953, 51, 284, 339, 486, 28446, 50765], "temperature": 0.0, "avg_logprob": -0.08370719196127473, "compression_ratio": 1.7265917602996255, "no_speech_prob": 0.00018632908177096397}, {"id": 523, "seek": 163334, "start": 1641.34, "end": 1643.34, "text": " that this must be 32.", "tokens": [50765, 300, 341, 1633, 312, 8858, 13, 50865], "temperature": 0.0, "avg_logprob": -0.08370719196127473, "compression_ratio": 1.7265917602996255, "no_speech_prob": 0.00018632908177096397}, {"id": 524, "seek": 163334, "start": 1643.34, "end": 1645.34, "text": " Or whatever else it is, if emb is of different size.", "tokens": [50865, 1610, 2035, 1646, 309, 307, 11, 498, 4605, 307, 295, 819, 2744, 13, 50965], "temperature": 0.0, "avg_logprob": -0.08370719196127473, "compression_ratio": 1.7265917602996255, "no_speech_prob": 0.00018632908177096397}, {"id": 525, "seek": 163334, "start": 1645.34, "end": 1647.34, "text": " The other thing", "tokens": [50965, 440, 661, 551, 51065], "temperature": 0.0, "avg_logprob": -0.08370719196127473, "compression_ratio": 1.7265917602996255, "no_speech_prob": 0.00018632908177096397}, {"id": 526, "seek": 163334, "start": 1647.34, "end": 1649.34, "text": " is here,", "tokens": [51065, 307, 510, 11, 51165], "temperature": 0.0, "avg_logprob": -0.08370719196127473, "compression_ratio": 1.7265917602996255, "no_speech_prob": 0.00018632908177096397}, {"id": 527, "seek": 163334, "start": 1649.34, "end": 1651.34, "text": " one more thing I'd like to point out is", "tokens": [51165, 472, 544, 551, 286, 1116, 411, 281, 935, 484, 307, 51265], "temperature": 0.0, "avg_logprob": -0.08370719196127473, "compression_ratio": 1.7265917602996255, "no_speech_prob": 0.00018632908177096397}, {"id": 528, "seek": 163334, "start": 1651.34, "end": 1653.34, "text": " here", "tokens": [51265, 510, 51365], "temperature": 0.0, "avg_logprob": -0.08370719196127473, "compression_ratio": 1.7265917602996255, "no_speech_prob": 0.00018632908177096397}, {"id": 529, "seek": 163334, "start": 1653.34, "end": 1655.34, "text": " when we do the concatenation,", "tokens": [51365, 562, 321, 360, 264, 1588, 7186, 399, 11, 51465], "temperature": 0.0, "avg_logprob": -0.08370719196127473, "compression_ratio": 1.7265917602996255, "no_speech_prob": 0.00018632908177096397}, {"id": 530, "seek": 163334, "start": 1655.34, "end": 1657.34, "text": " this actually is much less efficient", "tokens": [51465, 341, 767, 307, 709, 1570, 7148, 51565], "temperature": 0.0, "avg_logprob": -0.08370719196127473, "compression_ratio": 1.7265917602996255, "no_speech_prob": 0.00018632908177096397}, {"id": 531, "seek": 163334, "start": 1657.34, "end": 1659.34, "text": " because this", "tokens": [51565, 570, 341, 51665], "temperature": 0.0, "avg_logprob": -0.08370719196127473, "compression_ratio": 1.7265917602996255, "no_speech_prob": 0.00018632908177096397}, {"id": 532, "seek": 163334, "start": 1659.34, "end": 1661.34, "text": " concatenation would create a whole new tensor", "tokens": [51665, 1588, 7186, 399, 576, 1884, 257, 1379, 777, 40863, 51765], "temperature": 0.0, "avg_logprob": -0.08370719196127473, "compression_ratio": 1.7265917602996255, "no_speech_prob": 0.00018632908177096397}, {"id": 533, "seek": 163334, "start": 1661.34, "end": 1663.34, "text": " with a whole new storage, so new memory is being", "tokens": [51765, 365, 257, 1379, 777, 6725, 11, 370, 777, 4675, 307, 885, 51865], "temperature": 0.0, "avg_logprob": -0.08370719196127473, "compression_ratio": 1.7265917602996255, "no_speech_prob": 0.00018632908177096397}, {"id": 534, "seek": 166334, "start": 1663.34, "end": 1665.34, "text": " created because there's no way to concatenate", "tokens": [50365, 2942, 570, 456, 311, 572, 636, 281, 1588, 7186, 473, 50465], "temperature": 0.0, "avg_logprob": -0.0801413345336914, "compression_ratio": 1.6088709677419355, "no_speech_prob": 0.00014354035374708474}, {"id": 535, "seek": 166334, "start": 1665.34, "end": 1667.34, "text": " tensors just by manipulating the view", "tokens": [50465, 10688, 830, 445, 538, 40805, 264, 1910, 50565], "temperature": 0.0, "avg_logprob": -0.0801413345336914, "compression_ratio": 1.6088709677419355, "no_speech_prob": 0.00014354035374708474}, {"id": 536, "seek": 166334, "start": 1667.34, "end": 1669.34, "text": " attributes. So this is", "tokens": [50565, 17212, 13, 407, 341, 307, 50665], "temperature": 0.0, "avg_logprob": -0.0801413345336914, "compression_ratio": 1.6088709677419355, "no_speech_prob": 0.00014354035374708474}, {"id": 537, "seek": 166334, "start": 1669.34, "end": 1671.34, "text": " inefficient and creates all kinds of new memory.", "tokens": [50665, 43495, 293, 7829, 439, 3685, 295, 777, 4675, 13, 50765], "temperature": 0.0, "avg_logprob": -0.0801413345336914, "compression_ratio": 1.6088709677419355, "no_speech_prob": 0.00014354035374708474}, {"id": 538, "seek": 166334, "start": 1671.34, "end": 1673.34, "text": " So let me", "tokens": [50765, 407, 718, 385, 50865], "temperature": 0.0, "avg_logprob": -0.0801413345336914, "compression_ratio": 1.6088709677419355, "no_speech_prob": 0.00014354035374708474}, {"id": 539, "seek": 166334, "start": 1673.34, "end": 1675.34, "text": " delete this now.", "tokens": [50865, 12097, 341, 586, 13, 50965], "temperature": 0.0, "avg_logprob": -0.0801413345336914, "compression_ratio": 1.6088709677419355, "no_speech_prob": 0.00014354035374708474}, {"id": 540, "seek": 166334, "start": 1675.34, "end": 1677.34, "text": " We don't need this.", "tokens": [50965, 492, 500, 380, 643, 341, 13, 51065], "temperature": 0.0, "avg_logprob": -0.0801413345336914, "compression_ratio": 1.6088709677419355, "no_speech_prob": 0.00014354035374708474}, {"id": 541, "seek": 166334, "start": 1677.34, "end": 1679.34, "text": " And here to calculate h, we want to", "tokens": [51065, 400, 510, 281, 8873, 276, 11, 321, 528, 281, 51165], "temperature": 0.0, "avg_logprob": -0.0801413345336914, "compression_ratio": 1.6088709677419355, "no_speech_prob": 0.00014354035374708474}, {"id": 542, "seek": 166334, "start": 1679.34, "end": 1681.34, "text": " also dot 10h", "tokens": [51165, 611, 5893, 1266, 71, 51265], "temperature": 0.0, "avg_logprob": -0.0801413345336914, "compression_ratio": 1.6088709677419355, "no_speech_prob": 0.00014354035374708474}, {"id": 543, "seek": 166334, "start": 1681.34, "end": 1683.34, "text": " of this to get our", "tokens": [51265, 295, 341, 281, 483, 527, 51365], "temperature": 0.0, "avg_logprob": -0.0801413345336914, "compression_ratio": 1.6088709677419355, "no_speech_prob": 0.00014354035374708474}, {"id": 544, "seek": 166334, "start": 1683.34, "end": 1685.34, "text": " oops", "tokens": [51365, 34166, 51465], "temperature": 0.0, "avg_logprob": -0.0801413345336914, "compression_ratio": 1.6088709677419355, "no_speech_prob": 0.00014354035374708474}, {"id": 545, "seek": 166334, "start": 1685.34, "end": 1687.34, "text": " to get our h.", "tokens": [51465, 281, 483, 527, 276, 13, 51565], "temperature": 0.0, "avg_logprob": -0.0801413345336914, "compression_ratio": 1.6088709677419355, "no_speech_prob": 0.00014354035374708474}, {"id": 546, "seek": 166334, "start": 1687.34, "end": 1689.34, "text": " So these are now numbers between negative 1 and 1", "tokens": [51565, 407, 613, 366, 586, 3547, 1296, 3671, 502, 293, 502, 51665], "temperature": 0.0, "avg_logprob": -0.0801413345336914, "compression_ratio": 1.6088709677419355, "no_speech_prob": 0.00014354035374708474}, {"id": 547, "seek": 166334, "start": 1689.34, "end": 1691.34, "text": " because of the 10h, and we have", "tokens": [51665, 570, 295, 264, 1266, 71, 11, 293, 321, 362, 51765], "temperature": 0.0, "avg_logprob": -0.0801413345336914, "compression_ratio": 1.6088709677419355, "no_speech_prob": 0.00014354035374708474}, {"id": 548, "seek": 166334, "start": 1691.34, "end": 1693.34, "text": " that the shape is 32 by 100", "tokens": [51765, 300, 264, 3909, 307, 8858, 538, 2319, 51865], "temperature": 0.0, "avg_logprob": -0.0801413345336914, "compression_ratio": 1.6088709677419355, "no_speech_prob": 0.00014354035374708474}, {"id": 549, "seek": 169334, "start": 1693.34, "end": 1695.34, "text": " and that is basically this", "tokens": [50365, 293, 300, 307, 1936, 341, 50465], "temperature": 0.0, "avg_logprob": -0.049937758078941935, "compression_ratio": 1.7598425196850394, "no_speech_prob": 0.00035380004555918276}, {"id": 550, "seek": 169334, "start": 1695.34, "end": 1697.34, "text": " hidden layer of activations here", "tokens": [50465, 7633, 4583, 295, 2430, 763, 510, 50565], "temperature": 0.0, "avg_logprob": -0.049937758078941935, "compression_ratio": 1.7598425196850394, "no_speech_prob": 0.00035380004555918276}, {"id": 551, "seek": 169334, "start": 1697.34, "end": 1699.34, "text": " for every one of our 32", "tokens": [50565, 337, 633, 472, 295, 527, 8858, 50665], "temperature": 0.0, "avg_logprob": -0.049937758078941935, "compression_ratio": 1.7598425196850394, "no_speech_prob": 0.00035380004555918276}, {"id": 552, "seek": 169334, "start": 1699.34, "end": 1701.34, "text": " examples. Now there's one more thing I've", "tokens": [50665, 5110, 13, 823, 456, 311, 472, 544, 551, 286, 600, 50765], "temperature": 0.0, "avg_logprob": -0.049937758078941935, "compression_ratio": 1.7598425196850394, "no_speech_prob": 0.00035380004555918276}, {"id": 553, "seek": 169334, "start": 1701.34, "end": 1703.34, "text": " lost over that we have to be very careful with", "tokens": [50765, 2731, 670, 300, 321, 362, 281, 312, 588, 5026, 365, 50865], "temperature": 0.0, "avg_logprob": -0.049937758078941935, "compression_ratio": 1.7598425196850394, "no_speech_prob": 0.00035380004555918276}, {"id": 554, "seek": 169334, "start": 1703.34, "end": 1705.34, "text": " and that's this plus", "tokens": [50865, 293, 300, 311, 341, 1804, 50965], "temperature": 0.0, "avg_logprob": -0.049937758078941935, "compression_ratio": 1.7598425196850394, "no_speech_prob": 0.00035380004555918276}, {"id": 555, "seek": 169334, "start": 1705.34, "end": 1707.34, "text": " here. In particular we want to make", "tokens": [50965, 510, 13, 682, 1729, 321, 528, 281, 652, 51065], "temperature": 0.0, "avg_logprob": -0.049937758078941935, "compression_ratio": 1.7598425196850394, "no_speech_prob": 0.00035380004555918276}, {"id": 556, "seek": 169334, "start": 1707.34, "end": 1709.34, "text": " sure that the broadcasting will do", "tokens": [51065, 988, 300, 264, 30024, 486, 360, 51165], "temperature": 0.0, "avg_logprob": -0.049937758078941935, "compression_ratio": 1.7598425196850394, "no_speech_prob": 0.00035380004555918276}, {"id": 557, "seek": 169334, "start": 1709.34, "end": 1711.34, "text": " what we like. The shape of", "tokens": [51165, 437, 321, 411, 13, 440, 3909, 295, 51265], "temperature": 0.0, "avg_logprob": -0.049937758078941935, "compression_ratio": 1.7598425196850394, "no_speech_prob": 0.00035380004555918276}, {"id": 558, "seek": 169334, "start": 1711.34, "end": 1713.34, "text": " this is 32 by 100", "tokens": [51265, 341, 307, 8858, 538, 2319, 51365], "temperature": 0.0, "avg_logprob": -0.049937758078941935, "compression_ratio": 1.7598425196850394, "no_speech_prob": 0.00035380004555918276}, {"id": 559, "seek": 169334, "start": 1713.34, "end": 1715.34, "text": " and b1's shape is 100.", "tokens": [51365, 293, 272, 16, 311, 3909, 307, 2319, 13, 51465], "temperature": 0.0, "avg_logprob": -0.049937758078941935, "compression_ratio": 1.7598425196850394, "no_speech_prob": 0.00035380004555918276}, {"id": 560, "seek": 169334, "start": 1715.34, "end": 1717.34, "text": " So we see that the addition", "tokens": [51465, 407, 321, 536, 300, 264, 4500, 51565], "temperature": 0.0, "avg_logprob": -0.049937758078941935, "compression_ratio": 1.7598425196850394, "no_speech_prob": 0.00035380004555918276}, {"id": 561, "seek": 169334, "start": 1717.34, "end": 1719.34, "text": " here will broadcast these two", "tokens": [51565, 510, 486, 9975, 613, 732, 51665], "temperature": 0.0, "avg_logprob": -0.049937758078941935, "compression_ratio": 1.7598425196850394, "no_speech_prob": 0.00035380004555918276}, {"id": 562, "seek": 169334, "start": 1719.34, "end": 1721.34, "text": " and in particular we have 32 by 100", "tokens": [51665, 293, 294, 1729, 321, 362, 8858, 538, 2319, 51765], "temperature": 0.0, "avg_logprob": -0.049937758078941935, "compression_ratio": 1.7598425196850394, "no_speech_prob": 0.00035380004555918276}, {"id": 563, "seek": 169334, "start": 1721.34, "end": 1723.34, "text": " broadcasting to 100.", "tokens": [51765, 30024, 281, 2319, 13, 51865], "temperature": 0.0, "avg_logprob": -0.049937758078941935, "compression_ratio": 1.7598425196850394, "no_speech_prob": 0.00035380004555918276}, {"id": 564, "seek": 172334, "start": 1723.34, "end": 1725.34, "text": " So broadcasting", "tokens": [50365, 407, 30024, 50465], "temperature": 0.0, "avg_logprob": -0.06748194035475816, "compression_ratio": 1.7007874015748032, "no_speech_prob": 0.00042071990901604295}, {"id": 565, "seek": 172334, "start": 1725.34, "end": 1727.34, "text": " will align on the right", "tokens": [50465, 486, 7975, 322, 264, 558, 50565], "temperature": 0.0, "avg_logprob": -0.06748194035475816, "compression_ratio": 1.7007874015748032, "no_speech_prob": 0.00042071990901604295}, {"id": 566, "seek": 172334, "start": 1727.34, "end": 1729.34, "text": " create a fake dimension here", "tokens": [50565, 1884, 257, 7592, 10139, 510, 50665], "temperature": 0.0, "avg_logprob": -0.06748194035475816, "compression_ratio": 1.7007874015748032, "no_speech_prob": 0.00042071990901604295}, {"id": 567, "seek": 172334, "start": 1729.34, "end": 1731.34, "text": " so this will become a 1 by 100 row vector", "tokens": [50665, 370, 341, 486, 1813, 257, 502, 538, 2319, 5386, 8062, 50765], "temperature": 0.0, "avg_logprob": -0.06748194035475816, "compression_ratio": 1.7007874015748032, "no_speech_prob": 0.00042071990901604295}, {"id": 568, "seek": 172334, "start": 1731.34, "end": 1733.34, "text": " and then it will copy", "tokens": [50765, 293, 550, 309, 486, 5055, 50865], "temperature": 0.0, "avg_logprob": -0.06748194035475816, "compression_ratio": 1.7007874015748032, "no_speech_prob": 0.00042071990901604295}, {"id": 569, "seek": 172334, "start": 1733.34, "end": 1735.34, "text": " vertically for every", "tokens": [50865, 28450, 337, 633, 50965], "temperature": 0.0, "avg_logprob": -0.06748194035475816, "compression_ratio": 1.7007874015748032, "no_speech_prob": 0.00042071990901604295}, {"id": 570, "seek": 172334, "start": 1735.34, "end": 1737.34, "text": " one of these rows of 32", "tokens": [50965, 472, 295, 613, 13241, 295, 8858, 51065], "temperature": 0.0, "avg_logprob": -0.06748194035475816, "compression_ratio": 1.7007874015748032, "no_speech_prob": 0.00042071990901604295}, {"id": 571, "seek": 172334, "start": 1737.34, "end": 1739.34, "text": " and do an element-wise addition.", "tokens": [51065, 293, 360, 364, 4478, 12, 3711, 4500, 13, 51165], "temperature": 0.0, "avg_logprob": -0.06748194035475816, "compression_ratio": 1.7007874015748032, "no_speech_prob": 0.00042071990901604295}, {"id": 572, "seek": 172334, "start": 1739.34, "end": 1741.34, "text": " So in this case the correcting will be happening", "tokens": [51165, 407, 294, 341, 1389, 264, 47032, 486, 312, 2737, 51265], "temperature": 0.0, "avg_logprob": -0.06748194035475816, "compression_ratio": 1.7007874015748032, "no_speech_prob": 0.00042071990901604295}, {"id": 573, "seek": 172334, "start": 1741.34, "end": 1743.34, "text": " because the same bias vector", "tokens": [51265, 570, 264, 912, 12577, 8062, 51365], "temperature": 0.0, "avg_logprob": -0.06748194035475816, "compression_ratio": 1.7007874015748032, "no_speech_prob": 0.00042071990901604295}, {"id": 574, "seek": 172334, "start": 1743.34, "end": 1745.34, "text": " will be added to all the rows", "tokens": [51365, 486, 312, 3869, 281, 439, 264, 13241, 51465], "temperature": 0.0, "avg_logprob": -0.06748194035475816, "compression_ratio": 1.7007874015748032, "no_speech_prob": 0.00042071990901604295}, {"id": 575, "seek": 172334, "start": 1745.34, "end": 1747.34, "text": " of this matrix.", "tokens": [51465, 295, 341, 8141, 13, 51565], "temperature": 0.0, "avg_logprob": -0.06748194035475816, "compression_ratio": 1.7007874015748032, "no_speech_prob": 0.00042071990901604295}, {"id": 576, "seek": 172334, "start": 1747.34, "end": 1749.34, "text": " So that is correct, that's what we'd like", "tokens": [51565, 407, 300, 307, 3006, 11, 300, 311, 437, 321, 1116, 411, 51665], "temperature": 0.0, "avg_logprob": -0.06748194035475816, "compression_ratio": 1.7007874015748032, "no_speech_prob": 0.00042071990901604295}, {"id": 577, "seek": 172334, "start": 1749.34, "end": 1751.34, "text": " and it's always good", "tokens": [51665, 293, 309, 311, 1009, 665, 51765], "temperature": 0.0, "avg_logprob": -0.06748194035475816, "compression_ratio": 1.7007874015748032, "no_speech_prob": 0.00042071990901604295}, {"id": 578, "seek": 172334, "start": 1751.34, "end": 1753.34, "text": " practice to just make sure so that", "tokens": [51765, 3124, 281, 445, 652, 988, 370, 300, 51865], "temperature": 0.0, "avg_logprob": -0.06748194035475816, "compression_ratio": 1.7007874015748032, "no_speech_prob": 0.00042071990901604295}, {"id": 579, "seek": 175334, "start": 1753.34, "end": 1755.34, "text": " you don't shoot yourself in the foot.", "tokens": [50365, 291, 500, 380, 3076, 1803, 294, 264, 2671, 13, 50465], "temperature": 0.0, "avg_logprob": -0.07542746407645089, "compression_ratio": 1.6396396396396395, "no_speech_prob": 0.00019164063269272447}, {"id": 580, "seek": 175334, "start": 1755.34, "end": 1757.34, "text": " And finally let's create the final layer here", "tokens": [50465, 400, 2721, 718, 311, 1884, 264, 2572, 4583, 510, 50565], "temperature": 0.0, "avg_logprob": -0.07542746407645089, "compression_ratio": 1.6396396396396395, "no_speech_prob": 0.00019164063269272447}, {"id": 581, "seek": 175334, "start": 1757.34, "end": 1759.34, "text": " so let's create", "tokens": [50565, 370, 718, 311, 1884, 50665], "temperature": 0.0, "avg_logprob": -0.07542746407645089, "compression_ratio": 1.6396396396396395, "no_speech_prob": 0.00019164063269272447}, {"id": 582, "seek": 175334, "start": 1759.34, "end": 1761.34, "text": " w2 and b2", "tokens": [50665, 261, 17, 293, 272, 17, 50765], "temperature": 0.0, "avg_logprob": -0.07542746407645089, "compression_ratio": 1.6396396396396395, "no_speech_prob": 0.00019164063269272447}, {"id": 583, "seek": 175334, "start": 1761.34, "end": 1763.34, "text": " the input", "tokens": [50765, 264, 4846, 50865], "temperature": 0.0, "avg_logprob": -0.07542746407645089, "compression_ratio": 1.6396396396396395, "no_speech_prob": 0.00019164063269272447}, {"id": 584, "seek": 175334, "start": 1763.34, "end": 1765.34, "text": " now is 100", "tokens": [50865, 586, 307, 2319, 50965], "temperature": 0.0, "avg_logprob": -0.07542746407645089, "compression_ratio": 1.6396396396396395, "no_speech_prob": 0.00019164063269272447}, {"id": 585, "seek": 175334, "start": 1765.34, "end": 1767.34, "text": " and the output number of neurons", "tokens": [50965, 293, 264, 5598, 1230, 295, 22027, 51065], "temperature": 0.0, "avg_logprob": -0.07542746407645089, "compression_ratio": 1.6396396396396395, "no_speech_prob": 0.00019164063269272447}, {"id": 586, "seek": 175334, "start": 1767.34, "end": 1769.34, "text": " will be for us 27", "tokens": [51065, 486, 312, 337, 505, 7634, 51165], "temperature": 0.0, "avg_logprob": -0.07542746407645089, "compression_ratio": 1.6396396396396395, "no_speech_prob": 0.00019164063269272447}, {"id": 587, "seek": 175334, "start": 1769.34, "end": 1771.34, "text": " because we have 27 possible characters", "tokens": [51165, 570, 321, 362, 7634, 1944, 4342, 51265], "temperature": 0.0, "avg_logprob": -0.07542746407645089, "compression_ratio": 1.6396396396396395, "no_speech_prob": 0.00019164063269272447}, {"id": 588, "seek": 175334, "start": 1771.34, "end": 1773.34, "text": " that come next.", "tokens": [51265, 300, 808, 958, 13, 51365], "temperature": 0.0, "avg_logprob": -0.07542746407645089, "compression_ratio": 1.6396396396396395, "no_speech_prob": 0.00019164063269272447}, {"id": 589, "seek": 175334, "start": 1773.34, "end": 1775.34, "text": " So the biases will be 27 as well.", "tokens": [51365, 407, 264, 32152, 486, 312, 7634, 382, 731, 13, 51465], "temperature": 0.0, "avg_logprob": -0.07542746407645089, "compression_ratio": 1.6396396396396395, "no_speech_prob": 0.00019164063269272447}, {"id": 590, "seek": 175334, "start": 1775.34, "end": 1777.34, "text": " So therefore the logits", "tokens": [51465, 407, 4412, 264, 3565, 1208, 51565], "temperature": 0.0, "avg_logprob": -0.07542746407645089, "compression_ratio": 1.6396396396396395, "no_speech_prob": 0.00019164063269272447}, {"id": 591, "seek": 175334, "start": 1777.34, "end": 1779.34, "text": " which are the outputs of this neural net", "tokens": [51565, 597, 366, 264, 23930, 295, 341, 18161, 2533, 51665], "temperature": 0.0, "avg_logprob": -0.07542746407645089, "compression_ratio": 1.6396396396396395, "no_speech_prob": 0.00019164063269272447}, {"id": 592, "seek": 175334, "start": 1779.34, "end": 1781.34, "text": " are going to be", "tokens": [51665, 366, 516, 281, 312, 51765], "temperature": 0.0, "avg_logprob": -0.07542746407645089, "compression_ratio": 1.6396396396396395, "no_speech_prob": 0.00019164063269272447}, {"id": 593, "seek": 175334, "start": 1781.34, "end": 1783.34, "text": " h multiplied", "tokens": [51765, 276, 17207, 51865], "temperature": 0.0, "avg_logprob": -0.07542746407645089, "compression_ratio": 1.6396396396396395, "no_speech_prob": 0.00019164063269272447}, {"id": 594, "seek": 178334, "start": 1783.34, "end": 1785.34, "text": " by w2 plus b2", "tokens": [50365, 538, 261, 17, 1804, 272, 17, 50465], "temperature": 0.0, "avg_logprob": -0.07892914613087972, "compression_ratio": 1.7638888888888888, "no_speech_prob": 0.0007902219658717513}, {"id": 595, "seek": 178334, "start": 1787.34, "end": 1789.34, "text": " logits.shape is 32 by 27", "tokens": [50565, 3565, 1208, 13, 82, 42406, 307, 8858, 538, 7634, 50665], "temperature": 0.0, "avg_logprob": -0.07892914613087972, "compression_ratio": 1.7638888888888888, "no_speech_prob": 0.0007902219658717513}, {"id": 596, "seek": 178334, "start": 1789.34, "end": 1791.34, "text": " and the logits", "tokens": [50665, 293, 264, 3565, 1208, 50765], "temperature": 0.0, "avg_logprob": -0.07892914613087972, "compression_ratio": 1.7638888888888888, "no_speech_prob": 0.0007902219658717513}, {"id": 597, "seek": 178334, "start": 1791.34, "end": 1793.34, "text": " look good.", "tokens": [50765, 574, 665, 13, 50865], "temperature": 0.0, "avg_logprob": -0.07892914613087972, "compression_ratio": 1.7638888888888888, "no_speech_prob": 0.0007902219658717513}, {"id": 598, "seek": 178334, "start": 1793.34, "end": 1795.34, "text": " Now exactly as we saw in the previous video", "tokens": [50865, 823, 2293, 382, 321, 1866, 294, 264, 3894, 960, 50965], "temperature": 0.0, "avg_logprob": -0.07892914613087972, "compression_ratio": 1.7638888888888888, "no_speech_prob": 0.0007902219658717513}, {"id": 599, "seek": 178334, "start": 1795.34, "end": 1797.34, "text": " we want to take these logits and we want to", "tokens": [50965, 321, 528, 281, 747, 613, 3565, 1208, 293, 321, 528, 281, 51065], "temperature": 0.0, "avg_logprob": -0.07892914613087972, "compression_ratio": 1.7638888888888888, "no_speech_prob": 0.0007902219658717513}, {"id": 600, "seek": 178334, "start": 1797.34, "end": 1799.34, "text": " first exponentiate them to get our fake counts", "tokens": [51065, 700, 37871, 13024, 552, 281, 483, 527, 7592, 14893, 51165], "temperature": 0.0, "avg_logprob": -0.07892914613087972, "compression_ratio": 1.7638888888888888, "no_speech_prob": 0.0007902219658717513}, {"id": 601, "seek": 178334, "start": 1799.34, "end": 1801.34, "text": " and then we want to normalize them", "tokens": [51165, 293, 550, 321, 528, 281, 2710, 1125, 552, 51265], "temperature": 0.0, "avg_logprob": -0.07892914613087972, "compression_ratio": 1.7638888888888888, "no_speech_prob": 0.0007902219658717513}, {"id": 602, "seek": 178334, "start": 1801.34, "end": 1803.34, "text": " into a probability.", "tokens": [51265, 666, 257, 8482, 13, 51365], "temperature": 0.0, "avg_logprob": -0.07892914613087972, "compression_ratio": 1.7638888888888888, "no_speech_prob": 0.0007902219658717513}, {"id": 603, "seek": 178334, "start": 1803.34, "end": 1805.34, "text": " So prob is counts divide", "tokens": [51365, 407, 1239, 307, 14893, 9845, 51465], "temperature": 0.0, "avg_logprob": -0.07892914613087972, "compression_ratio": 1.7638888888888888, "no_speech_prob": 0.0007902219658717513}, {"id": 604, "seek": 178334, "start": 1805.34, "end": 1807.34, "text": " and now", "tokens": [51465, 293, 586, 51565], "temperature": 0.0, "avg_logprob": -0.07892914613087972, "compression_ratio": 1.7638888888888888, "no_speech_prob": 0.0007902219658717513}, {"id": 605, "seek": 178334, "start": 1807.34, "end": 1809.34, "text": " counts.sum along", "tokens": [51565, 14893, 13, 82, 449, 2051, 51665], "temperature": 0.0, "avg_logprob": -0.07892914613087972, "compression_ratio": 1.7638888888888888, "no_speech_prob": 0.0007902219658717513}, {"id": 606, "seek": 178334, "start": 1809.34, "end": 1811.34, "text": " the first dimension and keep them", "tokens": [51665, 264, 700, 10139, 293, 1066, 552, 51765], "temperature": 0.0, "avg_logprob": -0.07892914613087972, "compression_ratio": 1.7638888888888888, "no_speech_prob": 0.0007902219658717513}, {"id": 607, "seek": 178334, "start": 1811.34, "end": 1813.34, "text": " as true, exactly as in the previous video.", "tokens": [51765, 382, 2074, 11, 2293, 382, 294, 264, 3894, 960, 13, 51865], "temperature": 0.0, "avg_logprob": -0.07892914613087972, "compression_ratio": 1.7638888888888888, "no_speech_prob": 0.0007902219658717513}, {"id": 608, "seek": 181334, "start": 1813.34, "end": 1815.34, "text": " And so", "tokens": [50365, 400, 370, 50465], "temperature": 0.0, "avg_logprob": -0.07760291540322184, "compression_ratio": 1.617283950617284, "no_speech_prob": 0.0004639401740860194}, {"id": 609, "seek": 181334, "start": 1815.34, "end": 1817.34, "text": " prob.shape", "tokens": [50465, 1239, 13, 82, 42406, 50565], "temperature": 0.0, "avg_logprob": -0.07760291540322184, "compression_ratio": 1.617283950617284, "no_speech_prob": 0.0004639401740860194}, {"id": 610, "seek": 181334, "start": 1817.34, "end": 1819.34, "text": " now is 32 by 27", "tokens": [50565, 586, 307, 8858, 538, 7634, 50665], "temperature": 0.0, "avg_logprob": -0.07760291540322184, "compression_ratio": 1.617283950617284, "no_speech_prob": 0.0004639401740860194}, {"id": 611, "seek": 181334, "start": 1819.34, "end": 1821.34, "text": " and you'll see that every row", "tokens": [50665, 293, 291, 603, 536, 300, 633, 5386, 50765], "temperature": 0.0, "avg_logprob": -0.07760291540322184, "compression_ratio": 1.617283950617284, "no_speech_prob": 0.0004639401740860194}, {"id": 612, "seek": 181334, "start": 1821.34, "end": 1823.34, "text": " of prob", "tokens": [50765, 295, 1239, 50865], "temperature": 0.0, "avg_logprob": -0.07760291540322184, "compression_ratio": 1.617283950617284, "no_speech_prob": 0.0004639401740860194}, {"id": 613, "seek": 181334, "start": 1823.34, "end": 1825.34, "text": " sums to 1, so it's normalized.", "tokens": [50865, 34499, 281, 502, 11, 370, 309, 311, 48704, 13, 50965], "temperature": 0.0, "avg_logprob": -0.07760291540322184, "compression_ratio": 1.617283950617284, "no_speech_prob": 0.0004639401740860194}, {"id": 614, "seek": 181334, "start": 1825.34, "end": 1827.34, "text": " So that gives us", "tokens": [50965, 407, 300, 2709, 505, 51065], "temperature": 0.0, "avg_logprob": -0.07760291540322184, "compression_ratio": 1.617283950617284, "no_speech_prob": 0.0004639401740860194}, {"id": 615, "seek": 181334, "start": 1827.34, "end": 1829.34, "text": " the probabilities. Now of course we have", "tokens": [51065, 264, 33783, 13, 823, 295, 1164, 321, 362, 51165], "temperature": 0.0, "avg_logprob": -0.07760291540322184, "compression_ratio": 1.617283950617284, "no_speech_prob": 0.0004639401740860194}, {"id": 616, "seek": 181334, "start": 1829.34, "end": 1831.34, "text": " the actual letter that comes next", "tokens": [51165, 264, 3539, 5063, 300, 1487, 958, 51265], "temperature": 0.0, "avg_logprob": -0.07760291540322184, "compression_ratio": 1.617283950617284, "no_speech_prob": 0.0004639401740860194}, {"id": 617, "seek": 181334, "start": 1831.34, "end": 1833.34, "text": " and that comes from this array y", "tokens": [51265, 293, 300, 1487, 490, 341, 10225, 288, 51365], "temperature": 0.0, "avg_logprob": -0.07760291540322184, "compression_ratio": 1.617283950617284, "no_speech_prob": 0.0004639401740860194}, {"id": 618, "seek": 181334, "start": 1833.34, "end": 1835.34, "text": " which we", "tokens": [51365, 597, 321, 51465], "temperature": 0.0, "avg_logprob": -0.07760291540322184, "compression_ratio": 1.617283950617284, "no_speech_prob": 0.0004639401740860194}, {"id": 619, "seek": 181334, "start": 1835.34, "end": 1837.34, "text": " created during the dataset creation.", "tokens": [51465, 2942, 1830, 264, 28872, 8016, 13, 51565], "temperature": 0.0, "avg_logprob": -0.07760291540322184, "compression_ratio": 1.617283950617284, "no_speech_prob": 0.0004639401740860194}, {"id": 620, "seek": 181334, "start": 1837.34, "end": 1839.34, "text": " So y is this last piece here", "tokens": [51565, 407, 288, 307, 341, 1036, 2522, 510, 51665], "temperature": 0.0, "avg_logprob": -0.07760291540322184, "compression_ratio": 1.617283950617284, "no_speech_prob": 0.0004639401740860194}, {"id": 621, "seek": 181334, "start": 1839.34, "end": 1841.34, "text": " which is the identity of the next character", "tokens": [51665, 597, 307, 264, 6575, 295, 264, 958, 2517, 51765], "temperature": 0.0, "avg_logprob": -0.07760291540322184, "compression_ratio": 1.617283950617284, "no_speech_prob": 0.0004639401740860194}, {"id": 622, "seek": 181334, "start": 1841.34, "end": 1843.34, "text": " in the sequence that we'd like to now predict.", "tokens": [51765, 294, 264, 8310, 300, 321, 1116, 411, 281, 586, 6069, 13, 51865], "temperature": 0.0, "avg_logprob": -0.07760291540322184, "compression_ratio": 1.617283950617284, "no_speech_prob": 0.0004639401740860194}, {"id": 623, "seek": 184334, "start": 1843.34, "end": 1845.34, "text": " So what we'd", "tokens": [50365, 407, 437, 321, 1116, 50465], "temperature": 0.0, "avg_logprob": -0.05970638485278113, "compression_ratio": 1.7085201793721974, "no_speech_prob": 0.0006304385606199503}, {"id": 624, "seek": 184334, "start": 1845.34, "end": 1847.34, "text": " like to do now is just as in the previous video", "tokens": [50465, 411, 281, 360, 586, 307, 445, 382, 294, 264, 3894, 960, 50565], "temperature": 0.0, "avg_logprob": -0.05970638485278113, "compression_ratio": 1.7085201793721974, "no_speech_prob": 0.0006304385606199503}, {"id": 625, "seek": 184334, "start": 1847.34, "end": 1849.34, "text": " we'd like to index into the rows", "tokens": [50565, 321, 1116, 411, 281, 8186, 666, 264, 13241, 50665], "temperature": 0.0, "avg_logprob": -0.05970638485278113, "compression_ratio": 1.7085201793721974, "no_speech_prob": 0.0006304385606199503}, {"id": 626, "seek": 184334, "start": 1849.34, "end": 1851.34, "text": " of prob and in each row", "tokens": [50665, 295, 1239, 293, 294, 1184, 5386, 50765], "temperature": 0.0, "avg_logprob": -0.05970638485278113, "compression_ratio": 1.7085201793721974, "no_speech_prob": 0.0006304385606199503}, {"id": 627, "seek": 184334, "start": 1851.34, "end": 1853.34, "text": " we'd like to pluck out the probability assigned", "tokens": [50765, 321, 1116, 411, 281, 41514, 484, 264, 8482, 13279, 50865], "temperature": 0.0, "avg_logprob": -0.05970638485278113, "compression_ratio": 1.7085201793721974, "no_speech_prob": 0.0006304385606199503}, {"id": 628, "seek": 184334, "start": 1853.34, "end": 1855.34, "text": " to the correct character", "tokens": [50865, 281, 264, 3006, 2517, 50965], "temperature": 0.0, "avg_logprob": -0.05970638485278113, "compression_ratio": 1.7085201793721974, "no_speech_prob": 0.0006304385606199503}, {"id": 629, "seek": 184334, "start": 1855.34, "end": 1857.34, "text": " as given here.", "tokens": [50965, 382, 2212, 510, 13, 51065], "temperature": 0.0, "avg_logprob": -0.05970638485278113, "compression_ratio": 1.7085201793721974, "no_speech_prob": 0.0006304385606199503}, {"id": 630, "seek": 184334, "start": 1857.34, "end": 1859.34, "text": " So first we have torch.arrange", "tokens": [51065, 407, 700, 321, 362, 27822, 13, 2284, 933, 51165], "temperature": 0.0, "avg_logprob": -0.05970638485278113, "compression_ratio": 1.7085201793721974, "no_speech_prob": 0.0006304385606199503}, {"id": 631, "seek": 184334, "start": 1859.34, "end": 1861.34, "text": " which is kind of like", "tokens": [51165, 597, 307, 733, 295, 411, 51265], "temperature": 0.0, "avg_logprob": -0.05970638485278113, "compression_ratio": 1.7085201793721974, "no_speech_prob": 0.0006304385606199503}, {"id": 632, "seek": 184334, "start": 1861.34, "end": 1863.34, "text": " an iterator over", "tokens": [51265, 364, 17138, 1639, 670, 51365], "temperature": 0.0, "avg_logprob": -0.05970638485278113, "compression_ratio": 1.7085201793721974, "no_speech_prob": 0.0006304385606199503}, {"id": 633, "seek": 184334, "start": 1863.34, "end": 1865.34, "text": " numbers from 0 to 31", "tokens": [51365, 3547, 490, 1958, 281, 10353, 51465], "temperature": 0.0, "avg_logprob": -0.05970638485278113, "compression_ratio": 1.7085201793721974, "no_speech_prob": 0.0006304385606199503}, {"id": 634, "seek": 184334, "start": 1865.34, "end": 1867.34, "text": " and then we can index into prob", "tokens": [51465, 293, 550, 321, 393, 8186, 666, 1239, 51565], "temperature": 0.0, "avg_logprob": -0.05970638485278113, "compression_ratio": 1.7085201793721974, "no_speech_prob": 0.0006304385606199503}, {"id": 635, "seek": 184334, "start": 1867.34, "end": 1869.34, "text": " in the following way", "tokens": [51565, 294, 264, 3480, 636, 51665], "temperature": 0.0, "avg_logprob": -0.05970638485278113, "compression_ratio": 1.7085201793721974, "no_speech_prob": 0.0006304385606199503}, {"id": 636, "seek": 184334, "start": 1869.34, "end": 1871.34, "text": " prob.in", "tokens": [51665, 1239, 13, 259, 51765], "temperature": 0.0, "avg_logprob": -0.05970638485278113, "compression_ratio": 1.7085201793721974, "no_speech_prob": 0.0006304385606199503}, {"id": 637, "seek": 184334, "start": 1871.34, "end": 1873.34, "text": " which iterates the rows", "tokens": [51765, 597, 17138, 1024, 264, 13241, 51865], "temperature": 0.0, "avg_logprob": -0.05970638485278113, "compression_ratio": 1.7085201793721974, "no_speech_prob": 0.0006304385606199503}, {"id": 638, "seek": 187334, "start": 1873.34, "end": 1875.34, "text": " and then in each row we'd like to grab", "tokens": [50365, 293, 550, 294, 1184, 5386, 321, 1116, 411, 281, 4444, 50465], "temperature": 0.0, "avg_logprob": -0.06047263368964195, "compression_ratio": 1.7536764705882353, "no_speech_prob": 0.00018462270963937044}, {"id": 639, "seek": 187334, "start": 1875.34, "end": 1877.34, "text": " this column", "tokens": [50465, 341, 7738, 50565], "temperature": 0.0, "avg_logprob": -0.06047263368964195, "compression_ratio": 1.7536764705882353, "no_speech_prob": 0.00018462270963937044}, {"id": 640, "seek": 187334, "start": 1877.34, "end": 1879.34, "text": " as given by y.", "tokens": [50565, 382, 2212, 538, 288, 13, 50665], "temperature": 0.0, "avg_logprob": -0.06047263368964195, "compression_ratio": 1.7536764705882353, "no_speech_prob": 0.00018462270963937044}, {"id": 641, "seek": 187334, "start": 1879.34, "end": 1881.34, "text": " So this gives the current probabilities", "tokens": [50665, 407, 341, 2709, 264, 2190, 33783, 50765], "temperature": 0.0, "avg_logprob": -0.06047263368964195, "compression_ratio": 1.7536764705882353, "no_speech_prob": 0.00018462270963937044}, {"id": 642, "seek": 187334, "start": 1881.34, "end": 1883.34, "text": " as assigned by this neural network", "tokens": [50765, 382, 13279, 538, 341, 18161, 3209, 50865], "temperature": 0.0, "avg_logprob": -0.06047263368964195, "compression_ratio": 1.7536764705882353, "no_speech_prob": 0.00018462270963937044}, {"id": 643, "seek": 187334, "start": 1883.34, "end": 1885.34, "text": " with this setting of its weights", "tokens": [50865, 365, 341, 3287, 295, 1080, 17443, 50965], "temperature": 0.0, "avg_logprob": -0.06047263368964195, "compression_ratio": 1.7536764705882353, "no_speech_prob": 0.00018462270963937044}, {"id": 644, "seek": 187334, "start": 1885.34, "end": 1887.34, "text": " to the correct character in the sequence.", "tokens": [50965, 281, 264, 3006, 2517, 294, 264, 8310, 13, 51065], "temperature": 0.0, "avg_logprob": -0.06047263368964195, "compression_ratio": 1.7536764705882353, "no_speech_prob": 0.00018462270963937044}, {"id": 645, "seek": 187334, "start": 1887.34, "end": 1889.34, "text": " And you can see here that", "tokens": [51065, 400, 291, 393, 536, 510, 300, 51165], "temperature": 0.0, "avg_logprob": -0.06047263368964195, "compression_ratio": 1.7536764705882353, "no_speech_prob": 0.00018462270963937044}, {"id": 646, "seek": 187334, "start": 1889.34, "end": 1891.34, "text": " this looks okay for some of these characters", "tokens": [51165, 341, 1542, 1392, 337, 512, 295, 613, 4342, 51265], "temperature": 0.0, "avg_logprob": -0.06047263368964195, "compression_ratio": 1.7536764705882353, "no_speech_prob": 0.00018462270963937044}, {"id": 647, "seek": 187334, "start": 1891.34, "end": 1893.34, "text": " like this is basically 0.2", "tokens": [51265, 411, 341, 307, 1936, 1958, 13, 17, 51365], "temperature": 0.0, "avg_logprob": -0.06047263368964195, "compression_ratio": 1.7536764705882353, "no_speech_prob": 0.00018462270963937044}, {"id": 648, "seek": 187334, "start": 1893.34, "end": 1895.34, "text": " but it doesn't look very good at all for many other characters", "tokens": [51365, 457, 309, 1177, 380, 574, 588, 665, 412, 439, 337, 867, 661, 4342, 51465], "temperature": 0.0, "avg_logprob": -0.06047263368964195, "compression_ratio": 1.7536764705882353, "no_speech_prob": 0.00018462270963937044}, {"id": 649, "seek": 187334, "start": 1895.34, "end": 1899.34, "text": " like this is 0.0701 probability", "tokens": [51465, 411, 341, 307, 1958, 13, 15, 5867, 16, 8482, 51665], "temperature": 0.0, "avg_logprob": -0.06047263368964195, "compression_ratio": 1.7536764705882353, "no_speech_prob": 0.00018462270963937044}, {"id": 650, "seek": 187334, "start": 1899.34, "end": 1901.34, "text": " and so the network thinks that", "tokens": [51665, 293, 370, 264, 3209, 7309, 300, 51765], "temperature": 0.0, "avg_logprob": -0.06047263368964195, "compression_ratio": 1.7536764705882353, "no_speech_prob": 0.00018462270963937044}, {"id": 651, "seek": 187334, "start": 1901.34, "end": 1903.34, "text": " some of these are extremely unlikely.", "tokens": [51765, 512, 295, 613, 366, 4664, 17518, 13, 51865], "temperature": 0.0, "avg_logprob": -0.06047263368964195, "compression_ratio": 1.7536764705882353, "no_speech_prob": 0.00018462270963937044}, {"id": 652, "seek": 190334, "start": 1903.34, "end": 1905.34, "text": " Of course we haven't trained the neural network yet", "tokens": [50365, 2720, 1164, 321, 2378, 380, 8895, 264, 18161, 3209, 1939, 50465], "temperature": 0.0, "avg_logprob": -0.07095934060903696, "compression_ratio": 1.878228782287823, "no_speech_prob": 0.0003098437446169555}, {"id": 653, "seek": 190334, "start": 1905.34, "end": 1907.34, "text": " so", "tokens": [50465, 370, 50565], "temperature": 0.0, "avg_logprob": -0.07095934060903696, "compression_ratio": 1.878228782287823, "no_speech_prob": 0.0003098437446169555}, {"id": 654, "seek": 190334, "start": 1907.34, "end": 1909.34, "text": " this will improve and ideally all of these", "tokens": [50565, 341, 486, 3470, 293, 22915, 439, 295, 613, 50665], "temperature": 0.0, "avg_logprob": -0.07095934060903696, "compression_ratio": 1.878228782287823, "no_speech_prob": 0.0003098437446169555}, {"id": 655, "seek": 190334, "start": 1909.34, "end": 1911.34, "text": " numbers here of course are 1", "tokens": [50665, 3547, 510, 295, 1164, 366, 502, 50765], "temperature": 0.0, "avg_logprob": -0.07095934060903696, "compression_ratio": 1.878228782287823, "no_speech_prob": 0.0003098437446169555}, {"id": 656, "seek": 190334, "start": 1911.34, "end": 1913.34, "text": " because then we are correctly predicting the next character.", "tokens": [50765, 570, 550, 321, 366, 8944, 32884, 264, 958, 2517, 13, 50865], "temperature": 0.0, "avg_logprob": -0.07095934060903696, "compression_ratio": 1.878228782287823, "no_speech_prob": 0.0003098437446169555}, {"id": 657, "seek": 190334, "start": 1913.34, "end": 1915.34, "text": " Now just as in the previous video", "tokens": [50865, 823, 445, 382, 294, 264, 3894, 960, 50965], "temperature": 0.0, "avg_logprob": -0.07095934060903696, "compression_ratio": 1.878228782287823, "no_speech_prob": 0.0003098437446169555}, {"id": 658, "seek": 190334, "start": 1915.34, "end": 1917.34, "text": " we want to take these probabilities", "tokens": [50965, 321, 528, 281, 747, 613, 33783, 51065], "temperature": 0.0, "avg_logprob": -0.07095934060903696, "compression_ratio": 1.878228782287823, "no_speech_prob": 0.0003098437446169555}, {"id": 659, "seek": 190334, "start": 1917.34, "end": 1919.34, "text": " we want to look at the log probability", "tokens": [51065, 321, 528, 281, 574, 412, 264, 3565, 8482, 51165], "temperature": 0.0, "avg_logprob": -0.07095934060903696, "compression_ratio": 1.878228782287823, "no_speech_prob": 0.0003098437446169555}, {"id": 660, "seek": 190334, "start": 1919.34, "end": 1921.34, "text": " and then we want to look at the average log probability", "tokens": [51165, 293, 550, 321, 528, 281, 574, 412, 264, 4274, 3565, 8482, 51265], "temperature": 0.0, "avg_logprob": -0.07095934060903696, "compression_ratio": 1.878228782287823, "no_speech_prob": 0.0003098437446169555}, {"id": 661, "seek": 190334, "start": 1921.34, "end": 1923.34, "text": " and the negative of it", "tokens": [51265, 293, 264, 3671, 295, 309, 51365], "temperature": 0.0, "avg_logprob": -0.07095934060903696, "compression_ratio": 1.878228782287823, "no_speech_prob": 0.0003098437446169555}, {"id": 662, "seek": 190334, "start": 1923.34, "end": 1925.34, "text": " to create the negative log likelihood loss.", "tokens": [51365, 281, 1884, 264, 3671, 3565, 22119, 4470, 13, 51465], "temperature": 0.0, "avg_logprob": -0.07095934060903696, "compression_ratio": 1.878228782287823, "no_speech_prob": 0.0003098437446169555}, {"id": 663, "seek": 190334, "start": 1927.34, "end": 1929.34, "text": " So the loss here is 17", "tokens": [51565, 407, 264, 4470, 510, 307, 3282, 51665], "temperature": 0.0, "avg_logprob": -0.07095934060903696, "compression_ratio": 1.878228782287823, "no_speech_prob": 0.0003098437446169555}, {"id": 664, "seek": 190334, "start": 1929.34, "end": 1931.34, "text": " and this is the loss", "tokens": [51665, 293, 341, 307, 264, 4470, 51765], "temperature": 0.0, "avg_logprob": -0.07095934060903696, "compression_ratio": 1.878228782287823, "no_speech_prob": 0.0003098437446169555}, {"id": 665, "seek": 190334, "start": 1931.34, "end": 1933.34, "text": " that we'd like to minimize to get the network", "tokens": [51765, 300, 321, 1116, 411, 281, 17522, 281, 483, 264, 3209, 51865], "temperature": 0.0, "avg_logprob": -0.07095934060903696, "compression_ratio": 1.878228782287823, "no_speech_prob": 0.0003098437446169555}, {"id": 666, "seek": 193334, "start": 1933.34, "end": 1935.34, "text": " to predict the correct character", "tokens": [50365, 281, 6069, 264, 3006, 2517, 50465], "temperature": 0.0, "avg_logprob": -0.07046341395878292, "compression_ratio": 1.7227722772277227, "no_speech_prob": 0.0006670881411992013}, {"id": 667, "seek": 193334, "start": 1935.34, "end": 1937.34, "text": " in the sequence.", "tokens": [50465, 294, 264, 8310, 13, 50565], "temperature": 0.0, "avg_logprob": -0.07046341395878292, "compression_ratio": 1.7227722772277227, "no_speech_prob": 0.0006670881411992013}, {"id": 668, "seek": 193334, "start": 1937.34, "end": 1939.34, "text": " Okay so I rewrote everything here", "tokens": [50565, 1033, 370, 286, 319, 7449, 1370, 1203, 510, 50665], "temperature": 0.0, "avg_logprob": -0.07046341395878292, "compression_ratio": 1.7227722772277227, "no_speech_prob": 0.0006670881411992013}, {"id": 669, "seek": 193334, "start": 1939.34, "end": 1941.34, "text": " and made it a bit more respectable.", "tokens": [50665, 293, 1027, 309, 257, 857, 544, 44279, 13, 50765], "temperature": 0.0, "avg_logprob": -0.07046341395878292, "compression_ratio": 1.7227722772277227, "no_speech_prob": 0.0006670881411992013}, {"id": 670, "seek": 193334, "start": 1941.34, "end": 1943.34, "text": " So here's our dataset.", "tokens": [50765, 407, 510, 311, 527, 28872, 13, 50865], "temperature": 0.0, "avg_logprob": -0.07046341395878292, "compression_ratio": 1.7227722772277227, "no_speech_prob": 0.0006670881411992013}, {"id": 671, "seek": 193334, "start": 1943.34, "end": 1945.34, "text": " Here's all the parameters that we defined.", "tokens": [50865, 1692, 311, 439, 264, 9834, 300, 321, 7642, 13, 50965], "temperature": 0.0, "avg_logprob": -0.07046341395878292, "compression_ratio": 1.7227722772277227, "no_speech_prob": 0.0006670881411992013}, {"id": 672, "seek": 193334, "start": 1945.34, "end": 1947.34, "text": " I'm now using a generator to make it reproducible.", "tokens": [50965, 286, 478, 586, 1228, 257, 19265, 281, 652, 309, 11408, 32128, 13, 51065], "temperature": 0.0, "avg_logprob": -0.07046341395878292, "compression_ratio": 1.7227722772277227, "no_speech_prob": 0.0006670881411992013}, {"id": 673, "seek": 193334, "start": 1947.34, "end": 1949.34, "text": " I clustered all the parameters", "tokens": [51065, 286, 596, 38624, 439, 264, 9834, 51165], "temperature": 0.0, "avg_logprob": -0.07046341395878292, "compression_ratio": 1.7227722772277227, "no_speech_prob": 0.0006670881411992013}, {"id": 674, "seek": 193334, "start": 1949.34, "end": 1951.34, "text": " into a single list of parameters", "tokens": [51165, 666, 257, 2167, 1329, 295, 9834, 51265], "temperature": 0.0, "avg_logprob": -0.07046341395878292, "compression_ratio": 1.7227722772277227, "no_speech_prob": 0.0006670881411992013}, {"id": 675, "seek": 193334, "start": 1951.34, "end": 1953.34, "text": " so that for example it's easy to count them", "tokens": [51265, 370, 300, 337, 1365, 309, 311, 1858, 281, 1207, 552, 51365], "temperature": 0.0, "avg_logprob": -0.07046341395878292, "compression_ratio": 1.7227722772277227, "no_speech_prob": 0.0006670881411992013}, {"id": 676, "seek": 193334, "start": 1953.34, "end": 1955.34, "text": " and see that in total we currently have", "tokens": [51365, 293, 536, 300, 294, 3217, 321, 4362, 362, 51465], "temperature": 0.0, "avg_logprob": -0.07046341395878292, "compression_ratio": 1.7227722772277227, "no_speech_prob": 0.0006670881411992013}, {"id": 677, "seek": 193334, "start": 1955.34, "end": 1957.34, "text": " about 3400 parameters.", "tokens": [51465, 466, 12790, 628, 9834, 13, 51565], "temperature": 0.0, "avg_logprob": -0.07046341395878292, "compression_ratio": 1.7227722772277227, "no_speech_prob": 0.0006670881411992013}, {"id": 678, "seek": 193334, "start": 1957.34, "end": 1959.34, "text": " And this is the forward pass as we developed it", "tokens": [51565, 400, 341, 307, 264, 2128, 1320, 382, 321, 4743, 309, 51665], "temperature": 0.0, "avg_logprob": -0.07046341395878292, "compression_ratio": 1.7227722772277227, "no_speech_prob": 0.0006670881411992013}, {"id": 679, "seek": 193334, "start": 1959.34, "end": 1961.34, "text": " and we arrive at a", "tokens": [51665, 293, 321, 8881, 412, 257, 51765], "temperature": 0.0, "avg_logprob": -0.07046341395878292, "compression_ratio": 1.7227722772277227, "no_speech_prob": 0.0006670881411992013}, {"id": 680, "seek": 193334, "start": 1961.34, "end": 1963.34, "text": " single number here, the loss, that is currently", "tokens": [51765, 2167, 1230, 510, 11, 264, 4470, 11, 300, 307, 4362, 51865], "temperature": 0.0, "avg_logprob": -0.07046341395878292, "compression_ratio": 1.7227722772277227, "no_speech_prob": 0.0006670881411992013}, {"id": 681, "seek": 196334, "start": 1963.34, "end": 1965.34, "text": " expressing how well", "tokens": [50365, 22171, 577, 731, 50465], "temperature": 0.0, "avg_logprob": -0.07040286064147949, "compression_ratio": 1.7578947368421052, "no_speech_prob": 0.00026358262402936816}, {"id": 682, "seek": 196334, "start": 1965.34, "end": 1967.34, "text": " this neural network works with the current", "tokens": [50465, 341, 18161, 3209, 1985, 365, 264, 2190, 50565], "temperature": 0.0, "avg_logprob": -0.07040286064147949, "compression_ratio": 1.7578947368421052, "no_speech_prob": 0.00026358262402936816}, {"id": 683, "seek": 196334, "start": 1967.34, "end": 1969.34, "text": " setting of parameters.", "tokens": [50565, 3287, 295, 9834, 13, 50665], "temperature": 0.0, "avg_logprob": -0.07040286064147949, "compression_ratio": 1.7578947368421052, "no_speech_prob": 0.00026358262402936816}, {"id": 684, "seek": 196334, "start": 1969.34, "end": 1971.34, "text": " Now I would like to make it even more respectable.", "tokens": [50665, 823, 286, 576, 411, 281, 652, 309, 754, 544, 44279, 13, 50765], "temperature": 0.0, "avg_logprob": -0.07040286064147949, "compression_ratio": 1.7578947368421052, "no_speech_prob": 0.00026358262402936816}, {"id": 685, "seek": 196334, "start": 1971.34, "end": 1973.34, "text": " So in particular see these lines here", "tokens": [50765, 407, 294, 1729, 536, 613, 3876, 510, 50865], "temperature": 0.0, "avg_logprob": -0.07040286064147949, "compression_ratio": 1.7578947368421052, "no_speech_prob": 0.00026358262402936816}, {"id": 686, "seek": 196334, "start": 1973.34, "end": 1975.34, "text": " where we take the logits and we calculate", "tokens": [50865, 689, 321, 747, 264, 3565, 1208, 293, 321, 8873, 50965], "temperature": 0.0, "avg_logprob": -0.07040286064147949, "compression_ratio": 1.7578947368421052, "no_speech_prob": 0.00026358262402936816}, {"id": 687, "seek": 196334, "start": 1975.34, "end": 1977.34, "text": " the loss.", "tokens": [50965, 264, 4470, 13, 51065], "temperature": 0.0, "avg_logprob": -0.07040286064147949, "compression_ratio": 1.7578947368421052, "no_speech_prob": 0.00026358262402936816}, {"id": 688, "seek": 196334, "start": 1977.34, "end": 1979.34, "text": " We're not actually reinventing the wheel here.", "tokens": [51065, 492, 434, 406, 767, 33477, 278, 264, 5589, 510, 13, 51165], "temperature": 0.0, "avg_logprob": -0.07040286064147949, "compression_ratio": 1.7578947368421052, "no_speech_prob": 0.00026358262402936816}, {"id": 689, "seek": 196334, "start": 1979.34, "end": 1981.34, "text": " This is just", "tokens": [51165, 639, 307, 445, 51265], "temperature": 0.0, "avg_logprob": -0.07040286064147949, "compression_ratio": 1.7578947368421052, "no_speech_prob": 0.00026358262402936816}, {"id": 690, "seek": 196334, "start": 1981.34, "end": 1983.34, "text": " classification and many people", "tokens": [51265, 21538, 293, 867, 561, 51365], "temperature": 0.0, "avg_logprob": -0.07040286064147949, "compression_ratio": 1.7578947368421052, "no_speech_prob": 0.00026358262402936816}, {"id": 691, "seek": 196334, "start": 1983.34, "end": 1985.34, "text": " use classification and that's why there is", "tokens": [51365, 764, 21538, 293, 300, 311, 983, 456, 307, 51465], "temperature": 0.0, "avg_logprob": -0.07040286064147949, "compression_ratio": 1.7578947368421052, "no_speech_prob": 0.00026358262402936816}, {"id": 692, "seek": 196334, "start": 1985.34, "end": 1987.34, "text": " a functional dot cross entropy function", "tokens": [51465, 257, 11745, 5893, 3278, 30867, 2445, 51565], "temperature": 0.0, "avg_logprob": -0.07040286064147949, "compression_ratio": 1.7578947368421052, "no_speech_prob": 0.00026358262402936816}, {"id": 693, "seek": 196334, "start": 1987.34, "end": 1989.34, "text": " in PyTorch to calculate this", "tokens": [51565, 294, 9953, 51, 284, 339, 281, 8873, 341, 51665], "temperature": 0.0, "avg_logprob": -0.07040286064147949, "compression_ratio": 1.7578947368421052, "no_speech_prob": 0.00026358262402936816}, {"id": 694, "seek": 196334, "start": 1989.34, "end": 1991.34, "text": " much more efficiently.", "tokens": [51665, 709, 544, 19621, 13, 51765], "temperature": 0.0, "avg_logprob": -0.07040286064147949, "compression_ratio": 1.7578947368421052, "no_speech_prob": 0.00026358262402936816}, {"id": 695, "seek": 196334, "start": 1991.34, "end": 1993.34, "text": " So we could just simply call f dot cross entropy", "tokens": [51765, 407, 321, 727, 445, 2935, 818, 283, 5893, 3278, 30867, 51865], "temperature": 0.0, "avg_logprob": -0.07040286064147949, "compression_ratio": 1.7578947368421052, "no_speech_prob": 0.00026358262402936816}, {"id": 696, "seek": 199334, "start": 1993.34, "end": 1995.34, "text": " and we can pass in the logits and we can pass in", "tokens": [50365, 293, 321, 393, 1320, 294, 264, 3565, 1208, 293, 321, 393, 1320, 294, 50465], "temperature": 0.0, "avg_logprob": -0.04582803640792619, "compression_ratio": 1.803030303030303, "no_speech_prob": 0.00040576004539616406}, {"id": 697, "seek": 199334, "start": 1995.34, "end": 1997.34, "text": " the array of targets y", "tokens": [50465, 264, 10225, 295, 12911, 288, 50565], "temperature": 0.0, "avg_logprob": -0.04582803640792619, "compression_ratio": 1.803030303030303, "no_speech_prob": 0.00040576004539616406}, {"id": 698, "seek": 199334, "start": 1997.34, "end": 1999.34, "text": " and this calculates the exact", "tokens": [50565, 293, 341, 4322, 1024, 264, 1900, 50665], "temperature": 0.0, "avg_logprob": -0.04582803640792619, "compression_ratio": 1.803030303030303, "no_speech_prob": 0.00040576004539616406}, {"id": 699, "seek": 199334, "start": 1999.34, "end": 2001.34, "text": " same loss.", "tokens": [50665, 912, 4470, 13, 50765], "temperature": 0.0, "avg_logprob": -0.04582803640792619, "compression_ratio": 1.803030303030303, "no_speech_prob": 0.00040576004539616406}, {"id": 700, "seek": 199334, "start": 2001.34, "end": 2003.34, "text": " So in fact we can", "tokens": [50765, 407, 294, 1186, 321, 393, 50865], "temperature": 0.0, "avg_logprob": -0.04582803640792619, "compression_ratio": 1.803030303030303, "no_speech_prob": 0.00040576004539616406}, {"id": 701, "seek": 199334, "start": 2003.34, "end": 2005.34, "text": " simply put this here", "tokens": [50865, 2935, 829, 341, 510, 50965], "temperature": 0.0, "avg_logprob": -0.04582803640792619, "compression_ratio": 1.803030303030303, "no_speech_prob": 0.00040576004539616406}, {"id": 702, "seek": 199334, "start": 2005.34, "end": 2007.34, "text": " and erase these three lines", "tokens": [50965, 293, 23525, 613, 1045, 3876, 51065], "temperature": 0.0, "avg_logprob": -0.04582803640792619, "compression_ratio": 1.803030303030303, "no_speech_prob": 0.00040576004539616406}, {"id": 703, "seek": 199334, "start": 2007.34, "end": 2009.34, "text": " and we're going to get the exact same result.", "tokens": [51065, 293, 321, 434, 516, 281, 483, 264, 1900, 912, 1874, 13, 51165], "temperature": 0.0, "avg_logprob": -0.04582803640792619, "compression_ratio": 1.803030303030303, "no_speech_prob": 0.00040576004539616406}, {"id": 704, "seek": 199334, "start": 2009.34, "end": 2011.34, "text": " Now there are actually many good reasons", "tokens": [51165, 823, 456, 366, 767, 867, 665, 4112, 51265], "temperature": 0.0, "avg_logprob": -0.04582803640792619, "compression_ratio": 1.803030303030303, "no_speech_prob": 0.00040576004539616406}, {"id": 705, "seek": 199334, "start": 2011.34, "end": 2013.34, "text": " to prefer f dot cross entropy over", "tokens": [51265, 281, 4382, 283, 5893, 3278, 30867, 670, 51365], "temperature": 0.0, "avg_logprob": -0.04582803640792619, "compression_ratio": 1.803030303030303, "no_speech_prob": 0.00040576004539616406}, {"id": 706, "seek": 199334, "start": 2013.34, "end": 2015.34, "text": " rolling your own implementation like this.", "tokens": [51365, 9439, 428, 1065, 11420, 411, 341, 13, 51465], "temperature": 0.0, "avg_logprob": -0.04582803640792619, "compression_ratio": 1.803030303030303, "no_speech_prob": 0.00040576004539616406}, {"id": 707, "seek": 199334, "start": 2015.34, "end": 2017.34, "text": " I did this for educational reasons", "tokens": [51465, 286, 630, 341, 337, 10189, 4112, 51565], "temperature": 0.0, "avg_logprob": -0.04582803640792619, "compression_ratio": 1.803030303030303, "no_speech_prob": 0.00040576004539616406}, {"id": 708, "seek": 199334, "start": 2017.34, "end": 2019.34, "text": " but you'd never use this in practice.", "tokens": [51565, 457, 291, 1116, 1128, 764, 341, 294, 3124, 13, 51665], "temperature": 0.0, "avg_logprob": -0.04582803640792619, "compression_ratio": 1.803030303030303, "no_speech_prob": 0.00040576004539616406}, {"id": 709, "seek": 199334, "start": 2019.34, "end": 2021.34, "text": " Why is that?", "tokens": [51665, 1545, 307, 300, 30, 51765], "temperature": 0.0, "avg_logprob": -0.04582803640792619, "compression_ratio": 1.803030303030303, "no_speech_prob": 0.00040576004539616406}, {"id": 710, "seek": 199334, "start": 2021.34, "end": 2023.34, "text": " Number one, when you use f dot cross entropy,", "tokens": [51765, 5118, 472, 11, 562, 291, 764, 283, 5893, 3278, 30867, 11, 51865], "temperature": 0.0, "avg_logprob": -0.04582803640792619, "compression_ratio": 1.803030303030303, "no_speech_prob": 0.00040576004539616406}, {"id": 711, "seek": 202334, "start": 2023.34, "end": 2025.34, "text": " PyTorch will not actually create", "tokens": [50365, 9953, 51, 284, 339, 486, 406, 767, 1884, 50465], "temperature": 0.0, "avg_logprob": -0.06453803956039308, "compression_ratio": 1.8407407407407408, "no_speech_prob": 0.00027057816623710096}, {"id": 712, "seek": 202334, "start": 2025.34, "end": 2027.34, "text": " all these intermediate tensors", "tokens": [50465, 439, 613, 19376, 10688, 830, 50565], "temperature": 0.0, "avg_logprob": -0.06453803956039308, "compression_ratio": 1.8407407407407408, "no_speech_prob": 0.00027057816623710096}, {"id": 713, "seek": 202334, "start": 2027.34, "end": 2029.34, "text": " because these are all new tensors in memory", "tokens": [50565, 570, 613, 366, 439, 777, 10688, 830, 294, 4675, 50665], "temperature": 0.0, "avg_logprob": -0.06453803956039308, "compression_ratio": 1.8407407407407408, "no_speech_prob": 0.00027057816623710096}, {"id": 714, "seek": 202334, "start": 2029.34, "end": 2031.34, "text": " and all this is fairly inefficient", "tokens": [50665, 293, 439, 341, 307, 6457, 43495, 50765], "temperature": 0.0, "avg_logprob": -0.06453803956039308, "compression_ratio": 1.8407407407407408, "no_speech_prob": 0.00027057816623710096}, {"id": 715, "seek": 202334, "start": 2031.34, "end": 2033.34, "text": " to run like this.", "tokens": [50765, 281, 1190, 411, 341, 13, 50865], "temperature": 0.0, "avg_logprob": -0.06453803956039308, "compression_ratio": 1.8407407407407408, "no_speech_prob": 0.00027057816623710096}, {"id": 716, "seek": 202334, "start": 2033.34, "end": 2035.34, "text": " Instead PyTorch will cluster up all these operations", "tokens": [50865, 7156, 9953, 51, 284, 339, 486, 13630, 493, 439, 613, 7705, 50965], "temperature": 0.0, "avg_logprob": -0.06453803956039308, "compression_ratio": 1.8407407407407408, "no_speech_prob": 0.00027057816623710096}, {"id": 717, "seek": 202334, "start": 2035.34, "end": 2037.34, "text": " and very often", "tokens": [50965, 293, 588, 2049, 51065], "temperature": 0.0, "avg_logprob": -0.06453803956039308, "compression_ratio": 1.8407407407407408, "no_speech_prob": 0.00027057816623710096}, {"id": 718, "seek": 202334, "start": 2037.34, "end": 2039.34, "text": " have fused kernels", "tokens": [51065, 362, 283, 4717, 23434, 1625, 51165], "temperature": 0.0, "avg_logprob": -0.06453803956039308, "compression_ratio": 1.8407407407407408, "no_speech_prob": 0.00027057816623710096}, {"id": 719, "seek": 202334, "start": 2039.34, "end": 2041.34, "text": " that very efficiently evaluate these expressions", "tokens": [51165, 300, 588, 19621, 13059, 613, 15277, 51265], "temperature": 0.0, "avg_logprob": -0.06453803956039308, "compression_ratio": 1.8407407407407408, "no_speech_prob": 0.00027057816623710096}, {"id": 720, "seek": 202334, "start": 2041.34, "end": 2043.34, "text": " that are sort of like clustered mathematical operations.", "tokens": [51265, 300, 366, 1333, 295, 411, 596, 38624, 18894, 7705, 13, 51365], "temperature": 0.0, "avg_logprob": -0.06453803956039308, "compression_ratio": 1.8407407407407408, "no_speech_prob": 0.00027057816623710096}, {"id": 721, "seek": 202334, "start": 2043.34, "end": 2045.34, "text": " Number two,", "tokens": [51365, 5118, 732, 11, 51465], "temperature": 0.0, "avg_logprob": -0.06453803956039308, "compression_ratio": 1.8407407407407408, "no_speech_prob": 0.00027057816623710096}, {"id": 722, "seek": 202334, "start": 2045.34, "end": 2047.34, "text": " the backward pass can be made much more efficient", "tokens": [51465, 264, 23897, 1320, 393, 312, 1027, 709, 544, 7148, 51565], "temperature": 0.0, "avg_logprob": -0.06453803956039308, "compression_ratio": 1.8407407407407408, "no_speech_prob": 0.00027057816623710096}, {"id": 723, "seek": 202334, "start": 2047.34, "end": 2049.34, "text": " and not just because it's a fused kernel", "tokens": [51565, 293, 406, 445, 570, 309, 311, 257, 283, 4717, 28256, 51665], "temperature": 0.0, "avg_logprob": -0.06453803956039308, "compression_ratio": 1.8407407407407408, "no_speech_prob": 0.00027057816623710096}, {"id": 724, "seek": 202334, "start": 2049.34, "end": 2051.34, "text": " but also analytically", "tokens": [51665, 457, 611, 10783, 984, 51765], "temperature": 0.0, "avg_logprob": -0.06453803956039308, "compression_ratio": 1.8407407407407408, "no_speech_prob": 0.00027057816623710096}, {"id": 725, "seek": 202334, "start": 2051.34, "end": 2053.34, "text": " and mathematically", "tokens": [51765, 293, 44003, 51865], "temperature": 0.0, "avg_logprob": -0.06453803956039308, "compression_ratio": 1.8407407407407408, "no_speech_prob": 0.00027057816623710096}, {"id": 726, "seek": 205334, "start": 2053.34, "end": 2055.34, "text": " because it's often a very much simpler", "tokens": [50365, 570, 309, 311, 2049, 257, 588, 709, 18587, 50465], "temperature": 0.0, "avg_logprob": -0.10960867155843707, "compression_ratio": 1.962686567164179, "no_speech_prob": 0.00012043314200127497}, {"id": 727, "seek": 205334, "start": 2055.34, "end": 2057.34, "text": " backward pass to implement.", "tokens": [50465, 23897, 1320, 281, 4445, 13, 50565], "temperature": 0.0, "avg_logprob": -0.10960867155843707, "compression_ratio": 1.962686567164179, "no_speech_prob": 0.00012043314200127497}, {"id": 728, "seek": 205334, "start": 2057.34, "end": 2059.34, "text": " We actually saw this with micrograd.", "tokens": [50565, 492, 767, 1866, 341, 365, 4532, 7165, 13, 50665], "temperature": 0.0, "avg_logprob": -0.10960867155843707, "compression_ratio": 1.962686567164179, "no_speech_prob": 0.00012043314200127497}, {"id": 729, "seek": 205334, "start": 2059.34, "end": 2061.34, "text": " You see here when we implemented 10H", "tokens": [50665, 509, 536, 510, 562, 321, 12270, 1266, 39, 50765], "temperature": 0.0, "avg_logprob": -0.10960867155843707, "compression_ratio": 1.962686567164179, "no_speech_prob": 0.00012043314200127497}, {"id": 730, "seek": 205334, "start": 2061.34, "end": 2063.34, "text": " the forward pass of this operation", "tokens": [50765, 264, 2128, 1320, 295, 341, 6916, 50865], "temperature": 0.0, "avg_logprob": -0.10960867155843707, "compression_ratio": 1.962686567164179, "no_speech_prob": 0.00012043314200127497}, {"id": 731, "seek": 205334, "start": 2063.34, "end": 2065.34, "text": " to calculate the 10H", "tokens": [50865, 281, 8873, 264, 1266, 39, 50965], "temperature": 0.0, "avg_logprob": -0.10960867155843707, "compression_ratio": 1.962686567164179, "no_speech_prob": 0.00012043314200127497}, {"id": 732, "seek": 205334, "start": 2065.34, "end": 2067.34, "text": " was actually a fairly complicated mathematical expression.", "tokens": [50965, 390, 767, 257, 6457, 6179, 18894, 6114, 13, 51065], "temperature": 0.0, "avg_logprob": -0.10960867155843707, "compression_ratio": 1.962686567164179, "no_speech_prob": 0.00012043314200127497}, {"id": 733, "seek": 205334, "start": 2067.34, "end": 2069.34, "text": " But because it's a clustered", "tokens": [51065, 583, 570, 309, 311, 257, 596, 38624, 51165], "temperature": 0.0, "avg_logprob": -0.10960867155843707, "compression_ratio": 1.962686567164179, "no_speech_prob": 0.00012043314200127497}, {"id": 734, "seek": 205334, "start": 2069.34, "end": 2071.34, "text": " mathematical expression", "tokens": [51165, 18894, 6114, 51265], "temperature": 0.0, "avg_logprob": -0.10960867155843707, "compression_ratio": 1.962686567164179, "no_speech_prob": 0.00012043314200127497}, {"id": 735, "seek": 205334, "start": 2071.34, "end": 2073.34, "text": " when we did the backward pass", "tokens": [51265, 562, 321, 630, 264, 23897, 1320, 51365], "temperature": 0.0, "avg_logprob": -0.10960867155843707, "compression_ratio": 1.962686567164179, "no_speech_prob": 0.00012043314200127497}, {"id": 736, "seek": 205334, "start": 2073.34, "end": 2075.34, "text": " we didn't individually backward through the", "tokens": [51365, 321, 994, 380, 16652, 23897, 807, 264, 51465], "temperature": 0.0, "avg_logprob": -0.10960867155843707, "compression_ratio": 1.962686567164179, "no_speech_prob": 0.00012043314200127497}, {"id": 737, "seek": 205334, "start": 2075.34, "end": 2077.34, "text": " x and the 2 times and the minus 1", "tokens": [51465, 2031, 293, 264, 568, 1413, 293, 264, 3175, 502, 51565], "temperature": 0.0, "avg_logprob": -0.10960867155843707, "compression_ratio": 1.962686567164179, "no_speech_prob": 0.00012043314200127497}, {"id": 738, "seek": 205334, "start": 2077.34, "end": 2079.34, "text": " and the division, etc.", "tokens": [51565, 293, 264, 10044, 11, 5183, 13, 51665], "temperature": 0.0, "avg_logprob": -0.10960867155843707, "compression_ratio": 1.962686567164179, "no_speech_prob": 0.00012043314200127497}, {"id": 739, "seek": 205334, "start": 2079.34, "end": 2081.34, "text": " We just said it's 1 minus t squared", "tokens": [51665, 492, 445, 848, 309, 311, 502, 3175, 256, 8889, 51765], "temperature": 0.0, "avg_logprob": -0.10960867155843707, "compression_ratio": 1.962686567164179, "no_speech_prob": 0.00012043314200127497}, {"id": 740, "seek": 205334, "start": 2081.34, "end": 2083.34, "text": " and that's a much simpler mathematical expression.", "tokens": [51765, 293, 300, 311, 257, 709, 18587, 18894, 6114, 13, 51865], "temperature": 0.0, "avg_logprob": -0.10960867155843707, "compression_ratio": 1.962686567164179, "no_speech_prob": 0.00012043314200127497}, {"id": 741, "seek": 208334, "start": 2083.34, "end": 2085.34, "text": " And we were able to do this", "tokens": [50365, 400, 321, 645, 1075, 281, 360, 341, 50465], "temperature": 0.0, "avg_logprob": -0.08267037621859846, "compression_ratio": 1.8577405857740585, "no_speech_prob": 0.00026720561436377466}, {"id": 742, "seek": 208334, "start": 2085.34, "end": 2087.34, "text": " because we're able to reuse calculations", "tokens": [50465, 570, 321, 434, 1075, 281, 26225, 20448, 50565], "temperature": 0.0, "avg_logprob": -0.08267037621859846, "compression_ratio": 1.8577405857740585, "no_speech_prob": 0.00026720561436377466}, {"id": 743, "seek": 208334, "start": 2087.34, "end": 2089.34, "text": " and because we are able to mathematically", "tokens": [50565, 293, 570, 321, 366, 1075, 281, 44003, 50665], "temperature": 0.0, "avg_logprob": -0.08267037621859846, "compression_ratio": 1.8577405857740585, "no_speech_prob": 0.00026720561436377466}, {"id": 744, "seek": 208334, "start": 2089.34, "end": 2091.34, "text": " and analytically derive the derivative", "tokens": [50665, 293, 10783, 984, 28446, 264, 13760, 50765], "temperature": 0.0, "avg_logprob": -0.08267037621859846, "compression_ratio": 1.8577405857740585, "no_speech_prob": 0.00026720561436377466}, {"id": 745, "seek": 208334, "start": 2091.34, "end": 2093.34, "text": " and often that expression simplifies mathematically", "tokens": [50765, 293, 2049, 300, 6114, 6883, 11221, 44003, 50865], "temperature": 0.0, "avg_logprob": -0.08267037621859846, "compression_ratio": 1.8577405857740585, "no_speech_prob": 0.00026720561436377466}, {"id": 746, "seek": 208334, "start": 2093.34, "end": 2095.34, "text": " and so there's much less to implement.", "tokens": [50865, 293, 370, 456, 311, 709, 1570, 281, 4445, 13, 50965], "temperature": 0.0, "avg_logprob": -0.08267037621859846, "compression_ratio": 1.8577405857740585, "no_speech_prob": 0.00026720561436377466}, {"id": 747, "seek": 208334, "start": 2095.34, "end": 2097.34, "text": " So not only", "tokens": [50965, 407, 406, 787, 51065], "temperature": 0.0, "avg_logprob": -0.08267037621859846, "compression_ratio": 1.8577405857740585, "no_speech_prob": 0.00026720561436377466}, {"id": 748, "seek": 208334, "start": 2097.34, "end": 2099.34, "text": " can it be made more efficient", "tokens": [51065, 393, 309, 312, 1027, 544, 7148, 51165], "temperature": 0.0, "avg_logprob": -0.08267037621859846, "compression_ratio": 1.8577405857740585, "no_speech_prob": 0.00026720561436377466}, {"id": 749, "seek": 208334, "start": 2099.34, "end": 2101.34, "text": " because it runs in a fused kernel", "tokens": [51165, 570, 309, 6676, 294, 257, 283, 4717, 28256, 51265], "temperature": 0.0, "avg_logprob": -0.08267037621859846, "compression_ratio": 1.8577405857740585, "no_speech_prob": 0.00026720561436377466}, {"id": 750, "seek": 208334, "start": 2101.34, "end": 2103.34, "text": " but also because the expressions", "tokens": [51265, 457, 611, 570, 264, 15277, 51365], "temperature": 0.0, "avg_logprob": -0.08267037621859846, "compression_ratio": 1.8577405857740585, "no_speech_prob": 0.00026720561436377466}, {"id": 751, "seek": 208334, "start": 2103.34, "end": 2105.34, "text": " can take a much simpler form mathematically.", "tokens": [51365, 393, 747, 257, 709, 18587, 1254, 44003, 13, 51465], "temperature": 0.0, "avg_logprob": -0.08267037621859846, "compression_ratio": 1.8577405857740585, "no_speech_prob": 0.00026720561436377466}, {"id": 752, "seek": 208334, "start": 2105.34, "end": 2107.34, "text": " So that's number one.", "tokens": [51465, 407, 300, 311, 1230, 472, 13, 51565], "temperature": 0.0, "avg_logprob": -0.08267037621859846, "compression_ratio": 1.8577405857740585, "no_speech_prob": 0.00026720561436377466}, {"id": 753, "seek": 208334, "start": 2107.34, "end": 2109.34, "text": " Number two,", "tokens": [51565, 5118, 732, 11, 51665], "temperature": 0.0, "avg_logprob": -0.08267037621859846, "compression_ratio": 1.8577405857740585, "no_speech_prob": 0.00026720561436377466}, {"id": 754, "seek": 208334, "start": 2109.34, "end": 2111.34, "text": " under the hood,", "tokens": [51665, 833, 264, 13376, 11, 51765], "temperature": 0.0, "avg_logprob": -0.08267037621859846, "compression_ratio": 1.8577405857740585, "no_speech_prob": 0.00026720561436377466}, {"id": 755, "seek": 211134, "start": 2111.34, "end": 2113.34, "text": " it's significantly more", "tokens": [50365, 309, 311, 10591, 544, 50465], "temperature": 0.0, "avg_logprob": -0.11723876529269749, "compression_ratio": 1.6632302405498283, "no_speech_prob": 0.0004722538869827986}, {"id": 756, "seek": 211134, "start": 2113.34, "end": 2115.34, "text": " numerically well behaved.", "tokens": [50465, 7866, 984, 731, 48249, 13, 50565], "temperature": 0.0, "avg_logprob": -0.11723876529269749, "compression_ratio": 1.6632302405498283, "no_speech_prob": 0.0004722538869827986}, {"id": 757, "seek": 211134, "start": 2115.34, "end": 2117.34, "text": " Let me show you an example of how this works.", "tokens": [50565, 961, 385, 855, 291, 364, 1365, 295, 577, 341, 1985, 13, 50665], "temperature": 0.0, "avg_logprob": -0.11723876529269749, "compression_ratio": 1.6632302405498283, "no_speech_prob": 0.0004722538869827986}, {"id": 758, "seek": 211134, "start": 2119.34, "end": 2121.34, "text": " Suppose we have a logits of", "tokens": [50765, 21360, 321, 362, 257, 3565, 1208, 295, 50865], "temperature": 0.0, "avg_logprob": -0.11723876529269749, "compression_ratio": 1.6632302405498283, "no_speech_prob": 0.0004722538869827986}, {"id": 759, "seek": 211134, "start": 2121.34, "end": 2123.34, "text": " negative 2, 3, negative 3, 0 and 5.", "tokens": [50865, 3671, 568, 11, 805, 11, 3671, 805, 11, 1958, 293, 1025, 13, 50965], "temperature": 0.0, "avg_logprob": -0.11723876529269749, "compression_ratio": 1.6632302405498283, "no_speech_prob": 0.0004722538869827986}, {"id": 760, "seek": 211134, "start": 2123.34, "end": 2125.34, "text": " And then we are taking the exponent", "tokens": [50965, 400, 550, 321, 366, 1940, 264, 37871, 51065], "temperature": 0.0, "avg_logprob": -0.11723876529269749, "compression_ratio": 1.6632302405498283, "no_speech_prob": 0.0004722538869827986}, {"id": 761, "seek": 211134, "start": 2125.34, "end": 2127.34, "text": " of it and normalizing it to sum to 1.", "tokens": [51065, 295, 309, 293, 2710, 3319, 309, 281, 2408, 281, 502, 13, 51165], "temperature": 0.0, "avg_logprob": -0.11723876529269749, "compression_ratio": 1.6632302405498283, "no_speech_prob": 0.0004722538869827986}, {"id": 762, "seek": 211134, "start": 2127.34, "end": 2129.34, "text": " So when logits take on", "tokens": [51165, 407, 562, 3565, 1208, 747, 322, 51265], "temperature": 0.0, "avg_logprob": -0.11723876529269749, "compression_ratio": 1.6632302405498283, "no_speech_prob": 0.0004722538869827986}, {"id": 763, "seek": 211134, "start": 2129.34, "end": 2131.34, "text": " these values, everything is well and good", "tokens": [51265, 613, 4190, 11, 1203, 307, 731, 293, 665, 51365], "temperature": 0.0, "avg_logprob": -0.11723876529269749, "compression_ratio": 1.6632302405498283, "no_speech_prob": 0.0004722538869827986}, {"id": 764, "seek": 211134, "start": 2131.34, "end": 2133.34, "text": " and we get a nice probability distribution.", "tokens": [51365, 293, 321, 483, 257, 1481, 8482, 7316, 13, 51465], "temperature": 0.0, "avg_logprob": -0.11723876529269749, "compression_ratio": 1.6632302405498283, "no_speech_prob": 0.0004722538869827986}, {"id": 765, "seek": 211134, "start": 2133.34, "end": 2135.34, "text": " Now consider what happens when", "tokens": [51465, 823, 1949, 437, 2314, 562, 51565], "temperature": 0.0, "avg_logprob": -0.11723876529269749, "compression_ratio": 1.6632302405498283, "no_speech_prob": 0.0004722538869827986}, {"id": 766, "seek": 211134, "start": 2135.34, "end": 2137.34, "text": " some of these logits take on more extreme values.", "tokens": [51565, 512, 295, 613, 3565, 1208, 747, 322, 544, 8084, 4190, 13, 51665], "temperature": 0.0, "avg_logprob": -0.11723876529269749, "compression_ratio": 1.6632302405498283, "no_speech_prob": 0.0004722538869827986}, {"id": 767, "seek": 211134, "start": 2137.34, "end": 2139.34, "text": " And that can happen during optimization", "tokens": [51665, 400, 300, 393, 1051, 1830, 19618, 51765], "temperature": 0.0, "avg_logprob": -0.11723876529269749, "compression_ratio": 1.6632302405498283, "no_speech_prob": 0.0004722538869827986}, {"id": 768, "seek": 211134, "start": 2139.34, "end": 2141.34, "text": " of a neural network.", "tokens": [51765, 295, 257, 18161, 3209, 13, 51865], "temperature": 0.0, "avg_logprob": -0.11723876529269749, "compression_ratio": 1.6632302405498283, "no_speech_prob": 0.0004722538869827986}, {"id": 769, "seek": 214134, "start": 2141.34, "end": 2143.34, "text": " Let's say some of these numbers grow very negative", "tokens": [50365, 961, 311, 584, 512, 295, 613, 3547, 1852, 588, 3671, 50465], "temperature": 0.0, "avg_logprob": -0.1190050997475321, "compression_ratio": 1.7424242424242424, "no_speech_prob": 0.00021647571702487767}, {"id": 770, "seek": 214134, "start": 2143.34, "end": 2145.34, "text": " like say negative 100.", "tokens": [50465, 411, 584, 3671, 2319, 13, 50565], "temperature": 0.0, "avg_logprob": -0.1190050997475321, "compression_ratio": 1.7424242424242424, "no_speech_prob": 0.00021647571702487767}, {"id": 771, "seek": 214134, "start": 2145.34, "end": 2147.34, "text": " Then actually everything will come out fine.", "tokens": [50565, 1396, 767, 1203, 486, 808, 484, 2489, 13, 50665], "temperature": 0.0, "avg_logprob": -0.1190050997475321, "compression_ratio": 1.7424242424242424, "no_speech_prob": 0.00021647571702487767}, {"id": 772, "seek": 214134, "start": 2147.34, "end": 2149.34, "text": " We still get probabilities that", "tokens": [50665, 492, 920, 483, 33783, 300, 50765], "temperature": 0.0, "avg_logprob": -0.1190050997475321, "compression_ratio": 1.7424242424242424, "no_speech_prob": 0.00021647571702487767}, {"id": 773, "seek": 214134, "start": 2149.34, "end": 2151.34, "text": " are well behaved", "tokens": [50765, 366, 731, 48249, 50865], "temperature": 0.0, "avg_logprob": -0.1190050997475321, "compression_ratio": 1.7424242424242424, "no_speech_prob": 0.00021647571702487767}, {"id": 774, "seek": 214134, "start": 2151.34, "end": 2153.34, "text": " and they sum to 1 and everything is great.", "tokens": [50865, 293, 436, 2408, 281, 502, 293, 1203, 307, 869, 13, 50965], "temperature": 0.0, "avg_logprob": -0.1190050997475321, "compression_ratio": 1.7424242424242424, "no_speech_prob": 0.00021647571702487767}, {"id": 775, "seek": 214134, "start": 2153.34, "end": 2155.34, "text": " But because of the way", "tokens": [50965, 583, 570, 295, 264, 636, 51065], "temperature": 0.0, "avg_logprob": -0.1190050997475321, "compression_ratio": 1.7424242424242424, "no_speech_prob": 0.00021647571702487767}, {"id": 776, "seek": 214134, "start": 2155.34, "end": 2157.34, "text": " the X works,", "tokens": [51065, 264, 1783, 1985, 11, 51165], "temperature": 0.0, "avg_logprob": -0.1190050997475321, "compression_ratio": 1.7424242424242424, "no_speech_prob": 0.00021647571702487767}, {"id": 777, "seek": 214134, "start": 2157.34, "end": 2159.34, "text": " if you have very positive logits", "tokens": [51165, 498, 291, 362, 588, 3353, 3565, 1208, 51265], "temperature": 0.0, "avg_logprob": -0.1190050997475321, "compression_ratio": 1.7424242424242424, "no_speech_prob": 0.00021647571702487767}, {"id": 778, "seek": 214134, "start": 2159.34, "end": 2161.34, "text": " like say positive 100 in here,", "tokens": [51265, 411, 584, 3353, 2319, 294, 510, 11, 51365], "temperature": 0.0, "avg_logprob": -0.1190050997475321, "compression_ratio": 1.7424242424242424, "no_speech_prob": 0.00021647571702487767}, {"id": 779, "seek": 214134, "start": 2161.34, "end": 2163.34, "text": " you actually start to run into trouble", "tokens": [51365, 291, 767, 722, 281, 1190, 666, 5253, 51465], "temperature": 0.0, "avg_logprob": -0.1190050997475321, "compression_ratio": 1.7424242424242424, "no_speech_prob": 0.00021647571702487767}, {"id": 780, "seek": 214134, "start": 2163.34, "end": 2165.34, "text": " and we get not a number here.", "tokens": [51465, 293, 321, 483, 406, 257, 1230, 510, 13, 51565], "temperature": 0.0, "avg_logprob": -0.1190050997475321, "compression_ratio": 1.7424242424242424, "no_speech_prob": 0.00021647571702487767}, {"id": 781, "seek": 214134, "start": 2165.34, "end": 2167.34, "text": " And the reason for that is that these counts", "tokens": [51565, 400, 264, 1778, 337, 300, 307, 300, 613, 14893, 51665], "temperature": 0.0, "avg_logprob": -0.1190050997475321, "compression_ratio": 1.7424242424242424, "no_speech_prob": 0.00021647571702487767}, {"id": 782, "seek": 214134, "start": 2167.34, "end": 2169.34, "text": " have an inf here.", "tokens": [51665, 362, 364, 1536, 510, 13, 51765], "temperature": 0.0, "avg_logprob": -0.1190050997475321, "compression_ratio": 1.7424242424242424, "no_speech_prob": 0.00021647571702487767}, {"id": 783, "seek": 214134, "start": 2169.34, "end": 2171.34, "text": " So if you pass in", "tokens": [51765, 407, 498, 291, 1320, 294, 51865], "temperature": 0.0, "avg_logprob": -0.1190050997475321, "compression_ratio": 1.7424242424242424, "no_speech_prob": 0.00021647571702487767}, {"id": 784, "seek": 217134, "start": 2171.34, "end": 2173.34, "text": " a very negative number to exp,", "tokens": [50365, 257, 588, 3671, 1230, 281, 1278, 11, 50465], "temperature": 0.0, "avg_logprob": -0.07889648013644748, "compression_ratio": 1.8511450381679388, "no_speech_prob": 0.00041173442150466144}, {"id": 785, "seek": 217134, "start": 2173.34, "end": 2175.34, "text": " you just get a very negative,", "tokens": [50465, 291, 445, 483, 257, 588, 3671, 11, 50565], "temperature": 0.0, "avg_logprob": -0.07889648013644748, "compression_ratio": 1.8511450381679388, "no_speech_prob": 0.00041173442150466144}, {"id": 786, "seek": 217134, "start": 2175.34, "end": 2177.34, "text": " sorry not negative, but very small number.", "tokens": [50565, 2597, 406, 3671, 11, 457, 588, 1359, 1230, 13, 50665], "temperature": 0.0, "avg_logprob": -0.07889648013644748, "compression_ratio": 1.8511450381679388, "no_speech_prob": 0.00041173442150466144}, {"id": 787, "seek": 217134, "start": 2177.34, "end": 2179.34, "text": " Very near 0 and that's fine.", "tokens": [50665, 4372, 2651, 1958, 293, 300, 311, 2489, 13, 50765], "temperature": 0.0, "avg_logprob": -0.07889648013644748, "compression_ratio": 1.8511450381679388, "no_speech_prob": 0.00041173442150466144}, {"id": 788, "seek": 217134, "start": 2179.34, "end": 2181.34, "text": " But if you pass in a very positive number,", "tokens": [50765, 583, 498, 291, 1320, 294, 257, 588, 3353, 1230, 11, 50865], "temperature": 0.0, "avg_logprob": -0.07889648013644748, "compression_ratio": 1.8511450381679388, "no_speech_prob": 0.00041173442150466144}, {"id": 789, "seek": 217134, "start": 2181.34, "end": 2183.34, "text": " suddenly we run out of range", "tokens": [50865, 5800, 321, 1190, 484, 295, 3613, 50965], "temperature": 0.0, "avg_logprob": -0.07889648013644748, "compression_ratio": 1.8511450381679388, "no_speech_prob": 0.00041173442150466144}, {"id": 790, "seek": 217134, "start": 2183.34, "end": 2185.34, "text": " in our floating point number", "tokens": [50965, 294, 527, 12607, 935, 1230, 51065], "temperature": 0.0, "avg_logprob": -0.07889648013644748, "compression_ratio": 1.8511450381679388, "no_speech_prob": 0.00041173442150466144}, {"id": 791, "seek": 217134, "start": 2185.34, "end": 2187.34, "text": " that represents these counts.", "tokens": [51065, 300, 8855, 613, 14893, 13, 51165], "temperature": 0.0, "avg_logprob": -0.07889648013644748, "compression_ratio": 1.8511450381679388, "no_speech_prob": 0.00041173442150466144}, {"id": 792, "seek": 217134, "start": 2187.34, "end": 2189.34, "text": " So basically we are taking e", "tokens": [51165, 407, 1936, 321, 366, 1940, 308, 51265], "temperature": 0.0, "avg_logprob": -0.07889648013644748, "compression_ratio": 1.8511450381679388, "no_speech_prob": 0.00041173442150466144}, {"id": 793, "seek": 217134, "start": 2189.34, "end": 2191.34, "text": " and we are raising it to the power of 100", "tokens": [51265, 293, 321, 366, 11225, 309, 281, 264, 1347, 295, 2319, 51365], "temperature": 0.0, "avg_logprob": -0.07889648013644748, "compression_ratio": 1.8511450381679388, "no_speech_prob": 0.00041173442150466144}, {"id": 794, "seek": 217134, "start": 2191.34, "end": 2193.34, "text": " and that gives us inf", "tokens": [51365, 293, 300, 2709, 505, 1536, 51465], "temperature": 0.0, "avg_logprob": -0.07889648013644748, "compression_ratio": 1.8511450381679388, "no_speech_prob": 0.00041173442150466144}, {"id": 795, "seek": 217134, "start": 2193.34, "end": 2195.34, "text": " because we ran out of dynamic range", "tokens": [51465, 570, 321, 5872, 484, 295, 8546, 3613, 51565], "temperature": 0.0, "avg_logprob": -0.07889648013644748, "compression_ratio": 1.8511450381679388, "no_speech_prob": 0.00041173442150466144}, {"id": 796, "seek": 217134, "start": 2195.34, "end": 2197.34, "text": " on this floating point number that is count.", "tokens": [51565, 322, 341, 12607, 935, 1230, 300, 307, 1207, 13, 51665], "temperature": 0.0, "avg_logprob": -0.07889648013644748, "compression_ratio": 1.8511450381679388, "no_speech_prob": 0.00041173442150466144}, {"id": 797, "seek": 217134, "start": 2197.34, "end": 2199.34, "text": " And so we cannot", "tokens": [51665, 400, 370, 321, 2644, 51765], "temperature": 0.0, "avg_logprob": -0.07889648013644748, "compression_ratio": 1.8511450381679388, "no_speech_prob": 0.00041173442150466144}, {"id": 798, "seek": 217134, "start": 2199.34, "end": 2201.34, "text": " pass very large logits through", "tokens": [51765, 1320, 588, 2416, 3565, 1208, 807, 51865], "temperature": 0.0, "avg_logprob": -0.07889648013644748, "compression_ratio": 1.8511450381679388, "no_speech_prob": 0.00041173442150466144}, {"id": 799, "seek": 220134, "start": 2201.34, "end": 2203.34, "text": " this expression.", "tokens": [50365, 341, 6114, 13, 50465], "temperature": 0.0, "avg_logprob": -0.07046692818403244, "compression_ratio": 1.6356589147286822, "no_speech_prob": 0.00013777519052382559}, {"id": 800, "seek": 220134, "start": 2203.34, "end": 2205.34, "text": " Now let me reset these numbers", "tokens": [50465, 823, 718, 385, 14322, 613, 3547, 50565], "temperature": 0.0, "avg_logprob": -0.07046692818403244, "compression_ratio": 1.6356589147286822, "no_speech_prob": 0.00013777519052382559}, {"id": 801, "seek": 220134, "start": 2205.34, "end": 2207.34, "text": " to something reasonable.", "tokens": [50565, 281, 746, 10585, 13, 50665], "temperature": 0.0, "avg_logprob": -0.07046692818403244, "compression_ratio": 1.6356589147286822, "no_speech_prob": 0.00013777519052382559}, {"id": 802, "seek": 220134, "start": 2207.34, "end": 2209.34, "text": " The way PyTorch solved this", "tokens": [50665, 440, 636, 9953, 51, 284, 339, 13041, 341, 50765], "temperature": 0.0, "avg_logprob": -0.07046692818403244, "compression_ratio": 1.6356589147286822, "no_speech_prob": 0.00013777519052382559}, {"id": 803, "seek": 220134, "start": 2209.34, "end": 2211.34, "text": " is that, you see how we have a", "tokens": [50765, 307, 300, 11, 291, 536, 577, 321, 362, 257, 50865], "temperature": 0.0, "avg_logprob": -0.07046692818403244, "compression_ratio": 1.6356589147286822, "no_speech_prob": 0.00013777519052382559}, {"id": 804, "seek": 220134, "start": 2211.34, "end": 2213.34, "text": " well-behaved result here?", "tokens": [50865, 731, 12, 29437, 12865, 1874, 510, 30, 50965], "temperature": 0.0, "avg_logprob": -0.07046692818403244, "compression_ratio": 1.6356589147286822, "no_speech_prob": 0.00013777519052382559}, {"id": 805, "seek": 220134, "start": 2213.34, "end": 2215.34, "text": " It turns out that because of the normalization", "tokens": [50965, 467, 4523, 484, 300, 570, 295, 264, 2710, 2144, 51065], "temperature": 0.0, "avg_logprob": -0.07046692818403244, "compression_ratio": 1.6356589147286822, "no_speech_prob": 0.00013777519052382559}, {"id": 806, "seek": 220134, "start": 2215.34, "end": 2217.34, "text": " here, you can actually offset", "tokens": [51065, 510, 11, 291, 393, 767, 18687, 51165], "temperature": 0.0, "avg_logprob": -0.07046692818403244, "compression_ratio": 1.6356589147286822, "no_speech_prob": 0.00013777519052382559}, {"id": 807, "seek": 220134, "start": 2217.34, "end": 2219.34, "text": " logits by any arbitrary", "tokens": [51165, 3565, 1208, 538, 604, 23211, 51265], "temperature": 0.0, "avg_logprob": -0.07046692818403244, "compression_ratio": 1.6356589147286822, "no_speech_prob": 0.00013777519052382559}, {"id": 808, "seek": 220134, "start": 2219.34, "end": 2221.34, "text": " constant value that you want.", "tokens": [51265, 5754, 2158, 300, 291, 528, 13, 51365], "temperature": 0.0, "avg_logprob": -0.07046692818403244, "compression_ratio": 1.6356589147286822, "no_speech_prob": 0.00013777519052382559}, {"id": 809, "seek": 220134, "start": 2221.34, "end": 2223.34, "text": " So if I add 1 here, you actually", "tokens": [51365, 407, 498, 286, 909, 502, 510, 11, 291, 767, 51465], "temperature": 0.0, "avg_logprob": -0.07046692818403244, "compression_ratio": 1.6356589147286822, "no_speech_prob": 0.00013777519052382559}, {"id": 810, "seek": 220134, "start": 2223.34, "end": 2225.34, "text": " get the exact same result.", "tokens": [51465, 483, 264, 1900, 912, 1874, 13, 51565], "temperature": 0.0, "avg_logprob": -0.07046692818403244, "compression_ratio": 1.6356589147286822, "no_speech_prob": 0.00013777519052382559}, {"id": 811, "seek": 220134, "start": 2225.34, "end": 2227.34, "text": " Or if I add 2, or if I subtract", "tokens": [51565, 1610, 498, 286, 909, 568, 11, 420, 498, 286, 16390, 51665], "temperature": 0.0, "avg_logprob": -0.07046692818403244, "compression_ratio": 1.6356589147286822, "no_speech_prob": 0.00013777519052382559}, {"id": 812, "seek": 220134, "start": 2227.34, "end": 2229.34, "text": " 3.", "tokens": [51665, 805, 13, 51765], "temperature": 0.0, "avg_logprob": -0.07046692818403244, "compression_ratio": 1.6356589147286822, "no_speech_prob": 0.00013777519052382559}, {"id": 813, "seek": 220134, "start": 2229.34, "end": 2231.34, "text": " Any offset will produce the exact same", "tokens": [51765, 2639, 18687, 486, 5258, 264, 1900, 912, 51865], "temperature": 0.0, "avg_logprob": -0.07046692818403244, "compression_ratio": 1.6356589147286822, "no_speech_prob": 0.00013777519052382559}, {"id": 814, "seek": 223134, "start": 2231.34, "end": 2233.34, "text": " values.", "tokens": [50365, 4190, 13, 50465], "temperature": 0.0, "avg_logprob": -0.09136901828024885, "compression_ratio": 1.7598566308243728, "no_speech_prob": 0.0003001698642037809}, {"id": 815, "seek": 223134, "start": 2233.34, "end": 2235.34, "text": " So because negative numbers are okay,", "tokens": [50465, 407, 570, 3671, 3547, 366, 1392, 11, 50565], "temperature": 0.0, "avg_logprob": -0.09136901828024885, "compression_ratio": 1.7598566308243728, "no_speech_prob": 0.0003001698642037809}, {"id": 816, "seek": 223134, "start": 2235.34, "end": 2237.34, "text": " but positive numbers can actually overflow", "tokens": [50565, 457, 3353, 3547, 393, 767, 37772, 50665], "temperature": 0.0, "avg_logprob": -0.09136901828024885, "compression_ratio": 1.7598566308243728, "no_speech_prob": 0.0003001698642037809}, {"id": 817, "seek": 223134, "start": 2237.34, "end": 2239.34, "text": " this exp, what PyTorch does", "tokens": [50665, 341, 1278, 11, 437, 9953, 51, 284, 339, 775, 50765], "temperature": 0.0, "avg_logprob": -0.09136901828024885, "compression_ratio": 1.7598566308243728, "no_speech_prob": 0.0003001698642037809}, {"id": 818, "seek": 223134, "start": 2239.34, "end": 2241.34, "text": " is it internally calculates the maximum", "tokens": [50765, 307, 309, 19501, 4322, 1024, 264, 6674, 50865], "temperature": 0.0, "avg_logprob": -0.09136901828024885, "compression_ratio": 1.7598566308243728, "no_speech_prob": 0.0003001698642037809}, {"id": 819, "seek": 223134, "start": 2241.34, "end": 2243.34, "text": " value that occurs in the logits", "tokens": [50865, 2158, 300, 11843, 294, 264, 3565, 1208, 50965], "temperature": 0.0, "avg_logprob": -0.09136901828024885, "compression_ratio": 1.7598566308243728, "no_speech_prob": 0.0003001698642037809}, {"id": 820, "seek": 223134, "start": 2243.34, "end": 2245.34, "text": " and it subtracts it.", "tokens": [50965, 293, 309, 16390, 82, 309, 13, 51065], "temperature": 0.0, "avg_logprob": -0.09136901828024885, "compression_ratio": 1.7598566308243728, "no_speech_prob": 0.0003001698642037809}, {"id": 821, "seek": 223134, "start": 2245.34, "end": 2247.34, "text": " So in this case it would subtract 5.", "tokens": [51065, 407, 294, 341, 1389, 309, 576, 16390, 1025, 13, 51165], "temperature": 0.0, "avg_logprob": -0.09136901828024885, "compression_ratio": 1.7598566308243728, "no_speech_prob": 0.0003001698642037809}, {"id": 822, "seek": 223134, "start": 2247.34, "end": 2249.34, "text": " And so therefore the greatest number in logits", "tokens": [51165, 400, 370, 4412, 264, 6636, 1230, 294, 3565, 1208, 51265], "temperature": 0.0, "avg_logprob": -0.09136901828024885, "compression_ratio": 1.7598566308243728, "no_speech_prob": 0.0003001698642037809}, {"id": 823, "seek": 223134, "start": 2249.34, "end": 2251.34, "text": " will become 0, and all the other numbers", "tokens": [51265, 486, 1813, 1958, 11, 293, 439, 264, 661, 3547, 51365], "temperature": 0.0, "avg_logprob": -0.09136901828024885, "compression_ratio": 1.7598566308243728, "no_speech_prob": 0.0003001698642037809}, {"id": 824, "seek": 223134, "start": 2251.34, "end": 2253.34, "text": " will become some negative numbers.", "tokens": [51365, 486, 1813, 512, 3671, 3547, 13, 51465], "temperature": 0.0, "avg_logprob": -0.09136901828024885, "compression_ratio": 1.7598566308243728, "no_speech_prob": 0.0003001698642037809}, {"id": 825, "seek": 223134, "start": 2253.34, "end": 2255.34, "text": " And then the result of this is always", "tokens": [51465, 400, 550, 264, 1874, 295, 341, 307, 1009, 51565], "temperature": 0.0, "avg_logprob": -0.09136901828024885, "compression_ratio": 1.7598566308243728, "no_speech_prob": 0.0003001698642037809}, {"id": 826, "seek": 223134, "start": 2255.34, "end": 2257.34, "text": " well-behaved. So even if we have 100", "tokens": [51565, 731, 12, 29437, 12865, 13, 407, 754, 498, 321, 362, 2319, 51665], "temperature": 0.0, "avg_logprob": -0.09136901828024885, "compression_ratio": 1.7598566308243728, "no_speech_prob": 0.0003001698642037809}, {"id": 827, "seek": 223134, "start": 2257.34, "end": 2259.34, "text": " here previously,", "tokens": [51665, 510, 8046, 11, 51765], "temperature": 0.0, "avg_logprob": -0.09136901828024885, "compression_ratio": 1.7598566308243728, "no_speech_prob": 0.0003001698642037809}, {"id": 828, "seek": 223134, "start": 2259.34, "end": 2261.34, "text": " not good, but because PyTorch", "tokens": [51765, 406, 665, 11, 457, 570, 9953, 51, 284, 339, 51865], "temperature": 0.0, "avg_logprob": -0.09136901828024885, "compression_ratio": 1.7598566308243728, "no_speech_prob": 0.0003001698642037809}, {"id": 829, "seek": 226134, "start": 2261.34, "end": 2263.34, "text": " subtracted 100, this will work.", "tokens": [50365, 16390, 292, 2319, 11, 341, 486, 589, 13, 50465], "temperature": 0.0, "avg_logprob": -0.08427521136167238, "compression_ratio": 1.896, "no_speech_prob": 0.0003825677849818021}, {"id": 830, "seek": 226134, "start": 2263.34, "end": 2265.34, "text": " And so there's", "tokens": [50465, 400, 370, 456, 311, 50565], "temperature": 0.0, "avg_logprob": -0.08427521136167238, "compression_ratio": 1.896, "no_speech_prob": 0.0003825677849818021}, {"id": 831, "seek": 226134, "start": 2265.34, "end": 2267.34, "text": " many good reasons to call cross", "tokens": [50565, 867, 665, 4112, 281, 818, 3278, 50665], "temperature": 0.0, "avg_logprob": -0.08427521136167238, "compression_ratio": 1.896, "no_speech_prob": 0.0003825677849818021}, {"id": 832, "seek": 226134, "start": 2267.34, "end": 2269.34, "text": " entropy. Number one, the forward", "tokens": [50665, 30867, 13, 5118, 472, 11, 264, 2128, 50765], "temperature": 0.0, "avg_logprob": -0.08427521136167238, "compression_ratio": 1.896, "no_speech_prob": 0.0003825677849818021}, {"id": 833, "seek": 226134, "start": 2269.34, "end": 2271.34, "text": " pass can be much more efficient, the backward", "tokens": [50765, 1320, 393, 312, 709, 544, 7148, 11, 264, 23897, 50865], "temperature": 0.0, "avg_logprob": -0.08427521136167238, "compression_ratio": 1.896, "no_speech_prob": 0.0003825677849818021}, {"id": 834, "seek": 226134, "start": 2271.34, "end": 2273.34, "text": " pass can be much more efficient, and", "tokens": [50865, 1320, 393, 312, 709, 544, 7148, 11, 293, 50965], "temperature": 0.0, "avg_logprob": -0.08427521136167238, "compression_ratio": 1.896, "no_speech_prob": 0.0003825677849818021}, {"id": 835, "seek": 226134, "start": 2273.34, "end": 2275.34, "text": " also things can be much more numerically", "tokens": [50965, 611, 721, 393, 312, 709, 544, 7866, 984, 51065], "temperature": 0.0, "avg_logprob": -0.08427521136167238, "compression_ratio": 1.896, "no_speech_prob": 0.0003825677849818021}, {"id": 836, "seek": 226134, "start": 2275.34, "end": 2277.34, "text": " well-behaved. Okay, so let's now", "tokens": [51065, 731, 12, 29437, 12865, 13, 1033, 11, 370, 718, 311, 586, 51165], "temperature": 0.0, "avg_logprob": -0.08427521136167238, "compression_ratio": 1.896, "no_speech_prob": 0.0003825677849818021}, {"id": 837, "seek": 226134, "start": 2277.34, "end": 2279.34, "text": " set up the training of this neural net.", "tokens": [51165, 992, 493, 264, 3097, 295, 341, 18161, 2533, 13, 51265], "temperature": 0.0, "avg_logprob": -0.08427521136167238, "compression_ratio": 1.896, "no_speech_prob": 0.0003825677849818021}, {"id": 838, "seek": 226134, "start": 2279.34, "end": 2281.34, "text": " We have the forward pass.", "tokens": [51265, 492, 362, 264, 2128, 1320, 13, 51365], "temperature": 0.0, "avg_logprob": -0.08427521136167238, "compression_ratio": 1.896, "no_speech_prob": 0.0003825677849818021}, {"id": 839, "seek": 226134, "start": 2281.34, "end": 2283.34, "text": " We don't", "tokens": [51365, 492, 500, 380, 51465], "temperature": 0.0, "avg_logprob": -0.08427521136167238, "compression_ratio": 1.896, "no_speech_prob": 0.0003825677849818021}, {"id": 840, "seek": 226134, "start": 2283.34, "end": 2285.34, "text": " need these, because then we have", "tokens": [51465, 643, 613, 11, 570, 550, 321, 362, 51565], "temperature": 0.0, "avg_logprob": -0.08427521136167238, "compression_ratio": 1.896, "no_speech_prob": 0.0003825677849818021}, {"id": 841, "seek": 226134, "start": 2285.34, "end": 2287.34, "text": " that loss is equal to the", "tokens": [51565, 300, 4470, 307, 2681, 281, 264, 51665], "temperature": 0.0, "avg_logprob": -0.08427521136167238, "compression_ratio": 1.896, "no_speech_prob": 0.0003825677849818021}, {"id": 842, "seek": 226134, "start": 2287.34, "end": 2289.34, "text": " cross entropy, that's the forward pass.", "tokens": [51665, 3278, 30867, 11, 300, 311, 264, 2128, 1320, 13, 51765], "temperature": 0.0, "avg_logprob": -0.08427521136167238, "compression_ratio": 1.896, "no_speech_prob": 0.0003825677849818021}, {"id": 843, "seek": 226134, "start": 2289.34, "end": 2291.34, "text": " Then we need the backward pass,", "tokens": [51765, 1396, 321, 643, 264, 23897, 1320, 11, 51865], "temperature": 0.0, "avg_logprob": -0.08427521136167238, "compression_ratio": 1.896, "no_speech_prob": 0.0003825677849818021}, {"id": 844, "seek": 229134, "start": 2291.34, "end": 2293.34, "text": " first we want to set the gradients", "tokens": [50365, 700, 321, 528, 281, 992, 264, 2771, 2448, 50465], "temperature": 0.0, "avg_logprob": -0.067486262149948, "compression_ratio": 1.8914027149321266, "no_speech_prob": 0.00025889932294376194}, {"id": 845, "seek": 229134, "start": 2293.34, "end": 2295.34, "text": " to be 0. So for p in parameters", "tokens": [50465, 281, 312, 1958, 13, 407, 337, 280, 294, 9834, 50565], "temperature": 0.0, "avg_logprob": -0.067486262149948, "compression_ratio": 1.8914027149321266, "no_speech_prob": 0.00025889932294376194}, {"id": 846, "seek": 229134, "start": 2295.34, "end": 2297.34, "text": " we want to make sure that", "tokens": [50565, 321, 528, 281, 652, 988, 300, 50665], "temperature": 0.0, "avg_logprob": -0.067486262149948, "compression_ratio": 1.8914027149321266, "no_speech_prob": 0.00025889932294376194}, {"id": 847, "seek": 229134, "start": 2297.34, "end": 2299.34, "text": " p.grad is none, which is the same as setting", "tokens": [50665, 280, 13, 7165, 307, 6022, 11, 597, 307, 264, 912, 382, 3287, 50765], "temperature": 0.0, "avg_logprob": -0.067486262149948, "compression_ratio": 1.8914027149321266, "no_speech_prob": 0.00025889932294376194}, {"id": 848, "seek": 229134, "start": 2299.34, "end": 2301.34, "text": " it to 0 in PyTorch. And then", "tokens": [50765, 309, 281, 1958, 294, 9953, 51, 284, 339, 13, 400, 550, 50865], "temperature": 0.0, "avg_logprob": -0.067486262149948, "compression_ratio": 1.8914027149321266, "no_speech_prob": 0.00025889932294376194}, {"id": 849, "seek": 229134, "start": 2301.34, "end": 2303.34, "text": " loss.backward to populate those", "tokens": [50865, 4470, 13, 3207, 1007, 281, 1665, 5256, 729, 50965], "temperature": 0.0, "avg_logprob": -0.067486262149948, "compression_ratio": 1.8914027149321266, "no_speech_prob": 0.00025889932294376194}, {"id": 850, "seek": 229134, "start": 2303.34, "end": 2305.34, "text": " gradients. Once we have the gradients", "tokens": [50965, 2771, 2448, 13, 3443, 321, 362, 264, 2771, 2448, 51065], "temperature": 0.0, "avg_logprob": -0.067486262149948, "compression_ratio": 1.8914027149321266, "no_speech_prob": 0.00025889932294376194}, {"id": 851, "seek": 229134, "start": 2305.34, "end": 2307.34, "text": " we can do the parameter update.", "tokens": [51065, 321, 393, 360, 264, 13075, 5623, 13, 51165], "temperature": 0.0, "avg_logprob": -0.067486262149948, "compression_ratio": 1.8914027149321266, "no_speech_prob": 0.00025889932294376194}, {"id": 852, "seek": 229134, "start": 2307.34, "end": 2309.34, "text": " So for p in parameters we want to take all", "tokens": [51165, 407, 337, 280, 294, 9834, 321, 528, 281, 747, 439, 51265], "temperature": 0.0, "avg_logprob": -0.067486262149948, "compression_ratio": 1.8914027149321266, "no_speech_prob": 0.00025889932294376194}, {"id": 853, "seek": 229134, "start": 2309.34, "end": 2311.34, "text": " the data, and we want to", "tokens": [51265, 264, 1412, 11, 293, 321, 528, 281, 51365], "temperature": 0.0, "avg_logprob": -0.067486262149948, "compression_ratio": 1.8914027149321266, "no_speech_prob": 0.00025889932294376194}, {"id": 854, "seek": 229134, "start": 2311.34, "end": 2313.34, "text": " nudge it learning rate times", "tokens": [51365, 297, 16032, 309, 2539, 3314, 1413, 51465], "temperature": 0.0, "avg_logprob": -0.067486262149948, "compression_ratio": 1.8914027149321266, "no_speech_prob": 0.00025889932294376194}, {"id": 855, "seek": 229134, "start": 2313.34, "end": 2315.34, "text": " p.grad.", "tokens": [51465, 280, 13, 7165, 13, 51565], "temperature": 0.0, "avg_logprob": -0.067486262149948, "compression_ratio": 1.8914027149321266, "no_speech_prob": 0.00025889932294376194}, {"id": 856, "seek": 229134, "start": 2315.34, "end": 2317.34, "text": " And then", "tokens": [51565, 400, 550, 51665], "temperature": 0.0, "avg_logprob": -0.067486262149948, "compression_ratio": 1.8914027149321266, "no_speech_prob": 0.00025889932294376194}, {"id": 857, "seek": 229134, "start": 2317.34, "end": 2319.34, "text": " we want to repeat this", "tokens": [51665, 321, 528, 281, 7149, 341, 51765], "temperature": 0.0, "avg_logprob": -0.067486262149948, "compression_ratio": 1.8914027149321266, "no_speech_prob": 0.00025889932294376194}, {"id": 858, "seek": 229134, "start": 2319.34, "end": 2321.34, "text": " a few times.", "tokens": [51765, 257, 1326, 1413, 13, 51865], "temperature": 0.0, "avg_logprob": -0.067486262149948, "compression_ratio": 1.8914027149321266, "no_speech_prob": 0.00025889932294376194}, {"id": 859, "seek": 232134, "start": 2321.34, "end": 2325.34, "text": " And let's print", "tokens": [50365, 400, 718, 311, 4482, 50565], "temperature": 0.0, "avg_logprob": -0.09261339801852986, "compression_ratio": 1.5154185022026432, "no_speech_prob": 0.00016530267021153122}, {"id": 860, "seek": 232134, "start": 2325.34, "end": 2327.34, "text": " the loss here as well.", "tokens": [50565, 264, 4470, 510, 382, 731, 13, 50665], "temperature": 0.0, "avg_logprob": -0.09261339801852986, "compression_ratio": 1.5154185022026432, "no_speech_prob": 0.00016530267021153122}, {"id": 861, "seek": 232134, "start": 2327.34, "end": 2329.34, "text": " Now this", "tokens": [50665, 823, 341, 50765], "temperature": 0.0, "avg_logprob": -0.09261339801852986, "compression_ratio": 1.5154185022026432, "no_speech_prob": 0.00016530267021153122}, {"id": 862, "seek": 232134, "start": 2329.34, "end": 2331.34, "text": " won't suffice and it will create an error,", "tokens": [50765, 1582, 380, 3889, 573, 293, 309, 486, 1884, 364, 6713, 11, 50865], "temperature": 0.0, "avg_logprob": -0.09261339801852986, "compression_ratio": 1.5154185022026432, "no_speech_prob": 0.00016530267021153122}, {"id": 863, "seek": 232134, "start": 2331.34, "end": 2333.34, "text": " because we also have to go for p in parameters", "tokens": [50865, 570, 321, 611, 362, 281, 352, 337, 280, 294, 9834, 50965], "temperature": 0.0, "avg_logprob": -0.09261339801852986, "compression_ratio": 1.5154185022026432, "no_speech_prob": 0.00016530267021153122}, {"id": 864, "seek": 232134, "start": 2333.34, "end": 2335.34, "text": " and we have to make sure that", "tokens": [50965, 293, 321, 362, 281, 652, 988, 300, 51065], "temperature": 0.0, "avg_logprob": -0.09261339801852986, "compression_ratio": 1.5154185022026432, "no_speech_prob": 0.00016530267021153122}, {"id": 865, "seek": 232134, "start": 2335.34, "end": 2337.34, "text": " p.requiresgrad is set", "tokens": [51065, 280, 13, 265, 358, 3145, 7165, 307, 992, 51165], "temperature": 0.0, "avg_logprob": -0.09261339801852986, "compression_ratio": 1.5154185022026432, "no_speech_prob": 0.00016530267021153122}, {"id": 866, "seek": 232134, "start": 2337.34, "end": 2339.34, "text": " to true in PyTorch.", "tokens": [51165, 281, 2074, 294, 9953, 51, 284, 339, 13, 51265], "temperature": 0.0, "avg_logprob": -0.09261339801852986, "compression_ratio": 1.5154185022026432, "no_speech_prob": 0.00016530267021153122}, {"id": 867, "seek": 232134, "start": 2339.34, "end": 2341.34, "text": " And this should", "tokens": [51265, 400, 341, 820, 51365], "temperature": 0.0, "avg_logprob": -0.09261339801852986, "compression_ratio": 1.5154185022026432, "no_speech_prob": 0.00016530267021153122}, {"id": 868, "seek": 232134, "start": 2341.34, "end": 2343.34, "text": " just work.", "tokens": [51365, 445, 589, 13, 51465], "temperature": 0.0, "avg_logprob": -0.09261339801852986, "compression_ratio": 1.5154185022026432, "no_speech_prob": 0.00016530267021153122}, {"id": 869, "seek": 232134, "start": 2343.34, "end": 2345.34, "text": " Okay, so we started off with", "tokens": [51465, 1033, 11, 370, 321, 1409, 766, 365, 51565], "temperature": 0.0, "avg_logprob": -0.09261339801852986, "compression_ratio": 1.5154185022026432, "no_speech_prob": 0.00016530267021153122}, {"id": 870, "seek": 232134, "start": 2345.34, "end": 2347.34, "text": " loss of 17 and we're decreasing it.", "tokens": [51565, 4470, 295, 3282, 293, 321, 434, 23223, 309, 13, 51665], "temperature": 0.0, "avg_logprob": -0.09261339801852986, "compression_ratio": 1.5154185022026432, "no_speech_prob": 0.00016530267021153122}, {"id": 871, "seek": 232134, "start": 2347.34, "end": 2349.34, "text": " Let's run longer.", "tokens": [51665, 961, 311, 1190, 2854, 13, 51765], "temperature": 0.0, "avg_logprob": -0.09261339801852986, "compression_ratio": 1.5154185022026432, "no_speech_prob": 0.00016530267021153122}, {"id": 872, "seek": 232134, "start": 2349.34, "end": 2351.34, "text": " And you see how the loss", "tokens": [51765, 400, 291, 536, 577, 264, 4470, 51865], "temperature": 0.0, "avg_logprob": -0.09261339801852986, "compression_ratio": 1.5154185022026432, "no_speech_prob": 0.00016530267021153122}, {"id": 873, "seek": 235134, "start": 2351.34, "end": 2353.34, "text": " increases a lot here.", "tokens": [50365, 8637, 257, 688, 510, 13, 50465], "temperature": 0.0, "avg_logprob": -0.08715378386633736, "compression_ratio": 1.6304347826086956, "no_speech_prob": 0.00011839418584713712}, {"id": 874, "seek": 235134, "start": 2353.34, "end": 2355.34, "text": " So", "tokens": [50465, 407, 50565], "temperature": 0.0, "avg_logprob": -0.08715378386633736, "compression_ratio": 1.6304347826086956, "no_speech_prob": 0.00011839418584713712}, {"id": 875, "seek": 235134, "start": 2357.34, "end": 2359.34, "text": " if we just run for 1000 times", "tokens": [50665, 498, 321, 445, 1190, 337, 9714, 1413, 50765], "temperature": 0.0, "avg_logprob": -0.08715378386633736, "compression_ratio": 1.6304347826086956, "no_speech_prob": 0.00011839418584713712}, {"id": 876, "seek": 235134, "start": 2359.34, "end": 2361.34, "text": " we get a very, very low loss.", "tokens": [50765, 321, 483, 257, 588, 11, 588, 2295, 4470, 13, 50865], "temperature": 0.0, "avg_logprob": -0.08715378386633736, "compression_ratio": 1.6304347826086956, "no_speech_prob": 0.00011839418584713712}, {"id": 877, "seek": 235134, "start": 2361.34, "end": 2363.34, "text": " And that means that we're making very good predictions.", "tokens": [50865, 400, 300, 1355, 300, 321, 434, 1455, 588, 665, 21264, 13, 50965], "temperature": 0.0, "avg_logprob": -0.08715378386633736, "compression_ratio": 1.6304347826086956, "no_speech_prob": 0.00011839418584713712}, {"id": 878, "seek": 235134, "start": 2363.34, "end": 2365.34, "text": " Now the reason that this is", "tokens": [50965, 823, 264, 1778, 300, 341, 307, 51065], "temperature": 0.0, "avg_logprob": -0.08715378386633736, "compression_ratio": 1.6304347826086956, "no_speech_prob": 0.00011839418584713712}, {"id": 879, "seek": 235134, "start": 2365.34, "end": 2367.34, "text": " so straightforward right now", "tokens": [51065, 370, 15325, 558, 586, 51165], "temperature": 0.0, "avg_logprob": -0.08715378386633736, "compression_ratio": 1.6304347826086956, "no_speech_prob": 0.00011839418584713712}, {"id": 880, "seek": 235134, "start": 2367.34, "end": 2369.34, "text": " is because we're only", "tokens": [51165, 307, 570, 321, 434, 787, 51265], "temperature": 0.0, "avg_logprob": -0.08715378386633736, "compression_ratio": 1.6304347826086956, "no_speech_prob": 0.00011839418584713712}, {"id": 881, "seek": 235134, "start": 2369.34, "end": 2371.34, "text": " overfitting 32", "tokens": [51265, 670, 69, 2414, 8858, 51365], "temperature": 0.0, "avg_logprob": -0.08715378386633736, "compression_ratio": 1.6304347826086956, "no_speech_prob": 0.00011839418584713712}, {"id": 882, "seek": 235134, "start": 2371.34, "end": 2373.34, "text": " examples. So we only have", "tokens": [51365, 5110, 13, 407, 321, 787, 362, 51465], "temperature": 0.0, "avg_logprob": -0.08715378386633736, "compression_ratio": 1.6304347826086956, "no_speech_prob": 0.00011839418584713712}, {"id": 883, "seek": 235134, "start": 2373.34, "end": 2375.34, "text": " 32 examples of the first 5", "tokens": [51465, 8858, 5110, 295, 264, 700, 1025, 51565], "temperature": 0.0, "avg_logprob": -0.08715378386633736, "compression_ratio": 1.6304347826086956, "no_speech_prob": 0.00011839418584713712}, {"id": 884, "seek": 235134, "start": 2375.34, "end": 2377.34, "text": " words, and therefore", "tokens": [51565, 2283, 11, 293, 4412, 51665], "temperature": 0.0, "avg_logprob": -0.08715378386633736, "compression_ratio": 1.6304347826086956, "no_speech_prob": 0.00011839418584713712}, {"id": 885, "seek": 235134, "start": 2377.34, "end": 2379.34, "text": " it's very easy to make this neural net fit", "tokens": [51665, 309, 311, 588, 1858, 281, 652, 341, 18161, 2533, 3318, 51765], "temperature": 0.0, "avg_logprob": -0.08715378386633736, "compression_ratio": 1.6304347826086956, "no_speech_prob": 0.00011839418584713712}, {"id": 886, "seek": 235134, "start": 2379.34, "end": 2381.34, "text": " only these 32 examples.", "tokens": [51765, 787, 613, 8858, 5110, 13, 51865], "temperature": 0.0, "avg_logprob": -0.08715378386633736, "compression_ratio": 1.6304347826086956, "no_speech_prob": 0.00011839418584713712}, {"id": 887, "seek": 238134, "start": 2381.34, "end": 2383.34, "text": " Because we have 3400 parameters", "tokens": [50365, 1436, 321, 362, 12790, 628, 9834, 50465], "temperature": 0.0, "avg_logprob": -0.0918728510538737, "compression_ratio": 1.7011494252873562, "no_speech_prob": 0.00018208014080300927}, {"id": 888, "seek": 238134, "start": 2383.34, "end": 2385.34, "text": " and only 32", "tokens": [50465, 293, 787, 8858, 50565], "temperature": 0.0, "avg_logprob": -0.0918728510538737, "compression_ratio": 1.7011494252873562, "no_speech_prob": 0.00018208014080300927}, {"id": 889, "seek": 238134, "start": 2385.34, "end": 2387.34, "text": " examples. So we're doing what's called", "tokens": [50565, 5110, 13, 407, 321, 434, 884, 437, 311, 1219, 50665], "temperature": 0.0, "avg_logprob": -0.0918728510538737, "compression_ratio": 1.7011494252873562, "no_speech_prob": 0.00018208014080300927}, {"id": 890, "seek": 238134, "start": 2387.34, "end": 2389.34, "text": " overfitting a single batch of", "tokens": [50665, 670, 69, 2414, 257, 2167, 15245, 295, 50765], "temperature": 0.0, "avg_logprob": -0.0918728510538737, "compression_ratio": 1.7011494252873562, "no_speech_prob": 0.00018208014080300927}, {"id": 891, "seek": 238134, "start": 2389.34, "end": 2391.34, "text": " the data and getting a very low", "tokens": [50765, 264, 1412, 293, 1242, 257, 588, 2295, 50865], "temperature": 0.0, "avg_logprob": -0.0918728510538737, "compression_ratio": 1.7011494252873562, "no_speech_prob": 0.00018208014080300927}, {"id": 892, "seek": 238134, "start": 2391.34, "end": 2393.34, "text": " loss in good predictions.", "tokens": [50865, 4470, 294, 665, 21264, 13, 50965], "temperature": 0.0, "avg_logprob": -0.0918728510538737, "compression_ratio": 1.7011494252873562, "no_speech_prob": 0.00018208014080300927}, {"id": 893, "seek": 238134, "start": 2393.34, "end": 2395.34, "text": " But that's just because we have so many", "tokens": [50965, 583, 300, 311, 445, 570, 321, 362, 370, 867, 51065], "temperature": 0.0, "avg_logprob": -0.0918728510538737, "compression_ratio": 1.7011494252873562, "no_speech_prob": 0.00018208014080300927}, {"id": 894, "seek": 238134, "start": 2395.34, "end": 2397.34, "text": " parameters for so few examples. So it's easy", "tokens": [51065, 9834, 337, 370, 1326, 5110, 13, 407, 309, 311, 1858, 51165], "temperature": 0.0, "avg_logprob": -0.0918728510538737, "compression_ratio": 1.7011494252873562, "no_speech_prob": 0.00018208014080300927}, {"id": 895, "seek": 238134, "start": 2397.34, "end": 2399.34, "text": " to make this be very low.", "tokens": [51165, 281, 652, 341, 312, 588, 2295, 13, 51265], "temperature": 0.0, "avg_logprob": -0.0918728510538737, "compression_ratio": 1.7011494252873562, "no_speech_prob": 0.00018208014080300927}, {"id": 896, "seek": 238134, "start": 2399.34, "end": 2401.34, "text": " Now we're not able to achieve", "tokens": [51265, 823, 321, 434, 406, 1075, 281, 4584, 51365], "temperature": 0.0, "avg_logprob": -0.0918728510538737, "compression_ratio": 1.7011494252873562, "no_speech_prob": 0.00018208014080300927}, {"id": 897, "seek": 238134, "start": 2401.34, "end": 2403.34, "text": " exactly 0. And the reason", "tokens": [51365, 2293, 1958, 13, 400, 264, 1778, 51465], "temperature": 0.0, "avg_logprob": -0.0918728510538737, "compression_ratio": 1.7011494252873562, "no_speech_prob": 0.00018208014080300927}, {"id": 898, "seek": 238134, "start": 2403.34, "end": 2405.34, "text": " for that is, we can for example look at logits", "tokens": [51465, 337, 300, 307, 11, 321, 393, 337, 1365, 574, 412, 3565, 1208, 51565], "temperature": 0.0, "avg_logprob": -0.0918728510538737, "compression_ratio": 1.7011494252873562, "no_speech_prob": 0.00018208014080300927}, {"id": 899, "seek": 238134, "start": 2405.34, "end": 2407.34, "text": " which are being predicted.", "tokens": [51565, 597, 366, 885, 19147, 13, 51665], "temperature": 0.0, "avg_logprob": -0.0918728510538737, "compression_ratio": 1.7011494252873562, "no_speech_prob": 0.00018208014080300927}, {"id": 900, "seek": 238134, "start": 2407.34, "end": 2409.34, "text": " And we", "tokens": [51665, 400, 321, 51765], "temperature": 0.0, "avg_logprob": -0.0918728510538737, "compression_ratio": 1.7011494252873562, "no_speech_prob": 0.00018208014080300927}, {"id": 901, "seek": 238134, "start": 2409.34, "end": 2411.34, "text": " can look at the max along", "tokens": [51765, 393, 574, 412, 264, 11469, 2051, 51865], "temperature": 0.0, "avg_logprob": -0.0918728510538737, "compression_ratio": 1.7011494252873562, "no_speech_prob": 0.00018208014080300927}, {"id": 902, "seek": 241134, "start": 2411.34, "end": 2413.34, "text": " the first dimension.", "tokens": [50365, 264, 700, 10139, 13, 50465], "temperature": 0.0, "avg_logprob": -0.0634936114489022, "compression_ratio": 1.6639004149377594, "no_speech_prob": 9.668869461165741e-05}, {"id": 903, "seek": 241134, "start": 2413.34, "end": 2415.34, "text": " And in PyTorch", "tokens": [50465, 400, 294, 9953, 51, 284, 339, 50565], "temperature": 0.0, "avg_logprob": -0.0634936114489022, "compression_ratio": 1.6639004149377594, "no_speech_prob": 9.668869461165741e-05}, {"id": 904, "seek": 241134, "start": 2415.34, "end": 2417.34, "text": " max reports both the actual values", "tokens": [50565, 11469, 7122, 1293, 264, 3539, 4190, 50665], "temperature": 0.0, "avg_logprob": -0.0634936114489022, "compression_ratio": 1.6639004149377594, "no_speech_prob": 9.668869461165741e-05}, {"id": 905, "seek": 241134, "start": 2417.34, "end": 2419.34, "text": " that take on the maximum number", "tokens": [50665, 300, 747, 322, 264, 6674, 1230, 50765], "temperature": 0.0, "avg_logprob": -0.0634936114489022, "compression_ratio": 1.6639004149377594, "no_speech_prob": 9.668869461165741e-05}, {"id": 906, "seek": 241134, "start": 2419.34, "end": 2421.34, "text": " but also the indices of these.", "tokens": [50765, 457, 611, 264, 43840, 295, 613, 13, 50865], "temperature": 0.0, "avg_logprob": -0.0634936114489022, "compression_ratio": 1.6639004149377594, "no_speech_prob": 9.668869461165741e-05}, {"id": 907, "seek": 241134, "start": 2421.34, "end": 2423.34, "text": " And you'll see that the indices", "tokens": [50865, 400, 291, 603, 536, 300, 264, 43840, 50965], "temperature": 0.0, "avg_logprob": -0.0634936114489022, "compression_ratio": 1.6639004149377594, "no_speech_prob": 9.668869461165741e-05}, {"id": 908, "seek": 241134, "start": 2423.34, "end": 2425.34, "text": " are very close to the labels.", "tokens": [50965, 366, 588, 1998, 281, 264, 16949, 13, 51065], "temperature": 0.0, "avg_logprob": -0.0634936114489022, "compression_ratio": 1.6639004149377594, "no_speech_prob": 9.668869461165741e-05}, {"id": 909, "seek": 241134, "start": 2425.34, "end": 2427.34, "text": " But in some cases", "tokens": [51065, 583, 294, 512, 3331, 51165], "temperature": 0.0, "avg_logprob": -0.0634936114489022, "compression_ratio": 1.6639004149377594, "no_speech_prob": 9.668869461165741e-05}, {"id": 910, "seek": 241134, "start": 2427.34, "end": 2429.34, "text": " they differ. For example", "tokens": [51165, 436, 743, 13, 1171, 1365, 51265], "temperature": 0.0, "avg_logprob": -0.0634936114489022, "compression_ratio": 1.6639004149377594, "no_speech_prob": 9.668869461165741e-05}, {"id": 911, "seek": 241134, "start": 2429.34, "end": 2431.34, "text": " in this very first example", "tokens": [51265, 294, 341, 588, 700, 1365, 51365], "temperature": 0.0, "avg_logprob": -0.0634936114489022, "compression_ratio": 1.6639004149377594, "no_speech_prob": 9.668869461165741e-05}, {"id": 912, "seek": 241134, "start": 2431.34, "end": 2433.34, "text": " the predicted index is 19", "tokens": [51365, 264, 19147, 8186, 307, 1294, 51465], "temperature": 0.0, "avg_logprob": -0.0634936114489022, "compression_ratio": 1.6639004149377594, "no_speech_prob": 9.668869461165741e-05}, {"id": 913, "seek": 241134, "start": 2433.34, "end": 2435.34, "text": " but the label is 5.", "tokens": [51465, 457, 264, 7645, 307, 1025, 13, 51565], "temperature": 0.0, "avg_logprob": -0.0634936114489022, "compression_ratio": 1.6639004149377594, "no_speech_prob": 9.668869461165741e-05}, {"id": 914, "seek": 241134, "start": 2435.34, "end": 2437.34, "text": " And we're not able to make loss be 0", "tokens": [51565, 400, 321, 434, 406, 1075, 281, 652, 4470, 312, 1958, 51665], "temperature": 0.0, "avg_logprob": -0.0634936114489022, "compression_ratio": 1.6639004149377594, "no_speech_prob": 9.668869461165741e-05}, {"id": 915, "seek": 241134, "start": 2437.34, "end": 2439.34, "text": " and fundamentally that's because here", "tokens": [51665, 293, 17879, 300, 311, 570, 510, 51765], "temperature": 0.0, "avg_logprob": -0.0634936114489022, "compression_ratio": 1.6639004149377594, "no_speech_prob": 9.668869461165741e-05}, {"id": 916, "seek": 241134, "start": 2439.34, "end": 2441.34, "text": " the very first", "tokens": [51765, 264, 588, 700, 51865], "temperature": 0.0, "avg_logprob": -0.0634936114489022, "compression_ratio": 1.6639004149377594, "no_speech_prob": 9.668869461165741e-05}, {"id": 917, "seek": 244134, "start": 2441.34, "end": 2443.34, "text": " or the zeroth index is the example", "tokens": [50365, 420, 264, 44746, 900, 8186, 307, 264, 1365, 50465], "temperature": 0.0, "avg_logprob": -0.07116165581871481, "compression_ratio": 1.8306451612903225, "no_speech_prob": 0.001084662158973515}, {"id": 918, "seek": 244134, "start": 2443.34, "end": 2445.34, "text": " where dot dot dot is supposed to predict E", "tokens": [50465, 689, 5893, 5893, 5893, 307, 3442, 281, 6069, 462, 50565], "temperature": 0.0, "avg_logprob": -0.07116165581871481, "compression_ratio": 1.8306451612903225, "no_speech_prob": 0.001084662158973515}, {"id": 919, "seek": 244134, "start": 2445.34, "end": 2447.34, "text": " but you see how dot dot dot is also supposed", "tokens": [50565, 457, 291, 536, 577, 5893, 5893, 5893, 307, 611, 3442, 50665], "temperature": 0.0, "avg_logprob": -0.07116165581871481, "compression_ratio": 1.8306451612903225, "no_speech_prob": 0.001084662158973515}, {"id": 920, "seek": 244134, "start": 2447.34, "end": 2449.34, "text": " to predict an O", "tokens": [50665, 281, 6069, 364, 422, 50765], "temperature": 0.0, "avg_logprob": -0.07116165581871481, "compression_ratio": 1.8306451612903225, "no_speech_prob": 0.001084662158973515}, {"id": 921, "seek": 244134, "start": 2449.34, "end": 2451.34, "text": " and dot dot dot is also supposed to predict an I", "tokens": [50765, 293, 5893, 5893, 5893, 307, 611, 3442, 281, 6069, 364, 286, 50865], "temperature": 0.0, "avg_logprob": -0.07116165581871481, "compression_ratio": 1.8306451612903225, "no_speech_prob": 0.001084662158973515}, {"id": 922, "seek": 244134, "start": 2451.34, "end": 2453.34, "text": " and then S as well.", "tokens": [50865, 293, 550, 318, 382, 731, 13, 50965], "temperature": 0.0, "avg_logprob": -0.07116165581871481, "compression_ratio": 1.8306451612903225, "no_speech_prob": 0.001084662158973515}, {"id": 923, "seek": 244134, "start": 2453.34, "end": 2455.34, "text": " And so basically E, O, A", "tokens": [50965, 400, 370, 1936, 462, 11, 422, 11, 316, 51065], "temperature": 0.0, "avg_logprob": -0.07116165581871481, "compression_ratio": 1.8306451612903225, "no_speech_prob": 0.001084662158973515}, {"id": 924, "seek": 244134, "start": 2455.34, "end": 2457.34, "text": " or S are all possible", "tokens": [51065, 420, 318, 366, 439, 1944, 51165], "temperature": 0.0, "avg_logprob": -0.07116165581871481, "compression_ratio": 1.8306451612903225, "no_speech_prob": 0.001084662158973515}, {"id": 925, "seek": 244134, "start": 2457.34, "end": 2459.34, "text": " outcomes in a training set for the exact", "tokens": [51165, 10070, 294, 257, 3097, 992, 337, 264, 1900, 51265], "temperature": 0.0, "avg_logprob": -0.07116165581871481, "compression_ratio": 1.8306451612903225, "no_speech_prob": 0.001084662158973515}, {"id": 926, "seek": 244134, "start": 2459.34, "end": 2461.34, "text": " same input. So we're not able to", "tokens": [51265, 912, 4846, 13, 407, 321, 434, 406, 1075, 281, 51365], "temperature": 0.0, "avg_logprob": -0.07116165581871481, "compression_ratio": 1.8306451612903225, "no_speech_prob": 0.001084662158973515}, {"id": 927, "seek": 244134, "start": 2461.34, "end": 2463.34, "text": " completely overfit and", "tokens": [51365, 2584, 670, 6845, 293, 51465], "temperature": 0.0, "avg_logprob": -0.07116165581871481, "compression_ratio": 1.8306451612903225, "no_speech_prob": 0.001084662158973515}, {"id": 928, "seek": 244134, "start": 2463.34, "end": 2465.34, "text": " make the loss be exactly 0.", "tokens": [51465, 652, 264, 4470, 312, 2293, 1958, 13, 51565], "temperature": 0.0, "avg_logprob": -0.07116165581871481, "compression_ratio": 1.8306451612903225, "no_speech_prob": 0.001084662158973515}, {"id": 929, "seek": 244134, "start": 2465.34, "end": 2467.34, "text": " But we're getting very", "tokens": [51565, 583, 321, 434, 1242, 588, 51665], "temperature": 0.0, "avg_logprob": -0.07116165581871481, "compression_ratio": 1.8306451612903225, "no_speech_prob": 0.001084662158973515}, {"id": 930, "seek": 244134, "start": 2467.34, "end": 2469.34, "text": " close in the cases where", "tokens": [51665, 1998, 294, 264, 3331, 689, 51765], "temperature": 0.0, "avg_logprob": -0.07116165581871481, "compression_ratio": 1.8306451612903225, "no_speech_prob": 0.001084662158973515}, {"id": 931, "seek": 244134, "start": 2469.34, "end": 2471.34, "text": " there's a unique input for", "tokens": [51765, 456, 311, 257, 3845, 4846, 337, 51865], "temperature": 0.0, "avg_logprob": -0.07116165581871481, "compression_ratio": 1.8306451612903225, "no_speech_prob": 0.001084662158973515}, {"id": 932, "seek": 247134, "start": 2471.34, "end": 2473.34, "text": " a unique output. In those cases", "tokens": [50365, 257, 3845, 5598, 13, 682, 729, 3331, 50465], "temperature": 0.0, "avg_logprob": -0.06398798359764947, "compression_ratio": 1.7804878048780488, "no_speech_prob": 0.00011611350055318326}, {"id": 933, "seek": 247134, "start": 2473.34, "end": 2475.34, "text": " we do what's called overfit and", "tokens": [50465, 321, 360, 437, 311, 1219, 670, 6845, 293, 50565], "temperature": 0.0, "avg_logprob": -0.06398798359764947, "compression_ratio": 1.7804878048780488, "no_speech_prob": 0.00011611350055318326}, {"id": 934, "seek": 247134, "start": 2475.34, "end": 2477.34, "text": " we basically get the exact same", "tokens": [50565, 321, 1936, 483, 264, 1900, 912, 50665], "temperature": 0.0, "avg_logprob": -0.06398798359764947, "compression_ratio": 1.7804878048780488, "no_speech_prob": 0.00011611350055318326}, {"id": 935, "seek": 247134, "start": 2477.34, "end": 2479.34, "text": " and the exact correct result.", "tokens": [50665, 293, 264, 1900, 3006, 1874, 13, 50765], "temperature": 0.0, "avg_logprob": -0.06398798359764947, "compression_ratio": 1.7804878048780488, "no_speech_prob": 0.00011611350055318326}, {"id": 936, "seek": 247134, "start": 2479.34, "end": 2481.34, "text": " So now all we have to do", "tokens": [50765, 407, 586, 439, 321, 362, 281, 360, 50865], "temperature": 0.0, "avg_logprob": -0.06398798359764947, "compression_ratio": 1.7804878048780488, "no_speech_prob": 0.00011611350055318326}, {"id": 937, "seek": 247134, "start": 2481.34, "end": 2483.34, "text": " is we just need to make sure that we read in the", "tokens": [50865, 307, 321, 445, 643, 281, 652, 988, 300, 321, 1401, 294, 264, 50965], "temperature": 0.0, "avg_logprob": -0.06398798359764947, "compression_ratio": 1.7804878048780488, "no_speech_prob": 0.00011611350055318326}, {"id": 938, "seek": 247134, "start": 2483.34, "end": 2485.34, "text": " full dataset and optimize the neural net.", "tokens": [50965, 1577, 28872, 293, 19719, 264, 18161, 2533, 13, 51065], "temperature": 0.0, "avg_logprob": -0.06398798359764947, "compression_ratio": 1.7804878048780488, "no_speech_prob": 0.00011611350055318326}, {"id": 939, "seek": 247134, "start": 2485.34, "end": 2487.34, "text": " Okay so let's swing back up", "tokens": [51065, 1033, 370, 718, 311, 11173, 646, 493, 51165], "temperature": 0.0, "avg_logprob": -0.06398798359764947, "compression_ratio": 1.7804878048780488, "no_speech_prob": 0.00011611350055318326}, {"id": 940, "seek": 247134, "start": 2487.34, "end": 2489.34, "text": " where we created the dataset", "tokens": [51165, 689, 321, 2942, 264, 28872, 51265], "temperature": 0.0, "avg_logprob": -0.06398798359764947, "compression_ratio": 1.7804878048780488, "no_speech_prob": 0.00011611350055318326}, {"id": 941, "seek": 247134, "start": 2489.34, "end": 2491.34, "text": " and we see that here we only use the first 5 words.", "tokens": [51265, 293, 321, 536, 300, 510, 321, 787, 764, 264, 700, 1025, 2283, 13, 51365], "temperature": 0.0, "avg_logprob": -0.06398798359764947, "compression_ratio": 1.7804878048780488, "no_speech_prob": 0.00011611350055318326}, {"id": 942, "seek": 247134, "start": 2491.34, "end": 2493.34, "text": " So let me now erase this", "tokens": [51365, 407, 718, 385, 586, 23525, 341, 51465], "temperature": 0.0, "avg_logprob": -0.06398798359764947, "compression_ratio": 1.7804878048780488, "no_speech_prob": 0.00011611350055318326}, {"id": 943, "seek": 247134, "start": 2493.34, "end": 2495.34, "text": " and let me erase the print statements", "tokens": [51465, 293, 718, 385, 23525, 264, 4482, 12363, 51565], "temperature": 0.0, "avg_logprob": -0.06398798359764947, "compression_ratio": 1.7804878048780488, "no_speech_prob": 0.00011611350055318326}, {"id": 944, "seek": 247134, "start": 2495.34, "end": 2497.34, "text": " otherwise we'd be printing way too much.", "tokens": [51565, 5911, 321, 1116, 312, 14699, 636, 886, 709, 13, 51665], "temperature": 0.0, "avg_logprob": -0.06398798359764947, "compression_ratio": 1.7804878048780488, "no_speech_prob": 0.00011611350055318326}, {"id": 945, "seek": 247134, "start": 2497.34, "end": 2499.34, "text": " And so when we process the", "tokens": [51665, 400, 370, 562, 321, 1399, 264, 51765], "temperature": 0.0, "avg_logprob": -0.06398798359764947, "compression_ratio": 1.7804878048780488, "no_speech_prob": 0.00011611350055318326}, {"id": 946, "seek": 247134, "start": 2499.34, "end": 2501.34, "text": " full dataset of all the words", "tokens": [51765, 1577, 28872, 295, 439, 264, 2283, 51865], "temperature": 0.0, "avg_logprob": -0.06398798359764947, "compression_ratio": 1.7804878048780488, "no_speech_prob": 0.00011611350055318326}, {"id": 947, "seek": 250134, "start": 2501.34, "end": 2503.34, "text": " we now have 228,000 examples", "tokens": [50365, 321, 586, 362, 5853, 23, 11, 1360, 5110, 50465], "temperature": 0.0, "avg_logprob": -0.10161879831109165, "compression_ratio": 1.5896414342629481, "no_speech_prob": 0.0002793354797177017}, {"id": 948, "seek": 250134, "start": 2503.34, "end": 2505.34, "text": " instead of just 32.", "tokens": [50465, 2602, 295, 445, 8858, 13, 50565], "temperature": 0.0, "avg_logprob": -0.10161879831109165, "compression_ratio": 1.5896414342629481, "no_speech_prob": 0.0002793354797177017}, {"id": 949, "seek": 250134, "start": 2505.34, "end": 2507.34, "text": " So let's now scroll back down", "tokens": [50565, 407, 718, 311, 586, 11369, 646, 760, 50665], "temperature": 0.0, "avg_logprob": -0.10161879831109165, "compression_ratio": 1.5896414342629481, "no_speech_prob": 0.0002793354797177017}, {"id": 950, "seek": 250134, "start": 2507.34, "end": 2509.34, "text": " the dataset is much larger", "tokens": [50665, 264, 28872, 307, 709, 4833, 50765], "temperature": 0.0, "avg_logprob": -0.10161879831109165, "compression_ratio": 1.5896414342629481, "no_speech_prob": 0.0002793354797177017}, {"id": 951, "seek": 250134, "start": 2509.34, "end": 2511.34, "text": " reinitialize the weights, the same", "tokens": [50765, 6561, 270, 831, 1125, 264, 17443, 11, 264, 912, 50865], "temperature": 0.0, "avg_logprob": -0.10161879831109165, "compression_ratio": 1.5896414342629481, "no_speech_prob": 0.0002793354797177017}, {"id": 952, "seek": 250134, "start": 2511.34, "end": 2513.34, "text": " number of parameters, they all require gradients", "tokens": [50865, 1230, 295, 9834, 11, 436, 439, 3651, 2771, 2448, 50965], "temperature": 0.0, "avg_logprob": -0.10161879831109165, "compression_ratio": 1.5896414342629481, "no_speech_prob": 0.0002793354797177017}, {"id": 953, "seek": 250134, "start": 2513.34, "end": 2515.34, "text": " and then let's push", "tokens": [50965, 293, 550, 718, 311, 2944, 51065], "temperature": 0.0, "avg_logprob": -0.10161879831109165, "compression_ratio": 1.5896414342629481, "no_speech_prob": 0.0002793354797177017}, {"id": 954, "seek": 250134, "start": 2515.34, "end": 2517.34, "text": " this print.loss.item", "tokens": [51065, 341, 4482, 13, 75, 772, 13, 270, 443, 51165], "temperature": 0.0, "avg_logprob": -0.10161879831109165, "compression_ratio": 1.5896414342629481, "no_speech_prob": 0.0002793354797177017}, {"id": 955, "seek": 250134, "start": 2517.34, "end": 2519.34, "text": " to be here and let's just see", "tokens": [51165, 281, 312, 510, 293, 718, 311, 445, 536, 51265], "temperature": 0.0, "avg_logprob": -0.10161879831109165, "compression_ratio": 1.5896414342629481, "no_speech_prob": 0.0002793354797177017}, {"id": 956, "seek": 250134, "start": 2519.34, "end": 2521.34, "text": " how the optimization goes if we run this.", "tokens": [51265, 577, 264, 19618, 1709, 498, 321, 1190, 341, 13, 51365], "temperature": 0.0, "avg_logprob": -0.10161879831109165, "compression_ratio": 1.5896414342629481, "no_speech_prob": 0.0002793354797177017}, {"id": 957, "seek": 250134, "start": 2523.34, "end": 2525.34, "text": " Okay so we started", "tokens": [51465, 1033, 370, 321, 1409, 51565], "temperature": 0.0, "avg_logprob": -0.10161879831109165, "compression_ratio": 1.5896414342629481, "no_speech_prob": 0.0002793354797177017}, {"id": 958, "seek": 250134, "start": 2525.34, "end": 2527.34, "text": " with a fairly high loss and then as we're optimizing", "tokens": [51565, 365, 257, 6457, 1090, 4470, 293, 550, 382, 321, 434, 40425, 51665], "temperature": 0.0, "avg_logprob": -0.10161879831109165, "compression_ratio": 1.5896414342629481, "no_speech_prob": 0.0002793354797177017}, {"id": 959, "seek": 250134, "start": 2527.34, "end": 2529.34, "text": " the loss is coming down.", "tokens": [51665, 264, 4470, 307, 1348, 760, 13, 51765], "temperature": 0.0, "avg_logprob": -0.10161879831109165, "compression_ratio": 1.5896414342629481, "no_speech_prob": 0.0002793354797177017}, {"id": 960, "seek": 253134, "start": 2531.34, "end": 2533.34, "text": " But you'll notice that it takes", "tokens": [50365, 583, 291, 603, 3449, 300, 309, 2516, 50465], "temperature": 0.0, "avg_logprob": -0.061903953552246094, "compression_ratio": 1.8763250883392226, "no_speech_prob": 0.00018459404236637056}, {"id": 961, "seek": 253134, "start": 2533.34, "end": 2535.34, "text": " quite a bit of time for every single iteration.", "tokens": [50465, 1596, 257, 857, 295, 565, 337, 633, 2167, 24784, 13, 50565], "temperature": 0.0, "avg_logprob": -0.061903953552246094, "compression_ratio": 1.8763250883392226, "no_speech_prob": 0.00018459404236637056}, {"id": 962, "seek": 253134, "start": 2535.34, "end": 2537.34, "text": " So let's actually address that", "tokens": [50565, 407, 718, 311, 767, 2985, 300, 50665], "temperature": 0.0, "avg_logprob": -0.061903953552246094, "compression_ratio": 1.8763250883392226, "no_speech_prob": 0.00018459404236637056}, {"id": 963, "seek": 253134, "start": 2537.34, "end": 2539.34, "text": " because we're doing way too much work", "tokens": [50665, 570, 321, 434, 884, 636, 886, 709, 589, 50765], "temperature": 0.0, "avg_logprob": -0.061903953552246094, "compression_ratio": 1.8763250883392226, "no_speech_prob": 0.00018459404236637056}, {"id": 964, "seek": 253134, "start": 2539.34, "end": 2541.34, "text": " forwarding and backwarding 228,000", "tokens": [50765, 2128, 278, 293, 23897, 278, 5853, 23, 11, 1360, 50865], "temperature": 0.0, "avg_logprob": -0.061903953552246094, "compression_ratio": 1.8763250883392226, "no_speech_prob": 0.00018459404236637056}, {"id": 965, "seek": 253134, "start": 2541.34, "end": 2543.34, "text": " examples. In practice", "tokens": [50865, 5110, 13, 682, 3124, 50965], "temperature": 0.0, "avg_logprob": -0.061903953552246094, "compression_ratio": 1.8763250883392226, "no_speech_prob": 0.00018459404236637056}, {"id": 966, "seek": 253134, "start": 2543.34, "end": 2545.34, "text": " what people usually do is they perform", "tokens": [50965, 437, 561, 2673, 360, 307, 436, 2042, 51065], "temperature": 0.0, "avg_logprob": -0.061903953552246094, "compression_ratio": 1.8763250883392226, "no_speech_prob": 0.00018459404236637056}, {"id": 967, "seek": 253134, "start": 2545.34, "end": 2547.34, "text": " forward and backward pass and update", "tokens": [51065, 2128, 293, 23897, 1320, 293, 5623, 51165], "temperature": 0.0, "avg_logprob": -0.061903953552246094, "compression_ratio": 1.8763250883392226, "no_speech_prob": 0.00018459404236637056}, {"id": 968, "seek": 253134, "start": 2547.34, "end": 2549.34, "text": " on many batches of the data.", "tokens": [51165, 322, 867, 15245, 279, 295, 264, 1412, 13, 51265], "temperature": 0.0, "avg_logprob": -0.061903953552246094, "compression_ratio": 1.8763250883392226, "no_speech_prob": 0.00018459404236637056}, {"id": 969, "seek": 253134, "start": 2549.34, "end": 2551.34, "text": " So what we will want to do is", "tokens": [51265, 407, 437, 321, 486, 528, 281, 360, 307, 51365], "temperature": 0.0, "avg_logprob": -0.061903953552246094, "compression_ratio": 1.8763250883392226, "no_speech_prob": 0.00018459404236637056}, {"id": 970, "seek": 253134, "start": 2551.34, "end": 2553.34, "text": " we want to randomly select some portion", "tokens": [51365, 321, 528, 281, 16979, 3048, 512, 8044, 51465], "temperature": 0.0, "avg_logprob": -0.061903953552246094, "compression_ratio": 1.8763250883392226, "no_speech_prob": 0.00018459404236637056}, {"id": 971, "seek": 253134, "start": 2553.34, "end": 2555.34, "text": " of the dataset and that's a many batch", "tokens": [51465, 295, 264, 28872, 293, 300, 311, 257, 867, 15245, 51565], "temperature": 0.0, "avg_logprob": -0.061903953552246094, "compression_ratio": 1.8763250883392226, "no_speech_prob": 0.00018459404236637056}, {"id": 972, "seek": 253134, "start": 2555.34, "end": 2557.34, "text": " and then only forward, backward and update", "tokens": [51565, 293, 550, 787, 2128, 11, 23897, 293, 5623, 51665], "temperature": 0.0, "avg_logprob": -0.061903953552246094, "compression_ratio": 1.8763250883392226, "no_speech_prob": 0.00018459404236637056}, {"id": 973, "seek": 253134, "start": 2557.34, "end": 2559.34, "text": " on that little many batch and then", "tokens": [51665, 322, 300, 707, 867, 15245, 293, 550, 51765], "temperature": 0.0, "avg_logprob": -0.061903953552246094, "compression_ratio": 1.8763250883392226, "no_speech_prob": 0.00018459404236637056}, {"id": 974, "seek": 253134, "start": 2559.34, "end": 2561.34, "text": " we iterate on those many batches.", "tokens": [51765, 321, 44497, 322, 729, 867, 15245, 279, 13, 51865], "temperature": 0.0, "avg_logprob": -0.061903953552246094, "compression_ratio": 1.8763250883392226, "no_speech_prob": 0.00018459404236637056}, {"id": 975, "seek": 256134, "start": 2561.34, "end": 2563.34, "text": " So in pytorch we can for example", "tokens": [50365, 407, 294, 25878, 284, 339, 321, 393, 337, 1365, 50465], "temperature": 0.0, "avg_logprob": -0.07534263444983441, "compression_ratio": 1.693467336683417, "no_speech_prob": 8.5493600636255e-05}, {"id": 976, "seek": 256134, "start": 2563.34, "end": 2565.34, "text": " use torch.randint", "tokens": [50465, 764, 27822, 13, 3699, 686, 50565], "temperature": 0.0, "avg_logprob": -0.07534263444983441, "compression_ratio": 1.693467336683417, "no_speech_prob": 8.5493600636255e-05}, {"id": 977, "seek": 256134, "start": 2565.34, "end": 2567.34, "text": " and we can generate numbers between 0", "tokens": [50565, 293, 321, 393, 8460, 3547, 1296, 1958, 50665], "temperature": 0.0, "avg_logprob": -0.07534263444983441, "compression_ratio": 1.693467336683417, "no_speech_prob": 8.5493600636255e-05}, {"id": 978, "seek": 256134, "start": 2567.34, "end": 2569.34, "text": " and 5 and make 32 of them.", "tokens": [50665, 293, 1025, 293, 652, 8858, 295, 552, 13, 50765], "temperature": 0.0, "avg_logprob": -0.07534263444983441, "compression_ratio": 1.693467336683417, "no_speech_prob": 8.5493600636255e-05}, {"id": 979, "seek": 256134, "start": 2571.34, "end": 2573.34, "text": " I believe the size has to", "tokens": [50865, 286, 1697, 264, 2744, 575, 281, 50965], "temperature": 0.0, "avg_logprob": -0.07534263444983441, "compression_ratio": 1.693467336683417, "no_speech_prob": 8.5493600636255e-05}, {"id": 980, "seek": 256134, "start": 2573.34, "end": 2575.34, "text": " be a tuple", "tokens": [50965, 312, 257, 2604, 781, 51065], "temperature": 0.0, "avg_logprob": -0.07534263444983441, "compression_ratio": 1.693467336683417, "no_speech_prob": 8.5493600636255e-05}, {"id": 981, "seek": 256134, "start": 2575.34, "end": 2577.34, "text": " in pytorch.", "tokens": [51065, 294, 25878, 284, 339, 13, 51165], "temperature": 0.0, "avg_logprob": -0.07534263444983441, "compression_ratio": 1.693467336683417, "no_speech_prob": 8.5493600636255e-05}, {"id": 982, "seek": 256134, "start": 2577.34, "end": 2579.34, "text": " So we can have a tuple", "tokens": [51165, 407, 321, 393, 362, 257, 2604, 781, 51265], "temperature": 0.0, "avg_logprob": -0.07534263444983441, "compression_ratio": 1.693467336683417, "no_speech_prob": 8.5493600636255e-05}, {"id": 983, "seek": 256134, "start": 2579.34, "end": 2581.34, "text": " 32 of numbers between 0 and 5", "tokens": [51265, 8858, 295, 3547, 1296, 1958, 293, 1025, 51365], "temperature": 0.0, "avg_logprob": -0.07534263444983441, "compression_ratio": 1.693467336683417, "no_speech_prob": 8.5493600636255e-05}, {"id": 984, "seek": 256134, "start": 2581.34, "end": 2583.34, "text": " but actually we want x.shape", "tokens": [51365, 457, 767, 321, 528, 2031, 13, 82, 42406, 51465], "temperature": 0.0, "avg_logprob": -0.07534263444983441, "compression_ratio": 1.693467336683417, "no_speech_prob": 8.5493600636255e-05}, {"id": 985, "seek": 256134, "start": 2583.34, "end": 2585.34, "text": " of 0 here", "tokens": [51465, 295, 1958, 510, 51565], "temperature": 0.0, "avg_logprob": -0.07534263444983441, "compression_ratio": 1.693467336683417, "no_speech_prob": 8.5493600636255e-05}, {"id": 986, "seek": 256134, "start": 2585.34, "end": 2587.34, "text": " and so this creates integers", "tokens": [51565, 293, 370, 341, 7829, 41674, 51665], "temperature": 0.0, "avg_logprob": -0.07534263444983441, "compression_ratio": 1.693467336683417, "no_speech_prob": 8.5493600636255e-05}, {"id": 987, "seek": 256134, "start": 2587.34, "end": 2589.34, "text": " that index into our dataset", "tokens": [51665, 300, 8186, 666, 527, 28872, 51765], "temperature": 0.0, "avg_logprob": -0.07534263444983441, "compression_ratio": 1.693467336683417, "no_speech_prob": 8.5493600636255e-05}, {"id": 988, "seek": 256134, "start": 2589.34, "end": 2591.34, "text": " and there's 32 of them.", "tokens": [51765, 293, 456, 311, 8858, 295, 552, 13, 51865], "temperature": 0.0, "avg_logprob": -0.07534263444983441, "compression_ratio": 1.693467336683417, "no_speech_prob": 8.5493600636255e-05}, {"id": 989, "seek": 259134, "start": 2591.34, "end": 2593.34, "text": " So if our many batch size is 32", "tokens": [50365, 407, 498, 527, 867, 15245, 2744, 307, 8858, 50465], "temperature": 0.0, "avg_logprob": -0.08364609912433456, "compression_ratio": 1.6298076923076923, "no_speech_prob": 0.00022548310516867787}, {"id": 990, "seek": 259134, "start": 2593.34, "end": 2595.34, "text": " then we can come here and we can first do", "tokens": [50465, 550, 321, 393, 808, 510, 293, 321, 393, 700, 360, 50565], "temperature": 0.0, "avg_logprob": -0.08364609912433456, "compression_ratio": 1.6298076923076923, "no_speech_prob": 0.00022548310516867787}, {"id": 991, "seek": 259134, "start": 2595.34, "end": 2597.34, "text": " a many batch", "tokens": [50565, 257, 867, 15245, 50665], "temperature": 0.0, "avg_logprob": -0.08364609912433456, "compression_ratio": 1.6298076923076923, "no_speech_prob": 0.00022548310516867787}, {"id": 992, "seek": 259134, "start": 2597.34, "end": 2599.34, "text": " construct.", "tokens": [50665, 7690, 13, 50765], "temperature": 0.0, "avg_logprob": -0.08364609912433456, "compression_ratio": 1.6298076923076923, "no_speech_prob": 0.00022548310516867787}, {"id": 993, "seek": 259134, "start": 2599.34, "end": 2601.34, "text": " So integers", "tokens": [50765, 407, 41674, 50865], "temperature": 0.0, "avg_logprob": -0.08364609912433456, "compression_ratio": 1.6298076923076923, "no_speech_prob": 0.00022548310516867787}, {"id": 994, "seek": 259134, "start": 2601.34, "end": 2603.34, "text": " that we want to optimize in this", "tokens": [50865, 300, 321, 528, 281, 19719, 294, 341, 50965], "temperature": 0.0, "avg_logprob": -0.08364609912433456, "compression_ratio": 1.6298076923076923, "no_speech_prob": 0.00022548310516867787}, {"id": 995, "seek": 259134, "start": 2603.34, "end": 2605.34, "text": " single iteration", "tokens": [50965, 2167, 24784, 51065], "temperature": 0.0, "avg_logprob": -0.08364609912433456, "compression_ratio": 1.6298076923076923, "no_speech_prob": 0.00022548310516867787}, {"id": 996, "seek": 259134, "start": 2605.34, "end": 2607.34, "text": " are in the ix", "tokens": [51065, 366, 294, 264, 741, 87, 51165], "temperature": 0.0, "avg_logprob": -0.08364609912433456, "compression_ratio": 1.6298076923076923, "no_speech_prob": 0.00022548310516867787}, {"id": 997, "seek": 259134, "start": 2607.34, "end": 2609.34, "text": " and then we want to index into", "tokens": [51165, 293, 550, 321, 528, 281, 8186, 666, 51265], "temperature": 0.0, "avg_logprob": -0.08364609912433456, "compression_ratio": 1.6298076923076923, "no_speech_prob": 0.00022548310516867787}, {"id": 998, "seek": 259134, "start": 2609.34, "end": 2611.34, "text": " x with", "tokens": [51265, 2031, 365, 51365], "temperature": 0.0, "avg_logprob": -0.08364609912433456, "compression_ratio": 1.6298076923076923, "no_speech_prob": 0.00022548310516867787}, {"id": 999, "seek": 259134, "start": 2611.34, "end": 2613.34, "text": " ix to only grab those", "tokens": [51365, 741, 87, 281, 787, 4444, 729, 51465], "temperature": 0.0, "avg_logprob": -0.08364609912433456, "compression_ratio": 1.6298076923076923, "no_speech_prob": 0.00022548310516867787}, {"id": 1000, "seek": 259134, "start": 2613.34, "end": 2615.34, "text": " rows. So we're only getting 32", "tokens": [51465, 13241, 13, 407, 321, 434, 787, 1242, 8858, 51565], "temperature": 0.0, "avg_logprob": -0.08364609912433456, "compression_ratio": 1.6298076923076923, "no_speech_prob": 0.00022548310516867787}, {"id": 1001, "seek": 259134, "start": 2615.34, "end": 2617.34, "text": " rows of x and therefore", "tokens": [51565, 13241, 295, 2031, 293, 4412, 51665], "temperature": 0.0, "avg_logprob": -0.08364609912433456, "compression_ratio": 1.6298076923076923, "no_speech_prob": 0.00022548310516867787}, {"id": 1002, "seek": 259134, "start": 2617.34, "end": 2619.34, "text": " embeddings will again be 32 by 3", "tokens": [51665, 12240, 29432, 486, 797, 312, 8858, 538, 805, 51765], "temperature": 0.0, "avg_logprob": -0.08364609912433456, "compression_ratio": 1.6298076923076923, "no_speech_prob": 0.00022548310516867787}, {"id": 1003, "seek": 259134, "start": 2619.34, "end": 2621.34, "text": " by 2, not 200,000", "tokens": [51765, 538, 568, 11, 406, 2331, 11, 1360, 51865], "temperature": 0.0, "avg_logprob": -0.08364609912433456, "compression_ratio": 1.6298076923076923, "no_speech_prob": 0.00022548310516867787}, {"id": 1004, "seek": 262134, "start": 2621.34, "end": 2623.34, "text": " by 3 by 2.", "tokens": [50365, 538, 805, 538, 568, 13, 50465], "temperature": 0.0, "avg_logprob": -0.0718304524656202, "compression_ratio": 1.7699115044247788, "no_speech_prob": 0.0003506657085381448}, {"id": 1005, "seek": 262134, "start": 2623.34, "end": 2625.34, "text": " And then this ix has to be used not just", "tokens": [50465, 400, 550, 341, 741, 87, 575, 281, 312, 1143, 406, 445, 50565], "temperature": 0.0, "avg_logprob": -0.0718304524656202, "compression_ratio": 1.7699115044247788, "no_speech_prob": 0.0003506657085381448}, {"id": 1006, "seek": 262134, "start": 2625.34, "end": 2627.34, "text": " to index into x but also", "tokens": [50565, 281, 8186, 666, 2031, 457, 611, 50665], "temperature": 0.0, "avg_logprob": -0.0718304524656202, "compression_ratio": 1.7699115044247788, "no_speech_prob": 0.0003506657085381448}, {"id": 1007, "seek": 262134, "start": 2627.34, "end": 2629.34, "text": " to index into y.", "tokens": [50665, 281, 8186, 666, 288, 13, 50765], "temperature": 0.0, "avg_logprob": -0.0718304524656202, "compression_ratio": 1.7699115044247788, "no_speech_prob": 0.0003506657085381448}, {"id": 1008, "seek": 262134, "start": 2629.34, "end": 2631.34, "text": " And now this", "tokens": [50765, 400, 586, 341, 50865], "temperature": 0.0, "avg_logprob": -0.0718304524656202, "compression_ratio": 1.7699115044247788, "no_speech_prob": 0.0003506657085381448}, {"id": 1009, "seek": 262134, "start": 2631.34, "end": 2633.34, "text": " should be many batches and this should be", "tokens": [50865, 820, 312, 867, 15245, 279, 293, 341, 820, 312, 50965], "temperature": 0.0, "avg_logprob": -0.0718304524656202, "compression_ratio": 1.7699115044247788, "no_speech_prob": 0.0003506657085381448}, {"id": 1010, "seek": 262134, "start": 2633.34, "end": 2635.34, "text": " much much faster.", "tokens": [50965, 709, 709, 4663, 13, 51065], "temperature": 0.0, "avg_logprob": -0.0718304524656202, "compression_ratio": 1.7699115044247788, "no_speech_prob": 0.0003506657085381448}, {"id": 1011, "seek": 262134, "start": 2635.34, "end": 2637.34, "text": " So it's instant almost.", "tokens": [51065, 407, 309, 311, 9836, 1920, 13, 51165], "temperature": 0.0, "avg_logprob": -0.0718304524656202, "compression_ratio": 1.7699115044247788, "no_speech_prob": 0.0003506657085381448}, {"id": 1012, "seek": 262134, "start": 2637.34, "end": 2639.34, "text": " So this way we can run", "tokens": [51165, 407, 341, 636, 321, 393, 1190, 51265], "temperature": 0.0, "avg_logprob": -0.0718304524656202, "compression_ratio": 1.7699115044247788, "no_speech_prob": 0.0003506657085381448}, {"id": 1013, "seek": 262134, "start": 2639.34, "end": 2641.34, "text": " many many examples", "tokens": [51265, 867, 867, 5110, 51365], "temperature": 0.0, "avg_logprob": -0.0718304524656202, "compression_ratio": 1.7699115044247788, "no_speech_prob": 0.0003506657085381448}, {"id": 1014, "seek": 262134, "start": 2641.34, "end": 2643.34, "text": " nearly instantly and decrease", "tokens": [51365, 6217, 13518, 293, 11514, 51465], "temperature": 0.0, "avg_logprob": -0.0718304524656202, "compression_ratio": 1.7699115044247788, "no_speech_prob": 0.0003506657085381448}, {"id": 1015, "seek": 262134, "start": 2643.34, "end": 2645.34, "text": " the loss much much faster.", "tokens": [51465, 264, 4470, 709, 709, 4663, 13, 51565], "temperature": 0.0, "avg_logprob": -0.0718304524656202, "compression_ratio": 1.7699115044247788, "no_speech_prob": 0.0003506657085381448}, {"id": 1016, "seek": 262134, "start": 2645.34, "end": 2647.34, "text": " Now because we're only dealing with many batches", "tokens": [51565, 823, 570, 321, 434, 787, 6260, 365, 867, 15245, 279, 51665], "temperature": 0.0, "avg_logprob": -0.0718304524656202, "compression_ratio": 1.7699115044247788, "no_speech_prob": 0.0003506657085381448}, {"id": 1017, "seek": 262134, "start": 2647.34, "end": 2649.34, "text": " the quality of our gradient", "tokens": [51665, 264, 3125, 295, 527, 16235, 51765], "temperature": 0.0, "avg_logprob": -0.0718304524656202, "compression_ratio": 1.7699115044247788, "no_speech_prob": 0.0003506657085381448}, {"id": 1018, "seek": 262134, "start": 2649.34, "end": 2651.34, "text": " is lower. So the direction is not", "tokens": [51765, 307, 3126, 13, 407, 264, 3513, 307, 406, 51865], "temperature": 0.0, "avg_logprob": -0.0718304524656202, "compression_ratio": 1.7699115044247788, "no_speech_prob": 0.0003506657085381448}, {"id": 1019, "seek": 265134, "start": 2651.34, "end": 2653.34, "text": " as reliable. It's not the actual gradient", "tokens": [50365, 382, 12924, 13, 467, 311, 406, 264, 3539, 16235, 50465], "temperature": 0.0, "avg_logprob": -0.046432925808814265, "compression_ratio": 1.686046511627907, "no_speech_prob": 0.00015059427823871374}, {"id": 1020, "seek": 265134, "start": 2653.34, "end": 2655.34, "text": " direction. But", "tokens": [50465, 3513, 13, 583, 50565], "temperature": 0.0, "avg_logprob": -0.046432925808814265, "compression_ratio": 1.686046511627907, "no_speech_prob": 0.00015059427823871374}, {"id": 1021, "seek": 265134, "start": 2655.34, "end": 2657.34, "text": " the gradient direction is good enough even", "tokens": [50565, 264, 16235, 3513, 307, 665, 1547, 754, 50665], "temperature": 0.0, "avg_logprob": -0.046432925808814265, "compression_ratio": 1.686046511627907, "no_speech_prob": 0.00015059427823871374}, {"id": 1022, "seek": 265134, "start": 2657.34, "end": 2659.34, "text": " when it's estimating on only 32", "tokens": [50665, 562, 309, 311, 8017, 990, 322, 787, 8858, 50765], "temperature": 0.0, "avg_logprob": -0.046432925808814265, "compression_ratio": 1.686046511627907, "no_speech_prob": 0.00015059427823871374}, {"id": 1023, "seek": 265134, "start": 2659.34, "end": 2661.34, "text": " examples that it is useful.", "tokens": [50765, 5110, 300, 309, 307, 4420, 13, 50865], "temperature": 0.0, "avg_logprob": -0.046432925808814265, "compression_ratio": 1.686046511627907, "no_speech_prob": 0.00015059427823871374}, {"id": 1024, "seek": 265134, "start": 2661.34, "end": 2663.34, "text": " And so it's much better", "tokens": [50865, 400, 370, 309, 311, 709, 1101, 50965], "temperature": 0.0, "avg_logprob": -0.046432925808814265, "compression_ratio": 1.686046511627907, "no_speech_prob": 0.00015059427823871374}, {"id": 1025, "seek": 265134, "start": 2663.34, "end": 2665.34, "text": " to have an approximate gradient and", "tokens": [50965, 281, 362, 364, 30874, 16235, 293, 51065], "temperature": 0.0, "avg_logprob": -0.046432925808814265, "compression_ratio": 1.686046511627907, "no_speech_prob": 0.00015059427823871374}, {"id": 1026, "seek": 265134, "start": 2665.34, "end": 2667.34, "text": " just make more steps than it is to", "tokens": [51065, 445, 652, 544, 4439, 813, 309, 307, 281, 51165], "temperature": 0.0, "avg_logprob": -0.046432925808814265, "compression_ratio": 1.686046511627907, "no_speech_prob": 0.00015059427823871374}, {"id": 1027, "seek": 265134, "start": 2667.34, "end": 2669.34, "text": " evaluate the exact gradient and take", "tokens": [51165, 13059, 264, 1900, 16235, 293, 747, 51265], "temperature": 0.0, "avg_logprob": -0.046432925808814265, "compression_ratio": 1.686046511627907, "no_speech_prob": 0.00015059427823871374}, {"id": 1028, "seek": 265134, "start": 2669.34, "end": 2671.34, "text": " fewer steps. So that's why", "tokens": [51265, 13366, 4439, 13, 407, 300, 311, 983, 51365], "temperature": 0.0, "avg_logprob": -0.046432925808814265, "compression_ratio": 1.686046511627907, "no_speech_prob": 0.00015059427823871374}, {"id": 1029, "seek": 265134, "start": 2671.34, "end": 2673.34, "text": " in practice this works", "tokens": [51365, 294, 3124, 341, 1985, 51465], "temperature": 0.0, "avg_logprob": -0.046432925808814265, "compression_ratio": 1.686046511627907, "no_speech_prob": 0.00015059427823871374}, {"id": 1030, "seek": 265134, "start": 2673.34, "end": 2675.34, "text": " quite well. So let's now continue", "tokens": [51465, 1596, 731, 13, 407, 718, 311, 586, 2354, 51565], "temperature": 0.0, "avg_logprob": -0.046432925808814265, "compression_ratio": 1.686046511627907, "no_speech_prob": 0.00015059427823871374}, {"id": 1031, "seek": 265134, "start": 2675.34, "end": 2677.34, "text": " the optimization.", "tokens": [51565, 264, 19618, 13, 51665], "temperature": 0.0, "avg_logprob": -0.046432925808814265, "compression_ratio": 1.686046511627907, "no_speech_prob": 0.00015059427823871374}, {"id": 1032, "seek": 265134, "start": 2677.34, "end": 2679.34, "text": " Let me take out", "tokens": [51665, 961, 385, 747, 484, 51765], "temperature": 0.0, "avg_logprob": -0.046432925808814265, "compression_ratio": 1.686046511627907, "no_speech_prob": 0.00015059427823871374}, {"id": 1033, "seek": 265134, "start": 2679.34, "end": 2681.34, "text": " this loss.item from here.", "tokens": [51765, 341, 4470, 13, 270, 443, 490, 510, 13, 51865], "temperature": 0.0, "avg_logprob": -0.046432925808814265, "compression_ratio": 1.686046511627907, "no_speech_prob": 0.00015059427823871374}, {"id": 1034, "seek": 268134, "start": 2681.34, "end": 2683.34, "text": " And place it", "tokens": [50365, 400, 1081, 309, 50465], "temperature": 0.0, "avg_logprob": -0.06029317855834961, "compression_ratio": 1.6309012875536482, "no_speech_prob": 0.00041656664689071476}, {"id": 1035, "seek": 268134, "start": 2683.34, "end": 2685.34, "text": " over here at the end.", "tokens": [50465, 670, 510, 412, 264, 917, 13, 50565], "temperature": 0.0, "avg_logprob": -0.06029317855834961, "compression_ratio": 1.6309012875536482, "no_speech_prob": 0.00041656664689071476}, {"id": 1036, "seek": 268134, "start": 2685.34, "end": 2687.34, "text": " Okay so we're hovering around 2.5", "tokens": [50565, 1033, 370, 321, 434, 44923, 926, 568, 13, 20, 50665], "temperature": 0.0, "avg_logprob": -0.06029317855834961, "compression_ratio": 1.6309012875536482, "no_speech_prob": 0.00041656664689071476}, {"id": 1037, "seek": 268134, "start": 2687.34, "end": 2689.34, "text": " or so.", "tokens": [50665, 420, 370, 13, 50765], "temperature": 0.0, "avg_logprob": -0.06029317855834961, "compression_ratio": 1.6309012875536482, "no_speech_prob": 0.00041656664689071476}, {"id": 1038, "seek": 268134, "start": 2689.34, "end": 2691.34, "text": " However this is only the loss", "tokens": [50765, 2908, 341, 307, 787, 264, 4470, 50865], "temperature": 0.0, "avg_logprob": -0.06029317855834961, "compression_ratio": 1.6309012875536482, "no_speech_prob": 0.00041656664689071476}, {"id": 1039, "seek": 268134, "start": 2691.34, "end": 2693.34, "text": " for that many batch. So let's actually evaluate", "tokens": [50865, 337, 300, 867, 15245, 13, 407, 718, 311, 767, 13059, 50965], "temperature": 0.0, "avg_logprob": -0.06029317855834961, "compression_ratio": 1.6309012875536482, "no_speech_prob": 0.00041656664689071476}, {"id": 1040, "seek": 268134, "start": 2693.34, "end": 2695.34, "text": " the loss here", "tokens": [50965, 264, 4470, 510, 51065], "temperature": 0.0, "avg_logprob": -0.06029317855834961, "compression_ratio": 1.6309012875536482, "no_speech_prob": 0.00041656664689071476}, {"id": 1041, "seek": 268134, "start": 2695.34, "end": 2697.34, "text": " for all of x", "tokens": [51065, 337, 439, 295, 2031, 51165], "temperature": 0.0, "avg_logprob": -0.06029317855834961, "compression_ratio": 1.6309012875536482, "no_speech_prob": 0.00041656664689071476}, {"id": 1042, "seek": 268134, "start": 2697.34, "end": 2699.34, "text": " and for all of y.", "tokens": [51165, 293, 337, 439, 295, 288, 13, 51265], "temperature": 0.0, "avg_logprob": -0.06029317855834961, "compression_ratio": 1.6309012875536482, "no_speech_prob": 0.00041656664689071476}, {"id": 1043, "seek": 268134, "start": 2699.34, "end": 2701.34, "text": " Just so we have a full", "tokens": [51265, 1449, 370, 321, 362, 257, 1577, 51365], "temperature": 0.0, "avg_logprob": -0.06029317855834961, "compression_ratio": 1.6309012875536482, "no_speech_prob": 0.00041656664689071476}, {"id": 1044, "seek": 268134, "start": 2701.34, "end": 2703.34, "text": " sense of exactly how well the model is", "tokens": [51365, 2020, 295, 2293, 577, 731, 264, 2316, 307, 51465], "temperature": 0.0, "avg_logprob": -0.06029317855834961, "compression_ratio": 1.6309012875536482, "no_speech_prob": 0.00041656664689071476}, {"id": 1045, "seek": 268134, "start": 2703.34, "end": 2705.34, "text": " doing right now.", "tokens": [51465, 884, 558, 586, 13, 51565], "temperature": 0.0, "avg_logprob": -0.06029317855834961, "compression_ratio": 1.6309012875536482, "no_speech_prob": 0.00041656664689071476}, {"id": 1046, "seek": 268134, "start": 2705.34, "end": 2707.34, "text": " So right now we're at about 2.7 on the", "tokens": [51565, 407, 558, 586, 321, 434, 412, 466, 568, 13, 22, 322, 264, 51665], "temperature": 0.0, "avg_logprob": -0.06029317855834961, "compression_ratio": 1.6309012875536482, "no_speech_prob": 0.00041656664689071476}, {"id": 1047, "seek": 268134, "start": 2707.34, "end": 2709.34, "text": " entire training set.", "tokens": [51665, 2302, 3097, 992, 13, 51765], "temperature": 0.0, "avg_logprob": -0.06029317855834961, "compression_ratio": 1.6309012875536482, "no_speech_prob": 0.00041656664689071476}, {"id": 1048, "seek": 268134, "start": 2709.34, "end": 2711.34, "text": " So let's run the optimization for a while.", "tokens": [51765, 407, 718, 311, 1190, 264, 19618, 337, 257, 1339, 13, 51865], "temperature": 0.0, "avg_logprob": -0.06029317855834961, "compression_ratio": 1.6309012875536482, "no_speech_prob": 0.00041656664689071476}, {"id": 1049, "seek": 271134, "start": 2711.34, "end": 2713.34, "text": " Okay we're at", "tokens": [50365, 1033, 321, 434, 412, 50465], "temperature": 0.0, "avg_logprob": -0.0991700089093551, "compression_ratio": 1.5315789473684212, "no_speech_prob": 0.00017629691865295172}, {"id": 1050, "seek": 271134, "start": 2713.34, "end": 2715.34, "text": " 2.6", "tokens": [50465, 568, 13, 21, 50565], "temperature": 0.0, "avg_logprob": -0.0991700089093551, "compression_ratio": 1.5315789473684212, "no_speech_prob": 0.00017629691865295172}, {"id": 1051, "seek": 271134, "start": 2715.34, "end": 2717.34, "text": " 2.57", "tokens": [50565, 568, 13, 19004, 50665], "temperature": 0.0, "avg_logprob": -0.0991700089093551, "compression_ratio": 1.5315789473684212, "no_speech_prob": 0.00017629691865295172}, {"id": 1052, "seek": 271134, "start": 2717.34, "end": 2719.34, "text": " 2.53", "tokens": [50665, 568, 13, 19584, 50765], "temperature": 0.0, "avg_logprob": -0.0991700089093551, "compression_ratio": 1.5315789473684212, "no_speech_prob": 0.00017629691865295172}, {"id": 1053, "seek": 271134, "start": 2721.34, "end": 2723.34, "text": " Okay.", "tokens": [50865, 1033, 13, 50965], "temperature": 0.0, "avg_logprob": -0.0991700089093551, "compression_ratio": 1.5315789473684212, "no_speech_prob": 0.00017629691865295172}, {"id": 1054, "seek": 271134, "start": 2723.34, "end": 2725.34, "text": " So one issue of course is", "tokens": [50965, 407, 472, 2734, 295, 1164, 307, 51065], "temperature": 0.0, "avg_logprob": -0.0991700089093551, "compression_ratio": 1.5315789473684212, "no_speech_prob": 0.00017629691865295172}, {"id": 1055, "seek": 271134, "start": 2725.34, "end": 2727.34, "text": " we don't know if we're stepping too slow", "tokens": [51065, 321, 500, 380, 458, 498, 321, 434, 16821, 886, 2964, 51165], "temperature": 0.0, "avg_logprob": -0.0991700089093551, "compression_ratio": 1.5315789473684212, "no_speech_prob": 0.00017629691865295172}, {"id": 1056, "seek": 271134, "start": 2727.34, "end": 2729.34, "text": " or too fast.", "tokens": [51165, 420, 886, 2370, 13, 51265], "temperature": 0.0, "avg_logprob": -0.0991700089093551, "compression_ratio": 1.5315789473684212, "no_speech_prob": 0.00017629691865295172}, {"id": 1057, "seek": 271134, "start": 2729.34, "end": 2731.34, "text": " So at this point one I just guessed it.", "tokens": [51265, 407, 412, 341, 935, 472, 286, 445, 21852, 309, 13, 51365], "temperature": 0.0, "avg_logprob": -0.0991700089093551, "compression_ratio": 1.5315789473684212, "no_speech_prob": 0.00017629691865295172}, {"id": 1058, "seek": 271134, "start": 2731.34, "end": 2733.34, "text": " So one question is", "tokens": [51365, 407, 472, 1168, 307, 51465], "temperature": 0.0, "avg_logprob": -0.0991700089093551, "compression_ratio": 1.5315789473684212, "no_speech_prob": 0.00017629691865295172}, {"id": 1059, "seek": 271134, "start": 2733.34, "end": 2735.34, "text": " how do you determine this learning rate?", "tokens": [51465, 577, 360, 291, 6997, 341, 2539, 3314, 30, 51565], "temperature": 0.0, "avg_logprob": -0.0991700089093551, "compression_ratio": 1.5315789473684212, "no_speech_prob": 0.00017629691865295172}, {"id": 1060, "seek": 271134, "start": 2735.34, "end": 2737.34, "text": " And how do we gain confidence", "tokens": [51565, 400, 577, 360, 321, 6052, 6687, 51665], "temperature": 0.0, "avg_logprob": -0.0991700089093551, "compression_ratio": 1.5315789473684212, "no_speech_prob": 0.00017629691865295172}, {"id": 1061, "seek": 271134, "start": 2737.34, "end": 2739.34, "text": " that we're stepping in the right", "tokens": [51665, 300, 321, 434, 16821, 294, 264, 558, 51765], "temperature": 0.0, "avg_logprob": -0.0991700089093551, "compression_ratio": 1.5315789473684212, "no_speech_prob": 0.00017629691865295172}, {"id": 1062, "seek": 271134, "start": 2739.34, "end": 2741.34, "text": " sort of speed?", "tokens": [51765, 1333, 295, 3073, 30, 51865], "temperature": 0.0, "avg_logprob": -0.0991700089093551, "compression_ratio": 1.5315789473684212, "no_speech_prob": 0.00017629691865295172}, {"id": 1063, "seek": 274134, "start": 2741.34, "end": 2743.34, "text": " So let's try to determine a reasonable learning rate.", "tokens": [50365, 407, 718, 311, 853, 281, 6997, 257, 10585, 2539, 3314, 13, 50465], "temperature": 0.0, "avg_logprob": -0.12353254665027966, "compression_ratio": 1.5727272727272728, "no_speech_prob": 0.0002484043361619115}, {"id": 1064, "seek": 274134, "start": 2743.34, "end": 2745.34, "text": " It works as follows.", "tokens": [50465, 467, 1985, 382, 10002, 13, 50565], "temperature": 0.0, "avg_logprob": -0.12353254665027966, "compression_ratio": 1.5727272727272728, "no_speech_prob": 0.0002484043361619115}, {"id": 1065, "seek": 274134, "start": 2745.34, "end": 2747.34, "text": " Let's reset our parameters", "tokens": [50565, 961, 311, 14322, 527, 9834, 50665], "temperature": 0.0, "avg_logprob": -0.12353254665027966, "compression_ratio": 1.5727272727272728, "no_speech_prob": 0.0002484043361619115}, {"id": 1066, "seek": 274134, "start": 2747.34, "end": 2749.34, "text": " to the initial", "tokens": [50665, 281, 264, 5883, 50765], "temperature": 0.0, "avg_logprob": -0.12353254665027966, "compression_ratio": 1.5727272727272728, "no_speech_prob": 0.0002484043361619115}, {"id": 1067, "seek": 274134, "start": 2749.34, "end": 2751.34, "text": " settings.", "tokens": [50765, 6257, 13, 50865], "temperature": 0.0, "avg_logprob": -0.12353254665027966, "compression_ratio": 1.5727272727272728, "no_speech_prob": 0.0002484043361619115}, {"id": 1068, "seek": 274134, "start": 2751.34, "end": 2753.34, "text": " And now let's print", "tokens": [50865, 400, 586, 718, 311, 4482, 50965], "temperature": 0.0, "avg_logprob": -0.12353254665027966, "compression_ratio": 1.5727272727272728, "no_speech_prob": 0.0002484043361619115}, {"id": 1069, "seek": 274134, "start": 2753.34, "end": 2755.34, "text": " in every step.", "tokens": [50965, 294, 633, 1823, 13, 51065], "temperature": 0.0, "avg_logprob": -0.12353254665027966, "compression_ratio": 1.5727272727272728, "no_speech_prob": 0.0002484043361619115}, {"id": 1070, "seek": 274134, "start": 2755.34, "end": 2757.34, "text": " But let's only do 10 steps or so.", "tokens": [51065, 583, 718, 311, 787, 360, 1266, 4439, 420, 370, 13, 51165], "temperature": 0.0, "avg_logprob": -0.12353254665027966, "compression_ratio": 1.5727272727272728, "no_speech_prob": 0.0002484043361619115}, {"id": 1071, "seek": 274134, "start": 2757.34, "end": 2759.34, "text": " Or maybe", "tokens": [51165, 1610, 1310, 51265], "temperature": 0.0, "avg_logprob": -0.12353254665027966, "compression_ratio": 1.5727272727272728, "no_speech_prob": 0.0002484043361619115}, {"id": 1072, "seek": 274134, "start": 2759.34, "end": 2761.34, "text": " 100 steps.", "tokens": [51265, 2319, 4439, 13, 51365], "temperature": 0.0, "avg_logprob": -0.12353254665027966, "compression_ratio": 1.5727272727272728, "no_speech_prob": 0.0002484043361619115}, {"id": 1073, "seek": 274134, "start": 2761.34, "end": 2763.34, "text": " We want to find a very reasonable", "tokens": [51365, 492, 528, 281, 915, 257, 588, 10585, 51465], "temperature": 0.0, "avg_logprob": -0.12353254665027966, "compression_ratio": 1.5727272727272728, "no_speech_prob": 0.0002484043361619115}, {"id": 1074, "seek": 274134, "start": 2763.34, "end": 2765.34, "text": " search range if you will.", "tokens": [51465, 3164, 3613, 498, 291, 486, 13, 51565], "temperature": 0.0, "avg_logprob": -0.12353254665027966, "compression_ratio": 1.5727272727272728, "no_speech_prob": 0.0002484043361619115}, {"id": 1075, "seek": 274134, "start": 2765.34, "end": 2767.34, "text": " So for example if this is very low", "tokens": [51565, 407, 337, 1365, 498, 341, 307, 588, 2295, 51665], "temperature": 0.0, "avg_logprob": -0.12353254665027966, "compression_ratio": 1.5727272727272728, "no_speech_prob": 0.0002484043361619115}, {"id": 1076, "seek": 274134, "start": 2767.34, "end": 2769.34, "text": " then", "tokens": [51665, 550, 51765], "temperature": 0.0, "avg_logprob": -0.12353254665027966, "compression_ratio": 1.5727272727272728, "no_speech_prob": 0.0002484043361619115}, {"id": 1077, "seek": 274134, "start": 2769.34, "end": 2771.34, "text": " we see that the loss is barely", "tokens": [51765, 321, 536, 300, 264, 4470, 307, 10268, 51865], "temperature": 0.0, "avg_logprob": -0.12353254665027966, "compression_ratio": 1.5727272727272728, "no_speech_prob": 0.0002484043361619115}, {"id": 1078, "seek": 277134, "start": 2771.34, "end": 2773.34, "text": " decreasing. So that's not", "tokens": [50365, 23223, 13, 407, 300, 311, 406, 50465], "temperature": 0.0, "avg_logprob": -0.05741240697748521, "compression_ratio": 1.8032128514056225, "no_speech_prob": 0.00018028965860139579}, {"id": 1079, "seek": 277134, "start": 2773.34, "end": 2775.34, "text": " that's like too low basically.", "tokens": [50465, 300, 311, 411, 886, 2295, 1936, 13, 50565], "temperature": 0.0, "avg_logprob": -0.05741240697748521, "compression_ratio": 1.8032128514056225, "no_speech_prob": 0.00018028965860139579}, {"id": 1080, "seek": 277134, "start": 2775.34, "end": 2777.34, "text": " So let's try this one.", "tokens": [50565, 407, 718, 311, 853, 341, 472, 13, 50665], "temperature": 0.0, "avg_logprob": -0.05741240697748521, "compression_ratio": 1.8032128514056225, "no_speech_prob": 0.00018028965860139579}, {"id": 1081, "seek": 277134, "start": 2777.34, "end": 2779.34, "text": " Okay so we're", "tokens": [50665, 1033, 370, 321, 434, 50765], "temperature": 0.0, "avg_logprob": -0.05741240697748521, "compression_ratio": 1.8032128514056225, "no_speech_prob": 0.00018028965860139579}, {"id": 1082, "seek": 277134, "start": 2779.34, "end": 2781.34, "text": " decreasing the loss but like not very quickly.", "tokens": [50765, 23223, 264, 4470, 457, 411, 406, 588, 2661, 13, 50865], "temperature": 0.0, "avg_logprob": -0.05741240697748521, "compression_ratio": 1.8032128514056225, "no_speech_prob": 0.00018028965860139579}, {"id": 1083, "seek": 277134, "start": 2781.34, "end": 2783.34, "text": " So that's a pretty good low range.", "tokens": [50865, 407, 300, 311, 257, 1238, 665, 2295, 3613, 13, 50965], "temperature": 0.0, "avg_logprob": -0.05741240697748521, "compression_ratio": 1.8032128514056225, "no_speech_prob": 0.00018028965860139579}, {"id": 1084, "seek": 277134, "start": 2783.34, "end": 2785.34, "text": " Now let's reset it again.", "tokens": [50965, 823, 718, 311, 14322, 309, 797, 13, 51065], "temperature": 0.0, "avg_logprob": -0.05741240697748521, "compression_ratio": 1.8032128514056225, "no_speech_prob": 0.00018028965860139579}, {"id": 1085, "seek": 277134, "start": 2785.34, "end": 2787.34, "text": " And now let's try to find the place", "tokens": [51065, 400, 586, 718, 311, 853, 281, 915, 264, 1081, 51165], "temperature": 0.0, "avg_logprob": -0.05741240697748521, "compression_ratio": 1.8032128514056225, "no_speech_prob": 0.00018028965860139579}, {"id": 1086, "seek": 277134, "start": 2787.34, "end": 2789.34, "text": " at which the loss kind of explodes.", "tokens": [51165, 412, 597, 264, 4470, 733, 295, 42610, 13, 51265], "temperature": 0.0, "avg_logprob": -0.05741240697748521, "compression_ratio": 1.8032128514056225, "no_speech_prob": 0.00018028965860139579}, {"id": 1087, "seek": 277134, "start": 2789.34, "end": 2791.34, "text": " So maybe at negative one.", "tokens": [51265, 407, 1310, 412, 3671, 472, 13, 51365], "temperature": 0.0, "avg_logprob": -0.05741240697748521, "compression_ratio": 1.8032128514056225, "no_speech_prob": 0.00018028965860139579}, {"id": 1088, "seek": 277134, "start": 2793.34, "end": 2795.34, "text": " Okay we see that we're minimizing the loss", "tokens": [51465, 1033, 321, 536, 300, 321, 434, 46608, 264, 4470, 51565], "temperature": 0.0, "avg_logprob": -0.05741240697748521, "compression_ratio": 1.8032128514056225, "no_speech_prob": 0.00018028965860139579}, {"id": 1089, "seek": 277134, "start": 2795.34, "end": 2797.34, "text": " but you see how it's kind of unstable.", "tokens": [51565, 457, 291, 536, 577, 309, 311, 733, 295, 23742, 13, 51665], "temperature": 0.0, "avg_logprob": -0.05741240697748521, "compression_ratio": 1.8032128514056225, "no_speech_prob": 0.00018028965860139579}, {"id": 1090, "seek": 277134, "start": 2797.34, "end": 2799.34, "text": " It goes up and down quite a bit.", "tokens": [51665, 467, 1709, 493, 293, 760, 1596, 257, 857, 13, 51765], "temperature": 0.0, "avg_logprob": -0.05741240697748521, "compression_ratio": 1.8032128514056225, "no_speech_prob": 0.00018028965860139579}, {"id": 1091, "seek": 277134, "start": 2799.34, "end": 2801.34, "text": " So negative one is probably like a", "tokens": [51765, 407, 3671, 472, 307, 1391, 411, 257, 51865], "temperature": 0.0, "avg_logprob": -0.05741240697748521, "compression_ratio": 1.8032128514056225, "no_speech_prob": 0.00018028965860139579}, {"id": 1092, "seek": 280134, "start": 2801.34, "end": 2803.34, "text": " fast learning rate.", "tokens": [50365, 2370, 2539, 3314, 13, 50465], "temperature": 0.0, "avg_logprob": -0.07786322434743245, "compression_ratio": 1.752212389380531, "no_speech_prob": 0.00018658069893717766}, {"id": 1093, "seek": 280134, "start": 2803.34, "end": 2805.34, "text": " Let's try negative ten.", "tokens": [50465, 961, 311, 853, 3671, 2064, 13, 50565], "temperature": 0.0, "avg_logprob": -0.07786322434743245, "compression_ratio": 1.752212389380531, "no_speech_prob": 0.00018658069893717766}, {"id": 1094, "seek": 280134, "start": 2805.34, "end": 2807.34, "text": " Okay so this isn't", "tokens": [50565, 1033, 370, 341, 1943, 380, 50665], "temperature": 0.0, "avg_logprob": -0.07786322434743245, "compression_ratio": 1.752212389380531, "no_speech_prob": 0.00018658069893717766}, {"id": 1095, "seek": 280134, "start": 2807.34, "end": 2809.34, "text": " optimizing. This is not working very well.", "tokens": [50665, 40425, 13, 639, 307, 406, 1364, 588, 731, 13, 50765], "temperature": 0.0, "avg_logprob": -0.07786322434743245, "compression_ratio": 1.752212389380531, "no_speech_prob": 0.00018658069893717766}, {"id": 1096, "seek": 280134, "start": 2809.34, "end": 2811.34, "text": " So negative ten is way too big.", "tokens": [50765, 407, 3671, 2064, 307, 636, 886, 955, 13, 50865], "temperature": 0.0, "avg_logprob": -0.07786322434743245, "compression_ratio": 1.752212389380531, "no_speech_prob": 0.00018658069893717766}, {"id": 1097, "seek": 280134, "start": 2811.34, "end": 2813.34, "text": " Negative one was already kind of big.", "tokens": [50865, 43230, 472, 390, 1217, 733, 295, 955, 13, 50965], "temperature": 0.0, "avg_logprob": -0.07786322434743245, "compression_ratio": 1.752212389380531, "no_speech_prob": 0.00018658069893717766}, {"id": 1098, "seek": 280134, "start": 2813.34, "end": 2815.34, "text": " So", "tokens": [50965, 407, 51065], "temperature": 0.0, "avg_logprob": -0.07786322434743245, "compression_ratio": 1.752212389380531, "no_speech_prob": 0.00018658069893717766}, {"id": 1099, "seek": 280134, "start": 2815.34, "end": 2817.34, "text": " therefore negative one was like", "tokens": [51065, 4412, 3671, 472, 390, 411, 51165], "temperature": 0.0, "avg_logprob": -0.07786322434743245, "compression_ratio": 1.752212389380531, "no_speech_prob": 0.00018658069893717766}, {"id": 1100, "seek": 280134, "start": 2817.34, "end": 2819.34, "text": " somewhat reasonable if I reset.", "tokens": [51165, 8344, 10585, 498, 286, 14322, 13, 51265], "temperature": 0.0, "avg_logprob": -0.07786322434743245, "compression_ratio": 1.752212389380531, "no_speech_prob": 0.00018658069893717766}, {"id": 1101, "seek": 280134, "start": 2819.34, "end": 2821.34, "text": " So I'm thinking that the right", "tokens": [51265, 407, 286, 478, 1953, 300, 264, 558, 51365], "temperature": 0.0, "avg_logprob": -0.07786322434743245, "compression_ratio": 1.752212389380531, "no_speech_prob": 0.00018658069893717766}, {"id": 1102, "seek": 280134, "start": 2821.34, "end": 2823.34, "text": " learning rate is somewhere between", "tokens": [51365, 2539, 3314, 307, 4079, 1296, 51465], "temperature": 0.0, "avg_logprob": -0.07786322434743245, "compression_ratio": 1.752212389380531, "no_speech_prob": 0.00018658069893717766}, {"id": 1103, "seek": 280134, "start": 2823.34, "end": 2825.34, "text": " negative 0.001", "tokens": [51465, 3671, 1958, 13, 628, 16, 51565], "temperature": 0.0, "avg_logprob": -0.07786322434743245, "compression_ratio": 1.752212389380531, "no_speech_prob": 0.00018658069893717766}, {"id": 1104, "seek": 280134, "start": 2825.34, "end": 2827.34, "text": " and negative one.", "tokens": [51565, 293, 3671, 472, 13, 51665], "temperature": 0.0, "avg_logprob": -0.07786322434743245, "compression_ratio": 1.752212389380531, "no_speech_prob": 0.00018658069893717766}, {"id": 1105, "seek": 280134, "start": 2827.34, "end": 2829.34, "text": " So the way we can do this", "tokens": [51665, 407, 264, 636, 321, 393, 360, 341, 51765], "temperature": 0.0, "avg_logprob": -0.07786322434743245, "compression_ratio": 1.752212389380531, "no_speech_prob": 0.00018658069893717766}, {"id": 1106, "seek": 280134, "start": 2829.34, "end": 2831.34, "text": " here is we can use Torch.lin", "tokens": [51765, 510, 307, 321, 393, 764, 7160, 339, 13, 5045, 51865], "temperature": 0.0, "avg_logprob": -0.07786322434743245, "compression_ratio": 1.752212389380531, "no_speech_prob": 0.00018658069893717766}, {"id": 1107, "seek": 283134, "start": 2831.34, "end": 2833.34, "text": " space.", "tokens": [50365, 1901, 13, 50465], "temperature": 0.0, "avg_logprob": -0.10856459935506185, "compression_ratio": 1.6970954356846473, "no_speech_prob": 0.0001852027198765427}, {"id": 1108, "seek": 283134, "start": 2833.34, "end": 2835.34, "text": " And we want to basically do something like this.", "tokens": [50465, 400, 321, 528, 281, 1936, 360, 746, 411, 341, 13, 50565], "temperature": 0.0, "avg_logprob": -0.10856459935506185, "compression_ratio": 1.6970954356846473, "no_speech_prob": 0.0001852027198765427}, {"id": 1109, "seek": 283134, "start": 2835.34, "end": 2837.34, "text": " Between zero and one.", "tokens": [50565, 18967, 4018, 293, 472, 13, 50665], "temperature": 0.0, "avg_logprob": -0.10856459935506185, "compression_ratio": 1.6970954356846473, "no_speech_prob": 0.0001852027198765427}, {"id": 1110, "seek": 283134, "start": 2839.34, "end": 2841.34, "text": " Oh number of steps is one more parameter", "tokens": [50765, 876, 1230, 295, 4439, 307, 472, 544, 13075, 50865], "temperature": 0.0, "avg_logprob": -0.10856459935506185, "compression_ratio": 1.6970954356846473, "no_speech_prob": 0.0001852027198765427}, {"id": 1111, "seek": 283134, "start": 2841.34, "end": 2843.34, "text": " that's required. Let's do a thousand steps.", "tokens": [50865, 300, 311, 4739, 13, 961, 311, 360, 257, 4714, 4439, 13, 50965], "temperature": 0.0, "avg_logprob": -0.10856459935506185, "compression_ratio": 1.6970954356846473, "no_speech_prob": 0.0001852027198765427}, {"id": 1112, "seek": 283134, "start": 2843.34, "end": 2845.34, "text": " This creates one thousand", "tokens": [50965, 639, 7829, 472, 4714, 51065], "temperature": 0.0, "avg_logprob": -0.10856459935506185, "compression_ratio": 1.6970954356846473, "no_speech_prob": 0.0001852027198765427}, {"id": 1113, "seek": 283134, "start": 2845.34, "end": 2847.34, "text": " numbers between", "tokens": [51065, 3547, 1296, 51165], "temperature": 0.0, "avg_logprob": -0.10856459935506185, "compression_ratio": 1.6970954356846473, "no_speech_prob": 0.0001852027198765427}, {"id": 1114, "seek": 283134, "start": 2847.34, "end": 2849.34, "text": " 0.001 and one.", "tokens": [51165, 1958, 13, 628, 16, 293, 472, 13, 51265], "temperature": 0.0, "avg_logprob": -0.10856459935506185, "compression_ratio": 1.6970954356846473, "no_speech_prob": 0.0001852027198765427}, {"id": 1115, "seek": 283134, "start": 2849.34, "end": 2851.34, "text": " But it doesn't really make sense to", "tokens": [51265, 583, 309, 1177, 380, 534, 652, 2020, 281, 51365], "temperature": 0.0, "avg_logprob": -0.10856459935506185, "compression_ratio": 1.6970954356846473, "no_speech_prob": 0.0001852027198765427}, {"id": 1116, "seek": 283134, "start": 2851.34, "end": 2853.34, "text": " step between these linearly.", "tokens": [51365, 1823, 1296, 613, 43586, 13, 51465], "temperature": 0.0, "avg_logprob": -0.10856459935506185, "compression_ratio": 1.6970954356846473, "no_speech_prob": 0.0001852027198765427}, {"id": 1117, "seek": 283134, "start": 2853.34, "end": 2855.34, "text": " So instead let me create learning rate", "tokens": [51465, 407, 2602, 718, 385, 1884, 2539, 3314, 51565], "temperature": 0.0, "avg_logprob": -0.10856459935506185, "compression_ratio": 1.6970954356846473, "no_speech_prob": 0.0001852027198765427}, {"id": 1118, "seek": 283134, "start": 2855.34, "end": 2857.34, "text": " exponent. And instead of", "tokens": [51565, 37871, 13, 400, 2602, 295, 51665], "temperature": 0.0, "avg_logprob": -0.10856459935506185, "compression_ratio": 1.6970954356846473, "no_speech_prob": 0.0001852027198765427}, {"id": 1119, "seek": 283134, "start": 2857.34, "end": 2859.34, "text": " 0.001 this will be", "tokens": [51665, 1958, 13, 628, 16, 341, 486, 312, 51765], "temperature": 0.0, "avg_logprob": -0.10856459935506185, "compression_ratio": 1.6970954356846473, "no_speech_prob": 0.0001852027198765427}, {"id": 1120, "seek": 283134, "start": 2859.34, "end": 2861.34, "text": " a negative three and this will be a zero.", "tokens": [51765, 257, 3671, 1045, 293, 341, 486, 312, 257, 4018, 13, 51865], "temperature": 0.0, "avg_logprob": -0.10856459935506185, "compression_ratio": 1.6970954356846473, "no_speech_prob": 0.0001852027198765427}, {"id": 1121, "seek": 286134, "start": 2861.34, "end": 2863.34, "text": " And then the actual LRs", "tokens": [50365, 400, 550, 264, 3539, 441, 49, 82, 50465], "temperature": 0.0, "avg_logprob": -0.06838215721978082, "compression_ratio": 1.9071729957805907, "no_speech_prob": 0.0002740268246270716}, {"id": 1122, "seek": 286134, "start": 2863.34, "end": 2865.34, "text": " that we want to search over are going to be", "tokens": [50465, 300, 321, 528, 281, 3164, 670, 366, 516, 281, 312, 50565], "temperature": 0.0, "avg_logprob": -0.06838215721978082, "compression_ratio": 1.9071729957805907, "no_speech_prob": 0.0002740268246270716}, {"id": 1123, "seek": 286134, "start": 2865.34, "end": 2867.34, "text": " ten to the power of LRE.", "tokens": [50565, 2064, 281, 264, 1347, 295, 441, 3850, 13, 50665], "temperature": 0.0, "avg_logprob": -0.06838215721978082, "compression_ratio": 1.9071729957805907, "no_speech_prob": 0.0002740268246270716}, {"id": 1124, "seek": 286134, "start": 2867.34, "end": 2869.34, "text": " So now what we're doing is", "tokens": [50665, 407, 586, 437, 321, 434, 884, 307, 50765], "temperature": 0.0, "avg_logprob": -0.06838215721978082, "compression_ratio": 1.9071729957805907, "no_speech_prob": 0.0002740268246270716}, {"id": 1125, "seek": 286134, "start": 2869.34, "end": 2871.34, "text": " we're stepping linearly between the exponents", "tokens": [50765, 321, 434, 16821, 43586, 1296, 264, 12680, 791, 50865], "temperature": 0.0, "avg_logprob": -0.06838215721978082, "compression_ratio": 1.9071729957805907, "no_speech_prob": 0.0002740268246270716}, {"id": 1126, "seek": 286134, "start": 2871.34, "end": 2873.34, "text": " of these learning rates. This is 0.001", "tokens": [50865, 295, 613, 2539, 6846, 13, 639, 307, 1958, 13, 628, 16, 50965], "temperature": 0.0, "avg_logprob": -0.06838215721978082, "compression_ratio": 1.9071729957805907, "no_speech_prob": 0.0002740268246270716}, {"id": 1127, "seek": 286134, "start": 2873.34, "end": 2875.34, "text": " and this is one.", "tokens": [50965, 293, 341, 307, 472, 13, 51065], "temperature": 0.0, "avg_logprob": -0.06838215721978082, "compression_ratio": 1.9071729957805907, "no_speech_prob": 0.0002740268246270716}, {"id": 1128, "seek": 286134, "start": 2875.34, "end": 2877.34, "text": " Because ten to the power of zero", "tokens": [51065, 1436, 2064, 281, 264, 1347, 295, 4018, 51165], "temperature": 0.0, "avg_logprob": -0.06838215721978082, "compression_ratio": 1.9071729957805907, "no_speech_prob": 0.0002740268246270716}, {"id": 1129, "seek": 286134, "start": 2877.34, "end": 2879.34, "text": " is one. And therefore", "tokens": [51165, 307, 472, 13, 400, 4412, 51265], "temperature": 0.0, "avg_logprob": -0.06838215721978082, "compression_ratio": 1.9071729957805907, "no_speech_prob": 0.0002740268246270716}, {"id": 1130, "seek": 286134, "start": 2879.34, "end": 2881.34, "text": " we are spaced exponentially in this interval.", "tokens": [51265, 321, 366, 43766, 37330, 294, 341, 15035, 13, 51365], "temperature": 0.0, "avg_logprob": -0.06838215721978082, "compression_ratio": 1.9071729957805907, "no_speech_prob": 0.0002740268246270716}, {"id": 1131, "seek": 286134, "start": 2881.34, "end": 2883.34, "text": " So these are the candidate", "tokens": [51365, 407, 613, 366, 264, 11532, 51465], "temperature": 0.0, "avg_logprob": -0.06838215721978082, "compression_ratio": 1.9071729957805907, "no_speech_prob": 0.0002740268246270716}, {"id": 1132, "seek": 286134, "start": 2883.34, "end": 2885.34, "text": " learning rates that we want", "tokens": [51465, 2539, 6846, 300, 321, 528, 51565], "temperature": 0.0, "avg_logprob": -0.06838215721978082, "compression_ratio": 1.9071729957805907, "no_speech_prob": 0.0002740268246270716}, {"id": 1133, "seek": 286134, "start": 2885.34, "end": 2887.34, "text": " to sort of like search over roughly.", "tokens": [51565, 281, 1333, 295, 411, 3164, 670, 9810, 13, 51665], "temperature": 0.0, "avg_logprob": -0.06838215721978082, "compression_ratio": 1.9071729957805907, "no_speech_prob": 0.0002740268246270716}, {"id": 1134, "seek": 286134, "start": 2887.34, "end": 2889.34, "text": " So now what we're going to do is", "tokens": [51665, 407, 586, 437, 321, 434, 516, 281, 360, 307, 51765], "temperature": 0.0, "avg_logprob": -0.06838215721978082, "compression_ratio": 1.9071729957805907, "no_speech_prob": 0.0002740268246270716}, {"id": 1135, "seek": 286134, "start": 2889.34, "end": 2891.34, "text": " here", "tokens": [51765, 510, 51865], "temperature": 0.0, "avg_logprob": -0.06838215721978082, "compression_ratio": 1.9071729957805907, "no_speech_prob": 0.0002740268246270716}, {"id": 1136, "seek": 289134, "start": 2891.34, "end": 2893.34, "text": " we are going to run the optimization for", "tokens": [50365, 321, 366, 516, 281, 1190, 264, 19618, 337, 50465], "temperature": 0.0, "avg_logprob": -0.09106977780659993, "compression_ratio": 1.6515837104072397, "no_speech_prob": 0.00010823980846907943}, {"id": 1137, "seek": 289134, "start": 2893.34, "end": 2895.34, "text": " one thousand steps. And instead of using", "tokens": [50465, 472, 4714, 4439, 13, 400, 2602, 295, 1228, 50565], "temperature": 0.0, "avg_logprob": -0.09106977780659993, "compression_ratio": 1.6515837104072397, "no_speech_prob": 0.00010823980846907943}, {"id": 1138, "seek": 289134, "start": 2895.34, "end": 2897.34, "text": " a fixed number we are going to", "tokens": [50565, 257, 6806, 1230, 321, 366, 516, 281, 50665], "temperature": 0.0, "avg_logprob": -0.09106977780659993, "compression_ratio": 1.6515837104072397, "no_speech_prob": 0.00010823980846907943}, {"id": 1139, "seek": 289134, "start": 2897.34, "end": 2899.34, "text": " use learning rate", "tokens": [50665, 764, 2539, 3314, 50765], "temperature": 0.0, "avg_logprob": -0.09106977780659993, "compression_ratio": 1.6515837104072397, "no_speech_prob": 0.00010823980846907943}, {"id": 1140, "seek": 289134, "start": 2899.34, "end": 2901.34, "text": " indexing into here LRs", "tokens": [50765, 8186, 278, 666, 510, 441, 49, 82, 50865], "temperature": 0.0, "avg_logprob": -0.09106977780659993, "compression_ratio": 1.6515837104072397, "no_speech_prob": 0.00010823980846907943}, {"id": 1141, "seek": 289134, "start": 2901.34, "end": 2903.34, "text": " of i and make this", "tokens": [50865, 295, 741, 293, 652, 341, 50965], "temperature": 0.0, "avg_logprob": -0.09106977780659993, "compression_ratio": 1.6515837104072397, "no_speech_prob": 0.00010823980846907943}, {"id": 1142, "seek": 289134, "start": 2903.34, "end": 2905.34, "text": " i.", "tokens": [50965, 741, 13, 51065], "temperature": 0.0, "avg_logprob": -0.09106977780659993, "compression_ratio": 1.6515837104072397, "no_speech_prob": 0.00010823980846907943}, {"id": 1143, "seek": 289134, "start": 2905.34, "end": 2907.34, "text": " So basically let me reset this", "tokens": [51065, 407, 1936, 718, 385, 14322, 341, 51165], "temperature": 0.0, "avg_logprob": -0.09106977780659993, "compression_ratio": 1.6515837104072397, "no_speech_prob": 0.00010823980846907943}, {"id": 1144, "seek": 289134, "start": 2907.34, "end": 2909.34, "text": " to be again starting", "tokens": [51165, 281, 312, 797, 2891, 51265], "temperature": 0.0, "avg_logprob": -0.09106977780659993, "compression_ratio": 1.6515837104072397, "no_speech_prob": 0.00010823980846907943}, {"id": 1145, "seek": 289134, "start": 2909.34, "end": 2911.34, "text": " from random. Creating these learning", "tokens": [51265, 490, 4974, 13, 40002, 613, 2539, 51365], "temperature": 0.0, "avg_logprob": -0.09106977780659993, "compression_ratio": 1.6515837104072397, "no_speech_prob": 0.00010823980846907943}, {"id": 1146, "seek": 289134, "start": 2911.34, "end": 2913.34, "text": " rates between negative", "tokens": [51365, 6846, 1296, 3671, 51465], "temperature": 0.0, "avg_logprob": -0.09106977780659993, "compression_ratio": 1.6515837104072397, "no_speech_prob": 0.00010823980846907943}, {"id": 1147, "seek": 289134, "start": 2913.34, "end": 2915.34, "text": " between 0.001 and", "tokens": [51465, 1296, 1958, 13, 628, 16, 293, 51565], "temperature": 0.0, "avg_logprob": -0.09106977780659993, "compression_ratio": 1.6515837104072397, "no_speech_prob": 0.00010823980846907943}, {"id": 1148, "seek": 289134, "start": 2915.34, "end": 2917.34, "text": " one", "tokens": [51565, 472, 51665], "temperature": 0.0, "avg_logprob": -0.09106977780659993, "compression_ratio": 1.6515837104072397, "no_speech_prob": 0.00010823980846907943}, {"id": 1149, "seek": 289134, "start": 2917.34, "end": 2919.34, "text": " but exponentially stepped.", "tokens": [51665, 457, 37330, 15251, 13, 51765], "temperature": 0.0, "avg_logprob": -0.09106977780659993, "compression_ratio": 1.6515837104072397, "no_speech_prob": 0.00010823980846907943}, {"id": 1150, "seek": 289134, "start": 2919.34, "end": 2921.34, "text": " And here what we're doing is", "tokens": [51765, 400, 510, 437, 321, 434, 884, 307, 51865], "temperature": 0.0, "avg_logprob": -0.09106977780659993, "compression_ratio": 1.6515837104072397, "no_speech_prob": 0.00010823980846907943}, {"id": 1151, "seek": 292134, "start": 2921.34, "end": 2923.34, "text": " we're iterating a thousand times", "tokens": [50365, 321, 434, 17138, 990, 257, 4714, 1413, 50465], "temperature": 0.0, "avg_logprob": -0.048586593627929685, "compression_ratio": 2.0256410256410255, "no_speech_prob": 0.00011224693298572674}, {"id": 1152, "seek": 292134, "start": 2923.34, "end": 2925.34, "text": " we're going to use the learning rate", "tokens": [50465, 321, 434, 516, 281, 764, 264, 2539, 3314, 50565], "temperature": 0.0, "avg_logprob": -0.048586593627929685, "compression_ratio": 2.0256410256410255, "no_speech_prob": 0.00011224693298572674}, {"id": 1153, "seek": 292134, "start": 2925.34, "end": 2927.34, "text": " that's in the beginning", "tokens": [50565, 300, 311, 294, 264, 2863, 50665], "temperature": 0.0, "avg_logprob": -0.048586593627929685, "compression_ratio": 2.0256410256410255, "no_speech_prob": 0.00011224693298572674}, {"id": 1154, "seek": 292134, "start": 2927.34, "end": 2929.34, "text": " very very low. In the beginning it's going to be", "tokens": [50665, 588, 588, 2295, 13, 682, 264, 2863, 309, 311, 516, 281, 312, 50765], "temperature": 0.0, "avg_logprob": -0.048586593627929685, "compression_ratio": 2.0256410256410255, "no_speech_prob": 0.00011224693298572674}, {"id": 1155, "seek": 292134, "start": 2929.34, "end": 2931.34, "text": " 0.001 but by the end it's", "tokens": [50765, 1958, 13, 628, 16, 457, 538, 264, 917, 309, 311, 50865], "temperature": 0.0, "avg_logprob": -0.048586593627929685, "compression_ratio": 2.0256410256410255, "no_speech_prob": 0.00011224693298572674}, {"id": 1156, "seek": 292134, "start": 2931.34, "end": 2933.34, "text": " going to be one.", "tokens": [50865, 516, 281, 312, 472, 13, 50965], "temperature": 0.0, "avg_logprob": -0.048586593627929685, "compression_ratio": 2.0256410256410255, "no_speech_prob": 0.00011224693298572674}, {"id": 1157, "seek": 292134, "start": 2933.34, "end": 2935.34, "text": " And then we're going to step with that", "tokens": [50965, 400, 550, 321, 434, 516, 281, 1823, 365, 300, 51065], "temperature": 0.0, "avg_logprob": -0.048586593627929685, "compression_ratio": 2.0256410256410255, "no_speech_prob": 0.00011224693298572674}, {"id": 1158, "seek": 292134, "start": 2935.34, "end": 2937.34, "text": " learning rate.", "tokens": [51065, 2539, 3314, 13, 51165], "temperature": 0.0, "avg_logprob": -0.048586593627929685, "compression_ratio": 2.0256410256410255, "no_speech_prob": 0.00011224693298572674}, {"id": 1159, "seek": 292134, "start": 2937.34, "end": 2939.34, "text": " And now what we want to do is we want to keep track", "tokens": [51165, 400, 586, 437, 321, 528, 281, 360, 307, 321, 528, 281, 1066, 2837, 51265], "temperature": 0.0, "avg_logprob": -0.048586593627929685, "compression_ratio": 2.0256410256410255, "no_speech_prob": 0.00011224693298572674}, {"id": 1160, "seek": 292134, "start": 2939.34, "end": 2941.34, "text": " of the", "tokens": [51265, 295, 264, 51365], "temperature": 0.0, "avg_logprob": -0.048586593627929685, "compression_ratio": 2.0256410256410255, "no_speech_prob": 0.00011224693298572674}, {"id": 1161, "seek": 292134, "start": 2943.34, "end": 2945.34, "text": " learning rates that we used.", "tokens": [51465, 2539, 6846, 300, 321, 1143, 13, 51565], "temperature": 0.0, "avg_logprob": -0.048586593627929685, "compression_ratio": 2.0256410256410255, "no_speech_prob": 0.00011224693298572674}, {"id": 1162, "seek": 292134, "start": 2945.34, "end": 2947.34, "text": " And we want to look at the losses", "tokens": [51565, 400, 321, 528, 281, 574, 412, 264, 15352, 51665], "temperature": 0.0, "avg_logprob": -0.048586593627929685, "compression_ratio": 2.0256410256410255, "no_speech_prob": 0.00011224693298572674}, {"id": 1163, "seek": 292134, "start": 2947.34, "end": 2949.34, "text": " that resulted.", "tokens": [51665, 300, 18753, 13, 51765], "temperature": 0.0, "avg_logprob": -0.048586593627929685, "compression_ratio": 2.0256410256410255, "no_speech_prob": 0.00011224693298572674}, {"id": 1164, "seek": 292134, "start": 2949.34, "end": 2951.34, "text": " And so here let me", "tokens": [51765, 400, 370, 510, 718, 385, 51865], "temperature": 0.0, "avg_logprob": -0.048586593627929685, "compression_ratio": 2.0256410256410255, "no_speech_prob": 0.00011224693298572674}, {"id": 1165, "seek": 295134, "start": 2951.34, "end": 2953.34, "text": " track stats.", "tokens": [50365, 2837, 18152, 13, 50465], "temperature": 0.0, "avg_logprob": -0.11910561027876827, "compression_ratio": 1.6963350785340314, "no_speech_prob": 0.00020958406093996018}, {"id": 1166, "seek": 295134, "start": 2953.34, "end": 2955.34, "text": " So LRI dot append", "tokens": [50465, 407, 441, 5577, 5893, 34116, 50565], "temperature": 0.0, "avg_logprob": -0.11910561027876827, "compression_ratio": 1.6963350785340314, "no_speech_prob": 0.00020958406093996018}, {"id": 1167, "seek": 295134, "start": 2955.34, "end": 2957.34, "text": " LR and", "tokens": [50565, 441, 49, 293, 50665], "temperature": 0.0, "avg_logprob": -0.11910561027876827, "compression_ratio": 1.6963350785340314, "no_speech_prob": 0.00020958406093996018}, {"id": 1168, "seek": 295134, "start": 2957.34, "end": 2959.34, "text": " loss side dot append", "tokens": [50665, 4470, 1252, 5893, 34116, 50765], "temperature": 0.0, "avg_logprob": -0.11910561027876827, "compression_ratio": 1.6963350785340314, "no_speech_prob": 0.00020958406093996018}, {"id": 1169, "seek": 295134, "start": 2959.34, "end": 2961.34, "text": " loss dot item.", "tokens": [50765, 4470, 5893, 3174, 13, 50865], "temperature": 0.0, "avg_logprob": -0.11910561027876827, "compression_ratio": 1.6963350785340314, "no_speech_prob": 0.00020958406093996018}, {"id": 1170, "seek": 295134, "start": 2961.34, "end": 2963.34, "text": " Okay.", "tokens": [50865, 1033, 13, 50965], "temperature": 0.0, "avg_logprob": -0.11910561027876827, "compression_ratio": 1.6963350785340314, "no_speech_prob": 0.00020958406093996018}, {"id": 1171, "seek": 295134, "start": 2963.34, "end": 2965.34, "text": " So again reset everything", "tokens": [50965, 407, 797, 14322, 1203, 51065], "temperature": 0.0, "avg_logprob": -0.11910561027876827, "compression_ratio": 1.6963350785340314, "no_speech_prob": 0.00020958406093996018}, {"id": 1172, "seek": 295134, "start": 2965.34, "end": 2967.34, "text": " and then", "tokens": [51065, 293, 550, 51165], "temperature": 0.0, "avg_logprob": -0.11910561027876827, "compression_ratio": 1.6963350785340314, "no_speech_prob": 0.00020958406093996018}, {"id": 1173, "seek": 295134, "start": 2967.34, "end": 2969.34, "text": " run.", "tokens": [51165, 1190, 13, 51265], "temperature": 0.0, "avg_logprob": -0.11910561027876827, "compression_ratio": 1.6963350785340314, "no_speech_prob": 0.00020958406093996018}, {"id": 1174, "seek": 295134, "start": 2969.34, "end": 2971.34, "text": " And so basically we started", "tokens": [51265, 400, 370, 1936, 321, 1409, 51365], "temperature": 0.0, "avg_logprob": -0.11910561027876827, "compression_ratio": 1.6963350785340314, "no_speech_prob": 0.00020958406093996018}, {"id": 1175, "seek": 295134, "start": 2971.34, "end": 2973.34, "text": " with a very low learning rate and we went all the way up", "tokens": [51365, 365, 257, 588, 2295, 2539, 3314, 293, 321, 1437, 439, 264, 636, 493, 51465], "temperature": 0.0, "avg_logprob": -0.11910561027876827, "compression_ratio": 1.6963350785340314, "no_speech_prob": 0.00020958406093996018}, {"id": 1176, "seek": 295134, "start": 2973.34, "end": 2975.34, "text": " to learning rate of negative one.", "tokens": [51465, 281, 2539, 3314, 295, 3671, 472, 13, 51565], "temperature": 0.0, "avg_logprob": -0.11910561027876827, "compression_ratio": 1.6963350785340314, "no_speech_prob": 0.00020958406093996018}, {"id": 1177, "seek": 295134, "start": 2975.34, "end": 2977.34, "text": " And now what we can do is we can", "tokens": [51565, 400, 586, 437, 321, 393, 360, 307, 321, 393, 51665], "temperature": 0.0, "avg_logprob": -0.11910561027876827, "compression_ratio": 1.6963350785340314, "no_speech_prob": 0.00020958406093996018}, {"id": 1178, "seek": 295134, "start": 2977.34, "end": 2979.34, "text": " plt dot plot and", "tokens": [51665, 499, 83, 5893, 7542, 293, 51765], "temperature": 0.0, "avg_logprob": -0.11910561027876827, "compression_ratio": 1.6963350785340314, "no_speech_prob": 0.00020958406093996018}, {"id": 1179, "seek": 295134, "start": 2979.34, "end": 2981.34, "text": " we can plot the two. So we can plot", "tokens": [51765, 321, 393, 7542, 264, 732, 13, 407, 321, 393, 7542, 51865], "temperature": 0.0, "avg_logprob": -0.11910561027876827, "compression_ratio": 1.6963350785340314, "no_speech_prob": 0.00020958406093996018}, {"id": 1180, "seek": 298134, "start": 2981.34, "end": 2983.34, "text": " the learning rates on the x-axis", "tokens": [50365, 264, 2539, 6846, 322, 264, 2031, 12, 24633, 50465], "temperature": 0.0, "avg_logprob": -0.06623825719279627, "compression_ratio": 1.8380566801619433, "no_speech_prob": 0.00015778384113218635}, {"id": 1181, "seek": 298134, "start": 2983.34, "end": 2985.34, "text": " and the losses we saw on the y-axis.", "tokens": [50465, 293, 264, 15352, 321, 1866, 322, 264, 288, 12, 24633, 13, 50565], "temperature": 0.0, "avg_logprob": -0.06623825719279627, "compression_ratio": 1.8380566801619433, "no_speech_prob": 0.00015778384113218635}, {"id": 1182, "seek": 298134, "start": 2985.34, "end": 2987.34, "text": " And often you're going to find", "tokens": [50565, 400, 2049, 291, 434, 516, 281, 915, 50665], "temperature": 0.0, "avg_logprob": -0.06623825719279627, "compression_ratio": 1.8380566801619433, "no_speech_prob": 0.00015778384113218635}, {"id": 1183, "seek": 298134, "start": 2987.34, "end": 2989.34, "text": " that your plot looks something like this.", "tokens": [50665, 300, 428, 7542, 1542, 746, 411, 341, 13, 50765], "temperature": 0.0, "avg_logprob": -0.06623825719279627, "compression_ratio": 1.8380566801619433, "no_speech_prob": 0.00015778384113218635}, {"id": 1184, "seek": 298134, "start": 2989.34, "end": 2991.34, "text": " Where in the beginning", "tokens": [50765, 2305, 294, 264, 2863, 50865], "temperature": 0.0, "avg_logprob": -0.06623825719279627, "compression_ratio": 1.8380566801619433, "no_speech_prob": 0.00015778384113218635}, {"id": 1185, "seek": 298134, "start": 2991.34, "end": 2993.34, "text": " you had very low learning rates", "tokens": [50865, 291, 632, 588, 2295, 2539, 6846, 50965], "temperature": 0.0, "avg_logprob": -0.06623825719279627, "compression_ratio": 1.8380566801619433, "no_speech_prob": 0.00015778384113218635}, {"id": 1186, "seek": 298134, "start": 2993.34, "end": 2995.34, "text": " basically anything", "tokens": [50965, 1936, 1340, 51065], "temperature": 0.0, "avg_logprob": -0.06623825719279627, "compression_ratio": 1.8380566801619433, "no_speech_prob": 0.00015778384113218635}, {"id": 1187, "seek": 298134, "start": 2995.34, "end": 2997.34, "text": " barely anything happened.", "tokens": [51065, 10268, 1340, 2011, 13, 51165], "temperature": 0.0, "avg_logprob": -0.06623825719279627, "compression_ratio": 1.8380566801619433, "no_speech_prob": 0.00015778384113218635}, {"id": 1188, "seek": 298134, "start": 2997.34, "end": 2999.34, "text": " Then we got to like a nice spot", "tokens": [51165, 1396, 321, 658, 281, 411, 257, 1481, 4008, 51265], "temperature": 0.0, "avg_logprob": -0.06623825719279627, "compression_ratio": 1.8380566801619433, "no_speech_prob": 0.00015778384113218635}, {"id": 1189, "seek": 298134, "start": 2999.34, "end": 3001.34, "text": " here and then as we increased", "tokens": [51265, 510, 293, 550, 382, 321, 6505, 51365], "temperature": 0.0, "avg_logprob": -0.06623825719279627, "compression_ratio": 1.8380566801619433, "no_speech_prob": 0.00015778384113218635}, {"id": 1190, "seek": 298134, "start": 3001.34, "end": 3003.34, "text": " the learning rate enough", "tokens": [51365, 264, 2539, 3314, 1547, 51465], "temperature": 0.0, "avg_logprob": -0.06623825719279627, "compression_ratio": 1.8380566801619433, "no_speech_prob": 0.00015778384113218635}, {"id": 1191, "seek": 298134, "start": 3003.34, "end": 3005.34, "text": " we basically started to be kind of unstable here.", "tokens": [51465, 321, 1936, 1409, 281, 312, 733, 295, 23742, 510, 13, 51565], "temperature": 0.0, "avg_logprob": -0.06623825719279627, "compression_ratio": 1.8380566801619433, "no_speech_prob": 0.00015778384113218635}, {"id": 1192, "seek": 298134, "start": 3005.34, "end": 3007.34, "text": " So a good learning rate turns out", "tokens": [51565, 407, 257, 665, 2539, 3314, 4523, 484, 51665], "temperature": 0.0, "avg_logprob": -0.06623825719279627, "compression_ratio": 1.8380566801619433, "no_speech_prob": 0.00015778384113218635}, {"id": 1193, "seek": 298134, "start": 3007.34, "end": 3009.34, "text": " to be somewhere around here.", "tokens": [51665, 281, 312, 4079, 926, 510, 13, 51765], "temperature": 0.0, "avg_logprob": -0.06623825719279627, "compression_ratio": 1.8380566801619433, "no_speech_prob": 0.00015778384113218635}, {"id": 1194, "seek": 298134, "start": 3009.34, "end": 3011.34, "text": " And because", "tokens": [51765, 400, 570, 51865], "temperature": 0.0, "avg_logprob": -0.06623825719279627, "compression_ratio": 1.8380566801619433, "no_speech_prob": 0.00015778384113218635}, {"id": 1195, "seek": 301134, "start": 3011.34, "end": 3013.34, "text": " we have LRI here", "tokens": [50365, 321, 362, 441, 5577, 510, 50465], "temperature": 0.0, "avg_logprob": -0.08063670229320684, "compression_ratio": 1.830188679245283, "no_speech_prob": 0.00012761283142026514}, {"id": 1196, "seek": 301134, "start": 3013.34, "end": 3015.34, "text": " we actually", "tokens": [50465, 321, 767, 50565], "temperature": 0.0, "avg_logprob": -0.08063670229320684, "compression_ratio": 1.830188679245283, "no_speech_prob": 0.00012761283142026514}, {"id": 1197, "seek": 301134, "start": 3015.34, "end": 3017.34, "text": " may want to", "tokens": [50565, 815, 528, 281, 50665], "temperature": 0.0, "avg_logprob": -0.08063670229320684, "compression_ratio": 1.830188679245283, "no_speech_prob": 0.00012761283142026514}, {"id": 1198, "seek": 301134, "start": 3019.34, "end": 3021.34, "text": " do not LR", "tokens": [50765, 360, 406, 441, 49, 50865], "temperature": 0.0, "avg_logprob": -0.08063670229320684, "compression_ratio": 1.830188679245283, "no_speech_prob": 0.00012761283142026514}, {"id": 1199, "seek": 301134, "start": 3021.34, "end": 3023.34, "text": " not the learning rate but the exponent.", "tokens": [50865, 406, 264, 2539, 3314, 457, 264, 37871, 13, 50965], "temperature": 0.0, "avg_logprob": -0.08063670229320684, "compression_ratio": 1.830188679245283, "no_speech_prob": 0.00012761283142026514}, {"id": 1200, "seek": 301134, "start": 3023.34, "end": 3025.34, "text": " So that would be the LRE at i", "tokens": [50965, 407, 300, 576, 312, 264, 441, 3850, 412, 741, 51065], "temperature": 0.0, "avg_logprob": -0.08063670229320684, "compression_ratio": 1.830188679245283, "no_speech_prob": 0.00012761283142026514}, {"id": 1201, "seek": 301134, "start": 3025.34, "end": 3027.34, "text": " is maybe what we want to log.", "tokens": [51065, 307, 1310, 437, 321, 528, 281, 3565, 13, 51165], "temperature": 0.0, "avg_logprob": -0.08063670229320684, "compression_ratio": 1.830188679245283, "no_speech_prob": 0.00012761283142026514}, {"id": 1202, "seek": 301134, "start": 3027.34, "end": 3029.34, "text": " So let me reset this and redo that", "tokens": [51165, 407, 718, 385, 14322, 341, 293, 29956, 300, 51265], "temperature": 0.0, "avg_logprob": -0.08063670229320684, "compression_ratio": 1.830188679245283, "no_speech_prob": 0.00012761283142026514}, {"id": 1203, "seek": 301134, "start": 3029.34, "end": 3031.34, "text": " calculation. But now on the x-axis", "tokens": [51265, 17108, 13, 583, 586, 322, 264, 2031, 12, 24633, 51365], "temperature": 0.0, "avg_logprob": -0.08063670229320684, "compression_ratio": 1.830188679245283, "no_speech_prob": 0.00012761283142026514}, {"id": 1204, "seek": 301134, "start": 3031.34, "end": 3033.34, "text": " we have the", "tokens": [51365, 321, 362, 264, 51465], "temperature": 0.0, "avg_logprob": -0.08063670229320684, "compression_ratio": 1.830188679245283, "no_speech_prob": 0.00012761283142026514}, {"id": 1205, "seek": 301134, "start": 3033.34, "end": 3035.34, "text": " exponent of the learning rate.", "tokens": [51465, 37871, 295, 264, 2539, 3314, 13, 51565], "temperature": 0.0, "avg_logprob": -0.08063670229320684, "compression_ratio": 1.830188679245283, "no_speech_prob": 0.00012761283142026514}, {"id": 1206, "seek": 301134, "start": 3035.34, "end": 3037.34, "text": " And so we can see that the exponent", "tokens": [51565, 400, 370, 321, 393, 536, 300, 264, 37871, 51665], "temperature": 0.0, "avg_logprob": -0.08063670229320684, "compression_ratio": 1.830188679245283, "no_speech_prob": 0.00012761283142026514}, {"id": 1207, "seek": 301134, "start": 3037.34, "end": 3039.34, "text": " of the learning rate that is good to use", "tokens": [51665, 295, 264, 2539, 3314, 300, 307, 665, 281, 764, 51765], "temperature": 0.0, "avg_logprob": -0.08063670229320684, "compression_ratio": 1.830188679245283, "no_speech_prob": 0.00012761283142026514}, {"id": 1208, "seek": 301134, "start": 3039.34, "end": 3041.34, "text": " would be sort of like roughly in the value here", "tokens": [51765, 576, 312, 1333, 295, 411, 9810, 294, 264, 2158, 510, 51865], "temperature": 0.0, "avg_logprob": -0.08063670229320684, "compression_ratio": 1.830188679245283, "no_speech_prob": 0.00012761283142026514}, {"id": 1209, "seek": 304134, "start": 3041.34, "end": 3043.34, "text": " because here the learning rates are just way too low", "tokens": [50365, 570, 510, 264, 2539, 6846, 366, 445, 636, 886, 2295, 50465], "temperature": 0.0, "avg_logprob": -0.08498121897379557, "compression_ratio": 1.945736434108527, "no_speech_prob": 0.0001026260870276019}, {"id": 1210, "seek": 304134, "start": 3043.34, "end": 3045.34, "text": " and then here we expect", "tokens": [50465, 293, 550, 510, 321, 2066, 50565], "temperature": 0.0, "avg_logprob": -0.08498121897379557, "compression_ratio": 1.945736434108527, "no_speech_prob": 0.0001026260870276019}, {"id": 1211, "seek": 304134, "start": 3045.34, "end": 3047.34, "text": " relatively good learning rates somewhere here", "tokens": [50565, 7226, 665, 2539, 6846, 4079, 510, 50665], "temperature": 0.0, "avg_logprob": -0.08498121897379557, "compression_ratio": 1.945736434108527, "no_speech_prob": 0.0001026260870276019}, {"id": 1212, "seek": 304134, "start": 3047.34, "end": 3049.34, "text": " and then here things are starting to explode.", "tokens": [50665, 293, 550, 510, 721, 366, 2891, 281, 21411, 13, 50765], "temperature": 0.0, "avg_logprob": -0.08498121897379557, "compression_ratio": 1.945736434108527, "no_speech_prob": 0.0001026260870276019}, {"id": 1213, "seek": 304134, "start": 3049.34, "end": 3051.34, "text": " So somewhere around negative 1", "tokens": [50765, 407, 4079, 926, 3671, 502, 50865], "temperature": 0.0, "avg_logprob": -0.08498121897379557, "compression_ratio": 1.945736434108527, "no_speech_prob": 0.0001026260870276019}, {"id": 1214, "seek": 304134, "start": 3051.34, "end": 3053.34, "text": " as the exponent of the learning rate is a pretty good setting.", "tokens": [50865, 382, 264, 37871, 295, 264, 2539, 3314, 307, 257, 1238, 665, 3287, 13, 50965], "temperature": 0.0, "avg_logprob": -0.08498121897379557, "compression_ratio": 1.945736434108527, "no_speech_prob": 0.0001026260870276019}, {"id": 1215, "seek": 304134, "start": 3053.34, "end": 3055.34, "text": " And 10 to the", "tokens": [50965, 400, 1266, 281, 264, 51065], "temperature": 0.0, "avg_logprob": -0.08498121897379557, "compression_ratio": 1.945736434108527, "no_speech_prob": 0.0001026260870276019}, {"id": 1216, "seek": 304134, "start": 3055.34, "end": 3057.34, "text": " negative 1 is 0.1", "tokens": [51065, 3671, 502, 307, 1958, 13, 16, 51165], "temperature": 0.0, "avg_logprob": -0.08498121897379557, "compression_ratio": 1.945736434108527, "no_speech_prob": 0.0001026260870276019}, {"id": 1217, "seek": 304134, "start": 3057.34, "end": 3059.34, "text": " So 0.1 was actually", "tokens": [51165, 407, 1958, 13, 16, 390, 767, 51265], "temperature": 0.0, "avg_logprob": -0.08498121897379557, "compression_ratio": 1.945736434108527, "no_speech_prob": 0.0001026260870276019}, {"id": 1218, "seek": 304134, "start": 3059.34, "end": 3061.34, "text": " a fairly good learning rate around here.", "tokens": [51265, 257, 6457, 665, 2539, 3314, 926, 510, 13, 51365], "temperature": 0.0, "avg_logprob": -0.08498121897379557, "compression_ratio": 1.945736434108527, "no_speech_prob": 0.0001026260870276019}, {"id": 1219, "seek": 304134, "start": 3061.34, "end": 3063.34, "text": " And that's what we had", "tokens": [51365, 400, 300, 311, 437, 321, 632, 51465], "temperature": 0.0, "avg_logprob": -0.08498121897379557, "compression_ratio": 1.945736434108527, "no_speech_prob": 0.0001026260870276019}, {"id": 1220, "seek": 304134, "start": 3063.34, "end": 3065.34, "text": " in the initial setting", "tokens": [51465, 294, 264, 5883, 3287, 51565], "temperature": 0.0, "avg_logprob": -0.08498121897379557, "compression_ratio": 1.945736434108527, "no_speech_prob": 0.0001026260870276019}, {"id": 1221, "seek": 304134, "start": 3065.34, "end": 3067.34, "text": " but that's roughly how you would determine it.", "tokens": [51565, 457, 300, 311, 9810, 577, 291, 576, 6997, 309, 13, 51665], "temperature": 0.0, "avg_logprob": -0.08498121897379557, "compression_ratio": 1.945736434108527, "no_speech_prob": 0.0001026260870276019}, {"id": 1222, "seek": 304134, "start": 3067.34, "end": 3069.34, "text": " And so here now we can", "tokens": [51665, 400, 370, 510, 586, 321, 393, 51765], "temperature": 0.0, "avg_logprob": -0.08498121897379557, "compression_ratio": 1.945736434108527, "no_speech_prob": 0.0001026260870276019}, {"id": 1223, "seek": 304134, "start": 3069.34, "end": 3071.34, "text": " take out the tracking of these", "tokens": [51765, 747, 484, 264, 11603, 295, 613, 51865], "temperature": 0.0, "avg_logprob": -0.08498121897379557, "compression_ratio": 1.945736434108527, "no_speech_prob": 0.0001026260870276019}, {"id": 1224, "seek": 307134, "start": 3071.34, "end": 3073.34, "text": " and we can", "tokens": [50365, 293, 321, 393, 50465], "temperature": 0.0, "avg_logprob": -0.08529443359375, "compression_ratio": 1.68, "no_speech_prob": 7.173408812377602e-05}, {"id": 1225, "seek": 307134, "start": 3073.34, "end": 3075.34, "text": " just simply set LRE to be", "tokens": [50465, 445, 2935, 992, 441, 3850, 281, 312, 50565], "temperature": 0.0, "avg_logprob": -0.08529443359375, "compression_ratio": 1.68, "no_speech_prob": 7.173408812377602e-05}, {"id": 1226, "seek": 307134, "start": 3075.34, "end": 3077.34, "text": " 10 to the negative 1", "tokens": [50565, 1266, 281, 264, 3671, 502, 50665], "temperature": 0.0, "avg_logprob": -0.08529443359375, "compression_ratio": 1.68, "no_speech_prob": 7.173408812377602e-05}, {"id": 1227, "seek": 307134, "start": 3077.34, "end": 3079.34, "text": " or basically otherwise 0.1", "tokens": [50665, 420, 1936, 5911, 1958, 13, 16, 50765], "temperature": 0.0, "avg_logprob": -0.08529443359375, "compression_ratio": 1.68, "no_speech_prob": 7.173408812377602e-05}, {"id": 1228, "seek": 307134, "start": 3079.34, "end": 3081.34, "text": " as it was before.", "tokens": [50765, 382, 309, 390, 949, 13, 50865], "temperature": 0.0, "avg_logprob": -0.08529443359375, "compression_ratio": 1.68, "no_speech_prob": 7.173408812377602e-05}, {"id": 1229, "seek": 307134, "start": 3081.34, "end": 3083.34, "text": " And now we have some confidence that this is actually a fairly good", "tokens": [50865, 400, 586, 321, 362, 512, 6687, 300, 341, 307, 767, 257, 6457, 665, 50965], "temperature": 0.0, "avg_logprob": -0.08529443359375, "compression_ratio": 1.68, "no_speech_prob": 7.173408812377602e-05}, {"id": 1230, "seek": 307134, "start": 3083.34, "end": 3085.34, "text": " learning rate. And so now what we can do", "tokens": [50965, 2539, 3314, 13, 400, 370, 586, 437, 321, 393, 360, 51065], "temperature": 0.0, "avg_logprob": -0.08529443359375, "compression_ratio": 1.68, "no_speech_prob": 7.173408812377602e-05}, {"id": 1231, "seek": 307134, "start": 3085.34, "end": 3087.34, "text": " is we can crank up the iterations", "tokens": [51065, 307, 321, 393, 21263, 493, 264, 36540, 51165], "temperature": 0.0, "avg_logprob": -0.08529443359375, "compression_ratio": 1.68, "no_speech_prob": 7.173408812377602e-05}, {"id": 1232, "seek": 307134, "start": 3087.34, "end": 3089.34, "text": " we can reset our optimization", "tokens": [51165, 321, 393, 14322, 527, 19618, 51265], "temperature": 0.0, "avg_logprob": -0.08529443359375, "compression_ratio": 1.68, "no_speech_prob": 7.173408812377602e-05}, {"id": 1233, "seek": 307134, "start": 3089.34, "end": 3091.34, "text": " and", "tokens": [51265, 293, 51365], "temperature": 0.0, "avg_logprob": -0.08529443359375, "compression_ratio": 1.68, "no_speech_prob": 7.173408812377602e-05}, {"id": 1234, "seek": 307134, "start": 3091.34, "end": 3093.34, "text": " we can run for", "tokens": [51365, 321, 393, 1190, 337, 51465], "temperature": 0.0, "avg_logprob": -0.08529443359375, "compression_ratio": 1.68, "no_speech_prob": 7.173408812377602e-05}, {"id": 1235, "seek": 307134, "start": 3093.34, "end": 3095.34, "text": " a pretty long time using this learning rate", "tokens": [51465, 257, 1238, 938, 565, 1228, 341, 2539, 3314, 51565], "temperature": 0.0, "avg_logprob": -0.08529443359375, "compression_ratio": 1.68, "no_speech_prob": 7.173408812377602e-05}, {"id": 1236, "seek": 307134, "start": 3095.34, "end": 3097.34, "text": " oops", "tokens": [51565, 34166, 51665], "temperature": 0.0, "avg_logprob": -0.08529443359375, "compression_ratio": 1.68, "no_speech_prob": 7.173408812377602e-05}, {"id": 1237, "seek": 307134, "start": 3097.34, "end": 3099.34, "text": " and we don't want to print, it's way too much printing", "tokens": [51665, 293, 321, 500, 380, 528, 281, 4482, 11, 309, 311, 636, 886, 709, 14699, 51765], "temperature": 0.0, "avg_logprob": -0.08529443359375, "compression_ratio": 1.68, "no_speech_prob": 7.173408812377602e-05}, {"id": 1238, "seek": 307134, "start": 3099.34, "end": 3101.34, "text": " so let me again reset", "tokens": [51765, 370, 718, 385, 797, 14322, 51865], "temperature": 0.0, "avg_logprob": -0.08529443359375, "compression_ratio": 1.68, "no_speech_prob": 7.173408812377602e-05}, {"id": 1239, "seek": 310134, "start": 3101.34, "end": 3103.34, "text": " and run 10,000 steps.", "tokens": [50365, 293, 1190, 1266, 11, 1360, 4439, 13, 50465], "temperature": 0.0, "avg_logprob": -0.1008155086252949, "compression_ratio": 1.633879781420765, "no_speech_prob": 0.0001171815674751997}, {"id": 1240, "seek": 310134, "start": 3107.34, "end": 3109.34, "text": " Okay so we're at", "tokens": [50665, 1033, 370, 321, 434, 412, 50765], "temperature": 0.0, "avg_logprob": -0.1008155086252949, "compression_ratio": 1.633879781420765, "no_speech_prob": 0.0001171815674751997}, {"id": 1241, "seek": 310134, "start": 3109.34, "end": 3111.34, "text": " 2.48 roughly.", "tokens": [50765, 568, 13, 13318, 9810, 13, 50865], "temperature": 0.0, "avg_logprob": -0.1008155086252949, "compression_ratio": 1.633879781420765, "no_speech_prob": 0.0001171815674751997}, {"id": 1242, "seek": 310134, "start": 3111.34, "end": 3113.34, "text": " Let's run another 10,000 steps.", "tokens": [50865, 961, 311, 1190, 1071, 1266, 11, 1360, 4439, 13, 50965], "temperature": 0.0, "avg_logprob": -0.1008155086252949, "compression_ratio": 1.633879781420765, "no_speech_prob": 0.0001171815674751997}, {"id": 1243, "seek": 310134, "start": 3117.34, "end": 3119.34, "text": " 2.46", "tokens": [51165, 568, 13, 16169, 51265], "temperature": 0.0, "avg_logprob": -0.1008155086252949, "compression_ratio": 1.633879781420765, "no_speech_prob": 0.0001171815674751997}, {"id": 1244, "seek": 310134, "start": 3119.34, "end": 3121.34, "text": " And now let's do", "tokens": [51265, 400, 586, 718, 311, 360, 51365], "temperature": 0.0, "avg_logprob": -0.1008155086252949, "compression_ratio": 1.633879781420765, "no_speech_prob": 0.0001171815674751997}, {"id": 1245, "seek": 310134, "start": 3121.34, "end": 3123.34, "text": " one learning rate decay. What this means is", "tokens": [51365, 472, 2539, 3314, 21039, 13, 708, 341, 1355, 307, 51465], "temperature": 0.0, "avg_logprob": -0.1008155086252949, "compression_ratio": 1.633879781420765, "no_speech_prob": 0.0001171815674751997}, {"id": 1246, "seek": 310134, "start": 3123.34, "end": 3125.34, "text": " we're going to take our learning rate and we're going to", "tokens": [51465, 321, 434, 516, 281, 747, 527, 2539, 3314, 293, 321, 434, 516, 281, 51565], "temperature": 0.0, "avg_logprob": -0.1008155086252949, "compression_ratio": 1.633879781420765, "no_speech_prob": 0.0001171815674751997}, {"id": 1247, "seek": 310134, "start": 3125.34, "end": 3127.34, "text": " 10x lower it. And so", "tokens": [51565, 1266, 87, 3126, 309, 13, 400, 370, 51665], "temperature": 0.0, "avg_logprob": -0.1008155086252949, "compression_ratio": 1.633879781420765, "no_speech_prob": 0.0001171815674751997}, {"id": 1248, "seek": 310134, "start": 3127.34, "end": 3129.34, "text": " we're at the late stages of training potentially", "tokens": [51665, 321, 434, 412, 264, 3469, 10232, 295, 3097, 7263, 51765], "temperature": 0.0, "avg_logprob": -0.1008155086252949, "compression_ratio": 1.633879781420765, "no_speech_prob": 0.0001171815674751997}, {"id": 1249, "seek": 310134, "start": 3129.34, "end": 3131.34, "text": " and we may want to go", "tokens": [51765, 293, 321, 815, 528, 281, 352, 51865], "temperature": 0.0, "avg_logprob": -0.1008155086252949, "compression_ratio": 1.633879781420765, "no_speech_prob": 0.0001171815674751997}, {"id": 1250, "seek": 313134, "start": 3131.34, "end": 3133.34, "text": " a little bit slower. Let's do one more actually", "tokens": [50365, 257, 707, 857, 14009, 13, 961, 311, 360, 472, 544, 767, 50465], "temperature": 0.0, "avg_logprob": -0.06617669625715776, "compression_ratio": 1.6564885496183206, "no_speech_prob": 0.00017287999799009413}, {"id": 1251, "seek": 313134, "start": 3133.34, "end": 3135.34, "text": " at 0.1 just to see if", "tokens": [50465, 412, 1958, 13, 16, 445, 281, 536, 498, 50565], "temperature": 0.0, "avg_logprob": -0.06617669625715776, "compression_ratio": 1.6564885496183206, "no_speech_prob": 0.00017287999799009413}, {"id": 1252, "seek": 313134, "start": 3137.34, "end": 3139.34, "text": " we're making a dent here.", "tokens": [50665, 321, 434, 1455, 257, 7059, 510, 13, 50765], "temperature": 0.0, "avg_logprob": -0.06617669625715776, "compression_ratio": 1.6564885496183206, "no_speech_prob": 0.00017287999799009413}, {"id": 1253, "seek": 313134, "start": 3139.34, "end": 3141.34, "text": " Okay we're still making a dent. And by the way the", "tokens": [50765, 1033, 321, 434, 920, 1455, 257, 7059, 13, 400, 538, 264, 636, 264, 50865], "temperature": 0.0, "avg_logprob": -0.06617669625715776, "compression_ratio": 1.6564885496183206, "no_speech_prob": 0.00017287999799009413}, {"id": 1254, "seek": 313134, "start": 3141.34, "end": 3143.34, "text": " bigram loss that we", "tokens": [50865, 955, 2356, 4470, 300, 321, 50965], "temperature": 0.0, "avg_logprob": -0.06617669625715776, "compression_ratio": 1.6564885496183206, "no_speech_prob": 0.00017287999799009413}, {"id": 1255, "seek": 313134, "start": 3143.34, "end": 3145.34, "text": " achieved last video was 2.45", "tokens": [50965, 11042, 1036, 960, 390, 568, 13, 8465, 51065], "temperature": 0.0, "avg_logprob": -0.06617669625715776, "compression_ratio": 1.6564885496183206, "no_speech_prob": 0.00017287999799009413}, {"id": 1256, "seek": 313134, "start": 3145.34, "end": 3147.34, "text": " so we've already surpassed", "tokens": [51065, 370, 321, 600, 1217, 27650, 292, 51165], "temperature": 0.0, "avg_logprob": -0.06617669625715776, "compression_ratio": 1.6564885496183206, "no_speech_prob": 0.00017287999799009413}, {"id": 1257, "seek": 313134, "start": 3147.34, "end": 3149.34, "text": " the bigram model.", "tokens": [51165, 264, 955, 2356, 2316, 13, 51265], "temperature": 0.0, "avg_logprob": -0.06617669625715776, "compression_ratio": 1.6564885496183206, "no_speech_prob": 0.00017287999799009413}, {"id": 1258, "seek": 313134, "start": 3149.34, "end": 3151.34, "text": " And once I get a sense that this is actually kind of starting", "tokens": [51265, 400, 1564, 286, 483, 257, 2020, 300, 341, 307, 767, 733, 295, 2891, 51365], "temperature": 0.0, "avg_logprob": -0.06617669625715776, "compression_ratio": 1.6564885496183206, "no_speech_prob": 0.00017287999799009413}, {"id": 1259, "seek": 313134, "start": 3151.34, "end": 3153.34, "text": " to plateau off, people like to do", "tokens": [51365, 281, 39885, 766, 11, 561, 411, 281, 360, 51465], "temperature": 0.0, "avg_logprob": -0.06617669625715776, "compression_ratio": 1.6564885496183206, "no_speech_prob": 0.00017287999799009413}, {"id": 1260, "seek": 313134, "start": 3153.34, "end": 3155.34, "text": " as I mentioned this learning rate decay.", "tokens": [51465, 382, 286, 2835, 341, 2539, 3314, 21039, 13, 51565], "temperature": 0.0, "avg_logprob": -0.06617669625715776, "compression_ratio": 1.6564885496183206, "no_speech_prob": 0.00017287999799009413}, {"id": 1261, "seek": 313134, "start": 3155.34, "end": 3157.34, "text": " So let's try to decay the loss", "tokens": [51565, 407, 718, 311, 853, 281, 21039, 264, 4470, 51665], "temperature": 0.0, "avg_logprob": -0.06617669625715776, "compression_ratio": 1.6564885496183206, "no_speech_prob": 0.00017287999799009413}, {"id": 1262, "seek": 313134, "start": 3157.34, "end": 3159.34, "text": " the learning rate I mean.", "tokens": [51665, 264, 2539, 3314, 286, 914, 13, 51765], "temperature": 0.0, "avg_logprob": -0.06617669625715776, "compression_ratio": 1.6564885496183206, "no_speech_prob": 0.00017287999799009413}, {"id": 1263, "seek": 316134, "start": 3161.34, "end": 3163.34, "text": " And we achieve", "tokens": [50365, 400, 321, 4584, 50465], "temperature": 0.0, "avg_logprob": -0.05369850405219461, "compression_ratio": 1.7623762376237624, "no_speech_prob": 7.800783350830898e-05}, {"id": 1264, "seek": 316134, "start": 3163.34, "end": 3165.34, "text": " it about 2.3 now.", "tokens": [50465, 309, 466, 568, 13, 18, 586, 13, 50565], "temperature": 0.0, "avg_logprob": -0.05369850405219461, "compression_ratio": 1.7623762376237624, "no_speech_prob": 7.800783350830898e-05}, {"id": 1265, "seek": 316134, "start": 3165.34, "end": 3167.34, "text": " Obviously this is janky", "tokens": [50565, 7580, 341, 307, 361, 657, 88, 50665], "temperature": 0.0, "avg_logprob": -0.05369850405219461, "compression_ratio": 1.7623762376237624, "no_speech_prob": 7.800783350830898e-05}, {"id": 1266, "seek": 316134, "start": 3167.34, "end": 3169.34, "text": " and not exactly how you would train it in", "tokens": [50665, 293, 406, 2293, 577, 291, 576, 3847, 309, 294, 50765], "temperature": 0.0, "avg_logprob": -0.05369850405219461, "compression_ratio": 1.7623762376237624, "no_speech_prob": 7.800783350830898e-05}, {"id": 1267, "seek": 316134, "start": 3169.34, "end": 3171.34, "text": " production but this is roughly what you're going", "tokens": [50765, 4265, 457, 341, 307, 9810, 437, 291, 434, 516, 50865], "temperature": 0.0, "avg_logprob": -0.05369850405219461, "compression_ratio": 1.7623762376237624, "no_speech_prob": 7.800783350830898e-05}, {"id": 1268, "seek": 316134, "start": 3171.34, "end": 3173.34, "text": " through. You first find a decent learning", "tokens": [50865, 807, 13, 509, 700, 915, 257, 8681, 2539, 50965], "temperature": 0.0, "avg_logprob": -0.05369850405219461, "compression_ratio": 1.7623762376237624, "no_speech_prob": 7.800783350830898e-05}, {"id": 1269, "seek": 316134, "start": 3173.34, "end": 3175.34, "text": " rate using the approach that I showed you.", "tokens": [50965, 3314, 1228, 264, 3109, 300, 286, 4712, 291, 13, 51065], "temperature": 0.0, "avg_logprob": -0.05369850405219461, "compression_ratio": 1.7623762376237624, "no_speech_prob": 7.800783350830898e-05}, {"id": 1270, "seek": 316134, "start": 3175.34, "end": 3177.34, "text": " Then you start with that learning rate", "tokens": [51065, 1396, 291, 722, 365, 300, 2539, 3314, 51165], "temperature": 0.0, "avg_logprob": -0.05369850405219461, "compression_ratio": 1.7623762376237624, "no_speech_prob": 7.800783350830898e-05}, {"id": 1271, "seek": 316134, "start": 3177.34, "end": 3179.34, "text": " and you train for a while. And then at", "tokens": [51165, 293, 291, 3847, 337, 257, 1339, 13, 400, 550, 412, 51265], "temperature": 0.0, "avg_logprob": -0.05369850405219461, "compression_ratio": 1.7623762376237624, "no_speech_prob": 7.800783350830898e-05}, {"id": 1272, "seek": 316134, "start": 3179.34, "end": 3181.34, "text": " the end people like to do a learning rate decay", "tokens": [51265, 264, 917, 561, 411, 281, 360, 257, 2539, 3314, 21039, 51365], "temperature": 0.0, "avg_logprob": -0.05369850405219461, "compression_ratio": 1.7623762376237624, "no_speech_prob": 7.800783350830898e-05}, {"id": 1273, "seek": 316134, "start": 3181.34, "end": 3183.34, "text": " where you decay the learning rate by say a factor", "tokens": [51365, 689, 291, 21039, 264, 2539, 3314, 538, 584, 257, 5952, 51465], "temperature": 0.0, "avg_logprob": -0.05369850405219461, "compression_ratio": 1.7623762376237624, "no_speech_prob": 7.800783350830898e-05}, {"id": 1274, "seek": 316134, "start": 3183.34, "end": 3185.34, "text": " of 10 and you do a few more steps", "tokens": [51465, 295, 1266, 293, 291, 360, 257, 1326, 544, 4439, 51565], "temperature": 0.0, "avg_logprob": -0.05369850405219461, "compression_ratio": 1.7623762376237624, "no_speech_prob": 7.800783350830898e-05}, {"id": 1275, "seek": 316134, "start": 3185.34, "end": 3187.34, "text": " and then you get a trained network", "tokens": [51565, 293, 550, 291, 483, 257, 8895, 3209, 51665], "temperature": 0.0, "avg_logprob": -0.05369850405219461, "compression_ratio": 1.7623762376237624, "no_speech_prob": 7.800783350830898e-05}, {"id": 1276, "seek": 316134, "start": 3187.34, "end": 3189.34, "text": " roughly speaking. So we've achieved", "tokens": [51665, 9810, 4124, 13, 407, 321, 600, 11042, 51765], "temperature": 0.0, "avg_logprob": -0.05369850405219461, "compression_ratio": 1.7623762376237624, "no_speech_prob": 7.800783350830898e-05}, {"id": 1277, "seek": 316134, "start": 3189.34, "end": 3191.34, "text": " 2.3 and dramatically", "tokens": [51765, 568, 13, 18, 293, 17548, 51865], "temperature": 0.0, "avg_logprob": -0.05369850405219461, "compression_ratio": 1.7623762376237624, "no_speech_prob": 7.800783350830898e-05}, {"id": 1278, "seek": 319134, "start": 3191.34, "end": 3193.34, "text": " improved on the bigram language model", "tokens": [50365, 9689, 322, 264, 955, 2356, 2856, 2316, 50465], "temperature": 0.0, "avg_logprob": -0.047505256652832034, "compression_ratio": 1.6893939393939394, "no_speech_prob": 9.44511775742285e-05}, {"id": 1279, "seek": 319134, "start": 3193.34, "end": 3195.34, "text": " using this simple neural net", "tokens": [50465, 1228, 341, 2199, 18161, 2533, 50565], "temperature": 0.0, "avg_logprob": -0.047505256652832034, "compression_ratio": 1.6893939393939394, "no_speech_prob": 9.44511775742285e-05}, {"id": 1280, "seek": 319134, "start": 3195.34, "end": 3197.34, "text": " as described here.", "tokens": [50565, 382, 7619, 510, 13, 50665], "temperature": 0.0, "avg_logprob": -0.047505256652832034, "compression_ratio": 1.6893939393939394, "no_speech_prob": 9.44511775742285e-05}, {"id": 1281, "seek": 319134, "start": 3197.34, "end": 3199.34, "text": " Using these 3400 parameters.", "tokens": [50665, 11142, 613, 12790, 628, 9834, 13, 50765], "temperature": 0.0, "avg_logprob": -0.047505256652832034, "compression_ratio": 1.6893939393939394, "no_speech_prob": 9.44511775742285e-05}, {"id": 1282, "seek": 319134, "start": 3199.34, "end": 3201.34, "text": " Now there's something we have to be careful with.", "tokens": [50765, 823, 456, 311, 746, 321, 362, 281, 312, 5026, 365, 13, 50865], "temperature": 0.0, "avg_logprob": -0.047505256652832034, "compression_ratio": 1.6893939393939394, "no_speech_prob": 9.44511775742285e-05}, {"id": 1283, "seek": 319134, "start": 3201.34, "end": 3203.34, "text": " I said that we have", "tokens": [50865, 286, 848, 300, 321, 362, 50965], "temperature": 0.0, "avg_logprob": -0.047505256652832034, "compression_ratio": 1.6893939393939394, "no_speech_prob": 9.44511775742285e-05}, {"id": 1284, "seek": 319134, "start": 3203.34, "end": 3205.34, "text": " a better model because we are achieving", "tokens": [50965, 257, 1101, 2316, 570, 321, 366, 19626, 51065], "temperature": 0.0, "avg_logprob": -0.047505256652832034, "compression_ratio": 1.6893939393939394, "no_speech_prob": 9.44511775742285e-05}, {"id": 1285, "seek": 319134, "start": 3205.34, "end": 3207.34, "text": " a lower loss. 2.3", "tokens": [51065, 257, 3126, 4470, 13, 568, 13, 18, 51165], "temperature": 0.0, "avg_logprob": -0.047505256652832034, "compression_ratio": 1.6893939393939394, "no_speech_prob": 9.44511775742285e-05}, {"id": 1286, "seek": 319134, "start": 3207.34, "end": 3209.34, "text": " much lower than 2.45 with the bigram", "tokens": [51165, 709, 3126, 813, 568, 13, 8465, 365, 264, 955, 2356, 51265], "temperature": 0.0, "avg_logprob": -0.047505256652832034, "compression_ratio": 1.6893939393939394, "no_speech_prob": 9.44511775742285e-05}, {"id": 1287, "seek": 319134, "start": 3209.34, "end": 3211.34, "text": " model previously. Now that's not", "tokens": [51265, 2316, 8046, 13, 823, 300, 311, 406, 51365], "temperature": 0.0, "avg_logprob": -0.047505256652832034, "compression_ratio": 1.6893939393939394, "no_speech_prob": 9.44511775742285e-05}, {"id": 1288, "seek": 319134, "start": 3211.34, "end": 3213.34, "text": " exactly true. And the reason that's not", "tokens": [51365, 2293, 2074, 13, 400, 264, 1778, 300, 311, 406, 51465], "temperature": 0.0, "avg_logprob": -0.047505256652832034, "compression_ratio": 1.6893939393939394, "no_speech_prob": 9.44511775742285e-05}, {"id": 1289, "seek": 319134, "start": 3213.34, "end": 3215.34, "text": " true is that", "tokens": [51465, 2074, 307, 300, 51565], "temperature": 0.0, "avg_logprob": -0.047505256652832034, "compression_ratio": 1.6893939393939394, "no_speech_prob": 9.44511775742285e-05}, {"id": 1290, "seek": 319134, "start": 3217.34, "end": 3219.34, "text": " this is actually a fairly small model", "tokens": [51665, 341, 307, 767, 257, 6457, 1359, 2316, 51765], "temperature": 0.0, "avg_logprob": -0.047505256652832034, "compression_ratio": 1.6893939393939394, "no_speech_prob": 9.44511775742285e-05}, {"id": 1291, "seek": 319134, "start": 3219.34, "end": 3221.34, "text": " but these models can get larger and larger", "tokens": [51765, 457, 613, 5245, 393, 483, 4833, 293, 4833, 51865], "temperature": 0.0, "avg_logprob": -0.047505256652832034, "compression_ratio": 1.6893939393939394, "no_speech_prob": 9.44511775742285e-05}, {"id": 1292, "seek": 322134, "start": 3221.34, "end": 3223.34, "text": " if you keep adding neurons and parameters.", "tokens": [50365, 498, 291, 1066, 5127, 22027, 293, 9834, 13, 50465], "temperature": 0.0, "avg_logprob": -0.08819836455506164, "compression_ratio": 1.875, "no_speech_prob": 0.000722611672244966}, {"id": 1293, "seek": 322134, "start": 3223.34, "end": 3225.34, "text": " So you can imagine that we don't", "tokens": [50465, 407, 291, 393, 3811, 300, 321, 500, 380, 50565], "temperature": 0.0, "avg_logprob": -0.08819836455506164, "compression_ratio": 1.875, "no_speech_prob": 0.000722611672244966}, {"id": 1294, "seek": 322134, "start": 3225.34, "end": 3227.34, "text": " potentially have a thousand parameters. We could have", "tokens": [50565, 7263, 362, 257, 4714, 9834, 13, 492, 727, 362, 50665], "temperature": 0.0, "avg_logprob": -0.08819836455506164, "compression_ratio": 1.875, "no_speech_prob": 0.000722611672244966}, {"id": 1295, "seek": 322134, "start": 3227.34, "end": 3229.34, "text": " 10,000 or 100,000 or millions of parameters.", "tokens": [50665, 1266, 11, 1360, 420, 2319, 11, 1360, 420, 6803, 295, 9834, 13, 50765], "temperature": 0.0, "avg_logprob": -0.08819836455506164, "compression_ratio": 1.875, "no_speech_prob": 0.000722611672244966}, {"id": 1296, "seek": 322134, "start": 3229.34, "end": 3231.34, "text": " And as the capacity of the neural", "tokens": [50765, 400, 382, 264, 6042, 295, 264, 18161, 50865], "temperature": 0.0, "avg_logprob": -0.08819836455506164, "compression_ratio": 1.875, "no_speech_prob": 0.000722611672244966}, {"id": 1297, "seek": 322134, "start": 3231.34, "end": 3233.34, "text": " network grows, it", "tokens": [50865, 3209, 13156, 11, 309, 50965], "temperature": 0.0, "avg_logprob": -0.08819836455506164, "compression_ratio": 1.875, "no_speech_prob": 0.000722611672244966}, {"id": 1298, "seek": 322134, "start": 3233.34, "end": 3235.34, "text": " becomes more and more capable of", "tokens": [50965, 3643, 544, 293, 544, 8189, 295, 51065], "temperature": 0.0, "avg_logprob": -0.08819836455506164, "compression_ratio": 1.875, "no_speech_prob": 0.000722611672244966}, {"id": 1299, "seek": 322134, "start": 3235.34, "end": 3237.34, "text": " overfitting your training set.", "tokens": [51065, 670, 69, 2414, 428, 3097, 992, 13, 51165], "temperature": 0.0, "avg_logprob": -0.08819836455506164, "compression_ratio": 1.875, "no_speech_prob": 0.000722611672244966}, {"id": 1300, "seek": 322134, "start": 3237.34, "end": 3239.34, "text": " What that means is that the loss on the", "tokens": [51165, 708, 300, 1355, 307, 300, 264, 4470, 322, 264, 51265], "temperature": 0.0, "avg_logprob": -0.08819836455506164, "compression_ratio": 1.875, "no_speech_prob": 0.000722611672244966}, {"id": 1301, "seek": 322134, "start": 3239.34, "end": 3241.34, "text": " training set, on the data that you're training", "tokens": [51265, 3097, 992, 11, 322, 264, 1412, 300, 291, 434, 3097, 51365], "temperature": 0.0, "avg_logprob": -0.08819836455506164, "compression_ratio": 1.875, "no_speech_prob": 0.000722611672244966}, {"id": 1302, "seek": 322134, "start": 3241.34, "end": 3243.34, "text": " on, will become very very low.", "tokens": [51365, 322, 11, 486, 1813, 588, 588, 2295, 13, 51465], "temperature": 0.0, "avg_logprob": -0.08819836455506164, "compression_ratio": 1.875, "no_speech_prob": 0.000722611672244966}, {"id": 1303, "seek": 322134, "start": 3243.34, "end": 3245.34, "text": " As low as zero.", "tokens": [51465, 1018, 2295, 382, 4018, 13, 51565], "temperature": 0.0, "avg_logprob": -0.08819836455506164, "compression_ratio": 1.875, "no_speech_prob": 0.000722611672244966}, {"id": 1304, "seek": 322134, "start": 3245.34, "end": 3247.34, "text": " But all that the model is doing is memorizing", "tokens": [51565, 583, 439, 300, 264, 2316, 307, 884, 307, 10560, 3319, 51665], "temperature": 0.0, "avg_logprob": -0.08819836455506164, "compression_ratio": 1.875, "no_speech_prob": 0.000722611672244966}, {"id": 1305, "seek": 322134, "start": 3247.34, "end": 3249.34, "text": " your training set verbatim.", "tokens": [51665, 428, 3097, 992, 9595, 267, 332, 13, 51765], "temperature": 0.0, "avg_logprob": -0.08819836455506164, "compression_ratio": 1.875, "no_speech_prob": 0.000722611672244966}, {"id": 1306, "seek": 322134, "start": 3249.34, "end": 3251.34, "text": " So if you take that model and it looks like it's working", "tokens": [51765, 407, 498, 291, 747, 300, 2316, 293, 309, 1542, 411, 309, 311, 1364, 51865], "temperature": 0.0, "avg_logprob": -0.08819836455506164, "compression_ratio": 1.875, "no_speech_prob": 0.000722611672244966}, {"id": 1307, "seek": 325134, "start": 3251.34, "end": 3253.34, "text": " well, but you try to sample from it,", "tokens": [50365, 731, 11, 457, 291, 853, 281, 6889, 490, 309, 11, 50465], "temperature": 0.0, "avg_logprob": -0.05851984339834049, "compression_ratio": 1.8020833333333333, "no_speech_prob": 0.00027718223282136023}, {"id": 1308, "seek": 325134, "start": 3253.34, "end": 3255.34, "text": " you will basically only get examples", "tokens": [50465, 291, 486, 1936, 787, 483, 5110, 50565], "temperature": 0.0, "avg_logprob": -0.05851984339834049, "compression_ratio": 1.8020833333333333, "no_speech_prob": 0.00027718223282136023}, {"id": 1309, "seek": 325134, "start": 3255.34, "end": 3257.34, "text": " exactly as they are in the training set.", "tokens": [50565, 2293, 382, 436, 366, 294, 264, 3097, 992, 13, 50665], "temperature": 0.0, "avg_logprob": -0.05851984339834049, "compression_ratio": 1.8020833333333333, "no_speech_prob": 0.00027718223282136023}, {"id": 1310, "seek": 325134, "start": 3257.34, "end": 3259.34, "text": " You won't get any new data.", "tokens": [50665, 509, 1582, 380, 483, 604, 777, 1412, 13, 50765], "temperature": 0.0, "avg_logprob": -0.05851984339834049, "compression_ratio": 1.8020833333333333, "no_speech_prob": 0.00027718223282136023}, {"id": 1311, "seek": 325134, "start": 3259.34, "end": 3261.34, "text": " In addition to that, if you try to evaluate the", "tokens": [50765, 682, 4500, 281, 300, 11, 498, 291, 853, 281, 13059, 264, 50865], "temperature": 0.0, "avg_logprob": -0.05851984339834049, "compression_ratio": 1.8020833333333333, "no_speech_prob": 0.00027718223282136023}, {"id": 1312, "seek": 325134, "start": 3261.34, "end": 3263.34, "text": " loss on some withheld names", "tokens": [50865, 4470, 322, 512, 365, 23504, 5288, 50965], "temperature": 0.0, "avg_logprob": -0.05851984339834049, "compression_ratio": 1.8020833333333333, "no_speech_prob": 0.00027718223282136023}, {"id": 1313, "seek": 325134, "start": 3263.34, "end": 3265.34, "text": " or other words, you will", "tokens": [50965, 420, 661, 2283, 11, 291, 486, 51065], "temperature": 0.0, "avg_logprob": -0.05851984339834049, "compression_ratio": 1.8020833333333333, "no_speech_prob": 0.00027718223282136023}, {"id": 1314, "seek": 325134, "start": 3265.34, "end": 3267.34, "text": " actually see that the loss on those", "tokens": [51065, 767, 536, 300, 264, 4470, 322, 729, 51165], "temperature": 0.0, "avg_logprob": -0.05851984339834049, "compression_ratio": 1.8020833333333333, "no_speech_prob": 0.00027718223282136023}, {"id": 1315, "seek": 325134, "start": 3267.34, "end": 3269.34, "text": " can be very high. And so basically", "tokens": [51165, 393, 312, 588, 1090, 13, 400, 370, 1936, 51265], "temperature": 0.0, "avg_logprob": -0.05851984339834049, "compression_ratio": 1.8020833333333333, "no_speech_prob": 0.00027718223282136023}, {"id": 1316, "seek": 325134, "start": 3269.34, "end": 3271.34, "text": " it's not a good model.", "tokens": [51265, 309, 311, 406, 257, 665, 2316, 13, 51365], "temperature": 0.0, "avg_logprob": -0.05851984339834049, "compression_ratio": 1.8020833333333333, "no_speech_prob": 0.00027718223282136023}, {"id": 1317, "seek": 325134, "start": 3271.34, "end": 3273.34, "text": " So the standard in the field is to split up", "tokens": [51365, 407, 264, 3832, 294, 264, 2519, 307, 281, 7472, 493, 51465], "temperature": 0.0, "avg_logprob": -0.05851984339834049, "compression_ratio": 1.8020833333333333, "no_speech_prob": 0.00027718223282136023}, {"id": 1318, "seek": 325134, "start": 3273.34, "end": 3275.34, "text": " your data set into three splits,", "tokens": [51465, 428, 1412, 992, 666, 1045, 37741, 11, 51565], "temperature": 0.0, "avg_logprob": -0.05851984339834049, "compression_ratio": 1.8020833333333333, "no_speech_prob": 0.00027718223282136023}, {"id": 1319, "seek": 325134, "start": 3275.34, "end": 3277.34, "text": " as we call them. We have the training split,", "tokens": [51565, 382, 321, 818, 552, 13, 492, 362, 264, 3097, 7472, 11, 51665], "temperature": 0.0, "avg_logprob": -0.05851984339834049, "compression_ratio": 1.8020833333333333, "no_speech_prob": 0.00027718223282136023}, {"id": 1320, "seek": 325134, "start": 3277.34, "end": 3279.34, "text": " the def split, or the validation", "tokens": [51665, 264, 1060, 7472, 11, 420, 264, 24071, 51765], "temperature": 0.0, "avg_logprob": -0.05851984339834049, "compression_ratio": 1.8020833333333333, "no_speech_prob": 0.00027718223282136023}, {"id": 1321, "seek": 325134, "start": 3279.34, "end": 3281.34, "text": " split, and the test split.", "tokens": [51765, 7472, 11, 293, 264, 1500, 7472, 13, 51865], "temperature": 0.0, "avg_logprob": -0.05851984339834049, "compression_ratio": 1.8020833333333333, "no_speech_prob": 0.00027718223282136023}, {"id": 1322, "seek": 328134, "start": 3281.34, "end": 3283.34, "text": " So,", "tokens": [50365, 407, 11, 50465], "temperature": 0.0, "avg_logprob": -0.10747870057821274, "compression_ratio": 1.6982758620689655, "no_speech_prob": 4.636523954104632e-05}, {"id": 1323, "seek": 328134, "start": 3283.34, "end": 3285.34, "text": " training split,", "tokens": [50465, 3097, 7472, 11, 50565], "temperature": 0.0, "avg_logprob": -0.10747870057821274, "compression_ratio": 1.6982758620689655, "no_speech_prob": 4.636523954104632e-05}, {"id": 1324, "seek": 328134, "start": 3285.34, "end": 3287.34, "text": " test or, sorry,", "tokens": [50565, 1500, 420, 11, 2597, 11, 50665], "temperature": 0.0, "avg_logprob": -0.10747870057821274, "compression_ratio": 1.6982758620689655, "no_speech_prob": 4.636523954104632e-05}, {"id": 1325, "seek": 328134, "start": 3287.34, "end": 3289.34, "text": " def or validation split,", "tokens": [50665, 1060, 420, 24071, 7472, 11, 50765], "temperature": 0.0, "avg_logprob": -0.10747870057821274, "compression_ratio": 1.6982758620689655, "no_speech_prob": 4.636523954104632e-05}, {"id": 1326, "seek": 328134, "start": 3289.34, "end": 3291.34, "text": " and test split.", "tokens": [50765, 293, 1500, 7472, 13, 50865], "temperature": 0.0, "avg_logprob": -0.10747870057821274, "compression_ratio": 1.6982758620689655, "no_speech_prob": 4.636523954104632e-05}, {"id": 1327, "seek": 328134, "start": 3291.34, "end": 3293.34, "text": " And typically, this would be", "tokens": [50865, 400, 5850, 11, 341, 576, 312, 50965], "temperature": 0.0, "avg_logprob": -0.10747870057821274, "compression_ratio": 1.6982758620689655, "no_speech_prob": 4.636523954104632e-05}, {"id": 1328, "seek": 328134, "start": 3293.34, "end": 3295.34, "text": " say 80% of your data set, this could be", "tokens": [50965, 584, 4688, 4, 295, 428, 1412, 992, 11, 341, 727, 312, 51065], "temperature": 0.0, "avg_logprob": -0.10747870057821274, "compression_ratio": 1.6982758620689655, "no_speech_prob": 4.636523954104632e-05}, {"id": 1329, "seek": 328134, "start": 3295.34, "end": 3297.34, "text": " 10%, and this 10% roughly.", "tokens": [51065, 1266, 8923, 293, 341, 1266, 4, 9810, 13, 51165], "temperature": 0.0, "avg_logprob": -0.10747870057821274, "compression_ratio": 1.6982758620689655, "no_speech_prob": 4.636523954104632e-05}, {"id": 1330, "seek": 328134, "start": 3297.34, "end": 3299.34, "text": " So you have these three splits", "tokens": [51165, 407, 291, 362, 613, 1045, 37741, 51265], "temperature": 0.0, "avg_logprob": -0.10747870057821274, "compression_ratio": 1.6982758620689655, "no_speech_prob": 4.636523954104632e-05}, {"id": 1331, "seek": 328134, "start": 3299.34, "end": 3301.34, "text": " of the data.", "tokens": [51265, 295, 264, 1412, 13, 51365], "temperature": 0.0, "avg_logprob": -0.10747870057821274, "compression_ratio": 1.6982758620689655, "no_speech_prob": 4.636523954104632e-05}, {"id": 1332, "seek": 328134, "start": 3301.34, "end": 3303.34, "text": " Now, these 80% of your training", "tokens": [51365, 823, 11, 613, 4688, 4, 295, 428, 3097, 51465], "temperature": 0.0, "avg_logprob": -0.10747870057821274, "compression_ratio": 1.6982758620689655, "no_speech_prob": 4.636523954104632e-05}, {"id": 1333, "seek": 328134, "start": 3303.34, "end": 3305.34, "text": " of the data set, the training set,", "tokens": [51465, 295, 264, 1412, 992, 11, 264, 3097, 992, 11, 51565], "temperature": 0.0, "avg_logprob": -0.10747870057821274, "compression_ratio": 1.6982758620689655, "no_speech_prob": 4.636523954104632e-05}, {"id": 1334, "seek": 328134, "start": 3305.34, "end": 3307.34, "text": " is used to optimize the parameters of the model.", "tokens": [51565, 307, 1143, 281, 19719, 264, 9834, 295, 264, 2316, 13, 51665], "temperature": 0.0, "avg_logprob": -0.10747870057821274, "compression_ratio": 1.6982758620689655, "no_speech_prob": 4.636523954104632e-05}, {"id": 1335, "seek": 328134, "start": 3307.34, "end": 3309.34, "text": " Just like we're doing here, using Gradient Descent.", "tokens": [51665, 1449, 411, 321, 434, 884, 510, 11, 1228, 16710, 1196, 3885, 2207, 13, 51765], "temperature": 0.0, "avg_logprob": -0.10747870057821274, "compression_ratio": 1.6982758620689655, "no_speech_prob": 4.636523954104632e-05}, {"id": 1336, "seek": 328134, "start": 3309.34, "end": 3311.34, "text": " These 10%", "tokens": [51765, 1981, 1266, 4, 51865], "temperature": 0.0, "avg_logprob": -0.10747870057821274, "compression_ratio": 1.6982758620689655, "no_speech_prob": 4.636523954104632e-05}, {"id": 1337, "seek": 331134, "start": 3311.34, "end": 3313.34, "text": " of the examples,", "tokens": [50365, 295, 264, 5110, 11, 50465], "temperature": 0.0, "avg_logprob": -0.0782663397593041, "compression_ratio": 1.8175675675675675, "no_speech_prob": 0.0002414275222690776}, {"id": 1338, "seek": 331134, "start": 3313.34, "end": 3315.34, "text": " the def or validation split, they're used", "tokens": [50465, 264, 1060, 420, 24071, 7472, 11, 436, 434, 1143, 50565], "temperature": 0.0, "avg_logprob": -0.0782663397593041, "compression_ratio": 1.8175675675675675, "no_speech_prob": 0.0002414275222690776}, {"id": 1339, "seek": 331134, "start": 3315.34, "end": 3317.34, "text": " for development over all the hyper", "tokens": [50565, 337, 3250, 670, 439, 264, 9848, 50665], "temperature": 0.0, "avg_logprob": -0.0782663397593041, "compression_ratio": 1.8175675675675675, "no_speech_prob": 0.0002414275222690776}, {"id": 1340, "seek": 331134, "start": 3317.34, "end": 3319.34, "text": " parameters of your model. So", "tokens": [50665, 9834, 295, 428, 2316, 13, 407, 50765], "temperature": 0.0, "avg_logprob": -0.0782663397593041, "compression_ratio": 1.8175675675675675, "no_speech_prob": 0.0002414275222690776}, {"id": 1341, "seek": 331134, "start": 3319.34, "end": 3321.34, "text": " hyper parameters are, for example, the size", "tokens": [50765, 9848, 9834, 366, 11, 337, 1365, 11, 264, 2744, 50865], "temperature": 0.0, "avg_logprob": -0.0782663397593041, "compression_ratio": 1.8175675675675675, "no_speech_prob": 0.0002414275222690776}, {"id": 1342, "seek": 331134, "start": 3321.34, "end": 3323.34, "text": " of this hidden layer, the size of", "tokens": [50865, 295, 341, 7633, 4583, 11, 264, 2744, 295, 50965], "temperature": 0.0, "avg_logprob": -0.0782663397593041, "compression_ratio": 1.8175675675675675, "no_speech_prob": 0.0002414275222690776}, {"id": 1343, "seek": 331134, "start": 3323.34, "end": 3325.34, "text": " the embedding. So this is a 100 or", "tokens": [50965, 264, 12240, 3584, 13, 407, 341, 307, 257, 2319, 420, 51065], "temperature": 0.0, "avg_logprob": -0.0782663397593041, "compression_ratio": 1.8175675675675675, "no_speech_prob": 0.0002414275222690776}, {"id": 1344, "seek": 331134, "start": 3325.34, "end": 3327.34, "text": " a 2 for us, but we could try different things.", "tokens": [51065, 257, 568, 337, 505, 11, 457, 321, 727, 853, 819, 721, 13, 51165], "temperature": 0.0, "avg_logprob": -0.0782663397593041, "compression_ratio": 1.8175675675675675, "no_speech_prob": 0.0002414275222690776}, {"id": 1345, "seek": 331134, "start": 3327.34, "end": 3329.34, "text": " The strength of the regularization,", "tokens": [51165, 440, 3800, 295, 264, 3890, 2144, 11, 51265], "temperature": 0.0, "avg_logprob": -0.0782663397593041, "compression_ratio": 1.8175675675675675, "no_speech_prob": 0.0002414275222690776}, {"id": 1346, "seek": 331134, "start": 3329.34, "end": 3331.34, "text": " which we aren't using yet so far.", "tokens": [51265, 597, 321, 3212, 380, 1228, 1939, 370, 1400, 13, 51365], "temperature": 0.0, "avg_logprob": -0.0782663397593041, "compression_ratio": 1.8175675675675675, "no_speech_prob": 0.0002414275222690776}, {"id": 1347, "seek": 331134, "start": 3331.34, "end": 3333.34, "text": " So there's lots of different hyper", "tokens": [51365, 407, 456, 311, 3195, 295, 819, 9848, 51465], "temperature": 0.0, "avg_logprob": -0.0782663397593041, "compression_ratio": 1.8175675675675675, "no_speech_prob": 0.0002414275222690776}, {"id": 1348, "seek": 331134, "start": 3333.34, "end": 3335.34, "text": " parameters and settings that go into defining", "tokens": [51465, 9834, 293, 6257, 300, 352, 666, 17827, 51565], "temperature": 0.0, "avg_logprob": -0.0782663397593041, "compression_ratio": 1.8175675675675675, "no_speech_prob": 0.0002414275222690776}, {"id": 1349, "seek": 331134, "start": 3335.34, "end": 3337.34, "text": " a neural net. And you can try many different", "tokens": [51565, 257, 18161, 2533, 13, 400, 291, 393, 853, 867, 819, 51665], "temperature": 0.0, "avg_logprob": -0.0782663397593041, "compression_ratio": 1.8175675675675675, "no_speech_prob": 0.0002414275222690776}, {"id": 1350, "seek": 331134, "start": 3337.34, "end": 3339.34, "text": " variations of them and see whichever", "tokens": [51665, 17840, 295, 552, 293, 536, 24123, 51765], "temperature": 0.0, "avg_logprob": -0.0782663397593041, "compression_ratio": 1.8175675675675675, "no_speech_prob": 0.0002414275222690776}, {"id": 1351, "seek": 331134, "start": 3339.34, "end": 3341.34, "text": " one works best on your", "tokens": [51765, 472, 1985, 1151, 322, 428, 51865], "temperature": 0.0, "avg_logprob": -0.0782663397593041, "compression_ratio": 1.8175675675675675, "no_speech_prob": 0.0002414275222690776}, {"id": 1352, "seek": 334134, "start": 3341.34, "end": 3343.34, "text": " validation split.", "tokens": [50365, 24071, 7472, 13, 50465], "temperature": 0.0, "avg_logprob": -0.0592362061711668, "compression_ratio": 2.0732758620689653, "no_speech_prob": 0.0004087779379915446}, {"id": 1353, "seek": 334134, "start": 3343.34, "end": 3345.34, "text": " So this is used to train the parameters.", "tokens": [50465, 407, 341, 307, 1143, 281, 3847, 264, 9834, 13, 50565], "temperature": 0.0, "avg_logprob": -0.0592362061711668, "compression_ratio": 2.0732758620689653, "no_speech_prob": 0.0004087779379915446}, {"id": 1354, "seek": 334134, "start": 3345.34, "end": 3347.34, "text": " This is used to train the", "tokens": [50565, 639, 307, 1143, 281, 3847, 264, 50665], "temperature": 0.0, "avg_logprob": -0.0592362061711668, "compression_ratio": 2.0732758620689653, "no_speech_prob": 0.0004087779379915446}, {"id": 1355, "seek": 334134, "start": 3347.34, "end": 3349.34, "text": " hyper parameters. And test", "tokens": [50665, 9848, 9834, 13, 400, 1500, 50765], "temperature": 0.0, "avg_logprob": -0.0592362061711668, "compression_ratio": 2.0732758620689653, "no_speech_prob": 0.0004087779379915446}, {"id": 1356, "seek": 334134, "start": 3349.34, "end": 3351.34, "text": " split is used to evaluate", "tokens": [50765, 7472, 307, 1143, 281, 13059, 50865], "temperature": 0.0, "avg_logprob": -0.0592362061711668, "compression_ratio": 2.0732758620689653, "no_speech_prob": 0.0004087779379915446}, {"id": 1357, "seek": 334134, "start": 3351.34, "end": 3353.34, "text": " basically the performance of the model at the end.", "tokens": [50865, 1936, 264, 3389, 295, 264, 2316, 412, 264, 917, 13, 50965], "temperature": 0.0, "avg_logprob": -0.0592362061711668, "compression_ratio": 2.0732758620689653, "no_speech_prob": 0.0004087779379915446}, {"id": 1358, "seek": 334134, "start": 3353.34, "end": 3355.34, "text": " So we're only evaluating", "tokens": [50965, 407, 321, 434, 787, 27479, 51065], "temperature": 0.0, "avg_logprob": -0.0592362061711668, "compression_ratio": 2.0732758620689653, "no_speech_prob": 0.0004087779379915446}, {"id": 1359, "seek": 334134, "start": 3355.34, "end": 3357.34, "text": " the loss on the test split very, very sparingly", "tokens": [51065, 264, 4470, 322, 264, 1500, 7472, 588, 11, 588, 637, 1921, 356, 51165], "temperature": 0.0, "avg_logprob": -0.0592362061711668, "compression_ratio": 2.0732758620689653, "no_speech_prob": 0.0004087779379915446}, {"id": 1360, "seek": 334134, "start": 3357.34, "end": 3359.34, "text": " and very few times. Because", "tokens": [51165, 293, 588, 1326, 1413, 13, 1436, 51265], "temperature": 0.0, "avg_logprob": -0.0592362061711668, "compression_ratio": 2.0732758620689653, "no_speech_prob": 0.0004087779379915446}, {"id": 1361, "seek": 334134, "start": 3359.34, "end": 3361.34, "text": " every single time you evaluate your test", "tokens": [51265, 633, 2167, 565, 291, 13059, 428, 1500, 51365], "temperature": 0.0, "avg_logprob": -0.0592362061711668, "compression_ratio": 2.0732758620689653, "no_speech_prob": 0.0004087779379915446}, {"id": 1362, "seek": 334134, "start": 3361.34, "end": 3363.34, "text": " loss and you learn something from it,", "tokens": [51365, 4470, 293, 291, 1466, 746, 490, 309, 11, 51465], "temperature": 0.0, "avg_logprob": -0.0592362061711668, "compression_ratio": 2.0732758620689653, "no_speech_prob": 0.0004087779379915446}, {"id": 1363, "seek": 334134, "start": 3363.34, "end": 3365.34, "text": " you are basically starting to", "tokens": [51465, 291, 366, 1936, 2891, 281, 51565], "temperature": 0.0, "avg_logprob": -0.0592362061711668, "compression_ratio": 2.0732758620689653, "no_speech_prob": 0.0004087779379915446}, {"id": 1364, "seek": 334134, "start": 3365.34, "end": 3367.34, "text": " also train on the test split.", "tokens": [51565, 611, 3847, 322, 264, 1500, 7472, 13, 51665], "temperature": 0.0, "avg_logprob": -0.0592362061711668, "compression_ratio": 2.0732758620689653, "no_speech_prob": 0.0004087779379915446}, {"id": 1365, "seek": 334134, "start": 3367.34, "end": 3369.34, "text": " So you are only allowed", "tokens": [51665, 407, 291, 366, 787, 4350, 51765], "temperature": 0.0, "avg_logprob": -0.0592362061711668, "compression_ratio": 2.0732758620689653, "no_speech_prob": 0.0004087779379915446}, {"id": 1366, "seek": 334134, "start": 3369.34, "end": 3371.34, "text": " to test the loss on the test", "tokens": [51765, 281, 1500, 264, 4470, 322, 264, 1500, 51865], "temperature": 0.0, "avg_logprob": -0.0592362061711668, "compression_ratio": 2.0732758620689653, "no_speech_prob": 0.0004087779379915446}, {"id": 1367, "seek": 337134, "start": 3371.34, "end": 3373.34, "text": " set very, very", "tokens": [50365, 992, 588, 11, 588, 50465], "temperature": 0.0, "avg_logprob": -0.07938139875170211, "compression_ratio": 1.6865671641791045, "no_speech_prob": 0.00014520128024742007}, {"id": 1368, "seek": 337134, "start": 3373.34, "end": 3375.34, "text": " few times. Otherwise you risk", "tokens": [50465, 1326, 1413, 13, 10328, 291, 3148, 50565], "temperature": 0.0, "avg_logprob": -0.07938139875170211, "compression_ratio": 1.6865671641791045, "no_speech_prob": 0.00014520128024742007}, {"id": 1369, "seek": 337134, "start": 3375.34, "end": 3377.34, "text": " overfitting to it as well", "tokens": [50565, 670, 69, 2414, 281, 309, 382, 731, 50665], "temperature": 0.0, "avg_logprob": -0.07938139875170211, "compression_ratio": 1.6865671641791045, "no_speech_prob": 0.00014520128024742007}, {"id": 1370, "seek": 337134, "start": 3377.34, "end": 3379.34, "text": " as you experiment on your model.", "tokens": [50665, 382, 291, 5120, 322, 428, 2316, 13, 50765], "temperature": 0.0, "avg_logprob": -0.07938139875170211, "compression_ratio": 1.6865671641791045, "no_speech_prob": 0.00014520128024742007}, {"id": 1371, "seek": 337134, "start": 3379.34, "end": 3381.34, "text": " So let's also split up our training", "tokens": [50765, 407, 718, 311, 611, 7472, 493, 527, 3097, 50865], "temperature": 0.0, "avg_logprob": -0.07938139875170211, "compression_ratio": 1.6865671641791045, "no_speech_prob": 0.00014520128024742007}, {"id": 1372, "seek": 337134, "start": 3381.34, "end": 3383.34, "text": " data into train, dev,", "tokens": [50865, 1412, 666, 3847, 11, 1905, 11, 50965], "temperature": 0.0, "avg_logprob": -0.07938139875170211, "compression_ratio": 1.6865671641791045, "no_speech_prob": 0.00014520128024742007}, {"id": 1373, "seek": 337134, "start": 3383.34, "end": 3385.34, "text": " and test. And then we are going to", "tokens": [50965, 293, 1500, 13, 400, 550, 321, 366, 516, 281, 51065], "temperature": 0.0, "avg_logprob": -0.07938139875170211, "compression_ratio": 1.6865671641791045, "no_speech_prob": 0.00014520128024742007}, {"id": 1374, "seek": 337134, "start": 3385.34, "end": 3387.34, "text": " train on train and only evaluate", "tokens": [51065, 3847, 322, 3847, 293, 787, 13059, 51165], "temperature": 0.0, "avg_logprob": -0.07938139875170211, "compression_ratio": 1.6865671641791045, "no_speech_prob": 0.00014520128024742007}, {"id": 1375, "seek": 337134, "start": 3387.34, "end": 3389.34, "text": " on test very, very sparingly.", "tokens": [51165, 322, 1500, 588, 11, 588, 637, 1921, 356, 13, 51265], "temperature": 0.0, "avg_logprob": -0.07938139875170211, "compression_ratio": 1.6865671641791045, "no_speech_prob": 0.00014520128024742007}, {"id": 1376, "seek": 337134, "start": 3389.34, "end": 3391.34, "text": " Okay, so here we go.", "tokens": [51265, 1033, 11, 370, 510, 321, 352, 13, 51365], "temperature": 0.0, "avg_logprob": -0.07938139875170211, "compression_ratio": 1.6865671641791045, "no_speech_prob": 0.00014520128024742007}, {"id": 1377, "seek": 337134, "start": 3391.34, "end": 3393.34, "text": " Here is where we took all the words", "tokens": [51365, 1692, 307, 689, 321, 1890, 439, 264, 2283, 51465], "temperature": 0.0, "avg_logprob": -0.07938139875170211, "compression_ratio": 1.6865671641791045, "no_speech_prob": 0.00014520128024742007}, {"id": 1378, "seek": 337134, "start": 3393.34, "end": 3395.34, "text": " and put them into x and y tensors.", "tokens": [51465, 293, 829, 552, 666, 2031, 293, 288, 10688, 830, 13, 51565], "temperature": 0.0, "avg_logprob": -0.07938139875170211, "compression_ratio": 1.6865671641791045, "no_speech_prob": 0.00014520128024742007}, {"id": 1379, "seek": 337134, "start": 3395.34, "end": 3397.34, "text": " So instead, let me create", "tokens": [51565, 407, 2602, 11, 718, 385, 1884, 51665], "temperature": 0.0, "avg_logprob": -0.07938139875170211, "compression_ratio": 1.6865671641791045, "no_speech_prob": 0.00014520128024742007}, {"id": 1380, "seek": 337134, "start": 3397.34, "end": 3399.34, "text": " a new cell here and let me just copy paste", "tokens": [51665, 257, 777, 2815, 510, 293, 718, 385, 445, 5055, 9163, 51765], "temperature": 0.0, "avg_logprob": -0.07938139875170211, "compression_ratio": 1.6865671641791045, "no_speech_prob": 0.00014520128024742007}, {"id": 1381, "seek": 337134, "start": 3399.34, "end": 3401.34, "text": " some code here. Because I don't", "tokens": [51765, 512, 3089, 510, 13, 1436, 286, 500, 380, 51865], "temperature": 0.0, "avg_logprob": -0.07938139875170211, "compression_ratio": 1.6865671641791045, "no_speech_prob": 0.00014520128024742007}, {"id": 1382, "seek": 340134, "start": 3401.34, "end": 3403.34, "text": " think it's that complex.", "tokens": [50365, 519, 309, 311, 300, 3997, 13, 50465], "temperature": 0.0, "avg_logprob": -0.06706300648775967, "compression_ratio": 1.7125, "no_speech_prob": 0.00017072139598894864}, {"id": 1383, "seek": 340134, "start": 3403.34, "end": 3405.34, "text": " But", "tokens": [50465, 583, 50565], "temperature": 0.0, "avg_logprob": -0.06706300648775967, "compression_ratio": 1.7125, "no_speech_prob": 0.00017072139598894864}, {"id": 1384, "seek": 340134, "start": 3405.34, "end": 3407.34, "text": " we're going to try to save a little bit of time.", "tokens": [50565, 321, 434, 516, 281, 853, 281, 3155, 257, 707, 857, 295, 565, 13, 50665], "temperature": 0.0, "avg_logprob": -0.06706300648775967, "compression_ratio": 1.7125, "no_speech_prob": 0.00017072139598894864}, {"id": 1385, "seek": 340134, "start": 3407.34, "end": 3409.34, "text": " I'm converting this to be a function now.", "tokens": [50665, 286, 478, 29942, 341, 281, 312, 257, 2445, 586, 13, 50765], "temperature": 0.0, "avg_logprob": -0.06706300648775967, "compression_ratio": 1.7125, "no_speech_prob": 0.00017072139598894864}, {"id": 1386, "seek": 340134, "start": 3409.34, "end": 3411.34, "text": " And this function takes some list", "tokens": [50765, 400, 341, 2445, 2516, 512, 1329, 50865], "temperature": 0.0, "avg_logprob": -0.06706300648775967, "compression_ratio": 1.7125, "no_speech_prob": 0.00017072139598894864}, {"id": 1387, "seek": 340134, "start": 3411.34, "end": 3413.34, "text": " of words and builds the arrays", "tokens": [50865, 295, 2283, 293, 15182, 264, 41011, 50965], "temperature": 0.0, "avg_logprob": -0.06706300648775967, "compression_ratio": 1.7125, "no_speech_prob": 0.00017072139598894864}, {"id": 1388, "seek": 340134, "start": 3413.34, "end": 3415.34, "text": " x and y for those words only.", "tokens": [50965, 2031, 293, 288, 337, 729, 2283, 787, 13, 51065], "temperature": 0.0, "avg_logprob": -0.06706300648775967, "compression_ratio": 1.7125, "no_speech_prob": 0.00017072139598894864}, {"id": 1389, "seek": 340134, "start": 3415.34, "end": 3417.34, "text": " And then here", "tokens": [51065, 400, 550, 510, 51165], "temperature": 0.0, "avg_logprob": -0.06706300648775967, "compression_ratio": 1.7125, "no_speech_prob": 0.00017072139598894864}, {"id": 1390, "seek": 340134, "start": 3417.34, "end": 3419.34, "text": " I am shuffling up all the", "tokens": [51165, 286, 669, 402, 1245, 1688, 493, 439, 264, 51265], "temperature": 0.0, "avg_logprob": -0.06706300648775967, "compression_ratio": 1.7125, "no_speech_prob": 0.00017072139598894864}, {"id": 1391, "seek": 340134, "start": 3419.34, "end": 3421.34, "text": " words. So these are the input words", "tokens": [51265, 2283, 13, 407, 613, 366, 264, 4846, 2283, 51365], "temperature": 0.0, "avg_logprob": -0.06706300648775967, "compression_ratio": 1.7125, "no_speech_prob": 0.00017072139598894864}, {"id": 1392, "seek": 340134, "start": 3421.34, "end": 3423.34, "text": " that we get. We are randomly shuffling", "tokens": [51365, 300, 321, 483, 13, 492, 366, 16979, 402, 1245, 1688, 51465], "temperature": 0.0, "avg_logprob": -0.06706300648775967, "compression_ratio": 1.7125, "no_speech_prob": 0.00017072139598894864}, {"id": 1393, "seek": 340134, "start": 3423.34, "end": 3425.34, "text": " them all up. And then", "tokens": [51465, 552, 439, 493, 13, 400, 550, 51565], "temperature": 0.0, "avg_logprob": -0.06706300648775967, "compression_ratio": 1.7125, "no_speech_prob": 0.00017072139598894864}, {"id": 1394, "seek": 340134, "start": 3425.34, "end": 3427.34, "text": " we're going to", "tokens": [51565, 321, 434, 516, 281, 51665], "temperature": 0.0, "avg_logprob": -0.06706300648775967, "compression_ratio": 1.7125, "no_speech_prob": 0.00017072139598894864}, {"id": 1395, "seek": 340134, "start": 3427.34, "end": 3429.34, "text": " set n1 to be", "tokens": [51665, 992, 297, 16, 281, 312, 51765], "temperature": 0.0, "avg_logprob": -0.06706300648775967, "compression_ratio": 1.7125, "no_speech_prob": 0.00017072139598894864}, {"id": 1396, "seek": 340134, "start": 3429.34, "end": 3431.34, "text": " the number of examples. There's", "tokens": [51765, 264, 1230, 295, 5110, 13, 821, 311, 51865], "temperature": 0.0, "avg_logprob": -0.06706300648775967, "compression_ratio": 1.7125, "no_speech_prob": 0.00017072139598894864}, {"id": 1397, "seek": 343134, "start": 3431.34, "end": 3433.34, "text": " 80% of the words and n2 to be", "tokens": [50365, 4688, 4, 295, 264, 2283, 293, 297, 17, 281, 312, 50465], "temperature": 0.0, "avg_logprob": -0.11292776884856047, "compression_ratio": 1.6972477064220184, "no_speech_prob": 0.00031411732197739184}, {"id": 1398, "seek": 343134, "start": 3433.34, "end": 3435.34, "text": " 90% of the weight of", "tokens": [50465, 4289, 4, 295, 264, 3364, 295, 50565], "temperature": 0.0, "avg_logprob": -0.11292776884856047, "compression_ratio": 1.6972477064220184, "no_speech_prob": 0.00031411732197739184}, {"id": 1399, "seek": 343134, "start": 3435.34, "end": 3437.34, "text": " the words. So basically if length", "tokens": [50565, 264, 2283, 13, 407, 1936, 498, 4641, 50665], "temperature": 0.0, "avg_logprob": -0.11292776884856047, "compression_ratio": 1.6972477064220184, "no_speech_prob": 0.00031411732197739184}, {"id": 1400, "seek": 343134, "start": 3437.34, "end": 3439.34, "text": " of words is 32,000", "tokens": [50665, 295, 2283, 307, 8858, 11, 1360, 50765], "temperature": 0.0, "avg_logprob": -0.11292776884856047, "compression_ratio": 1.6972477064220184, "no_speech_prob": 0.00031411732197739184}, {"id": 1401, "seek": 343134, "start": 3439.34, "end": 3441.34, "text": " n1 is", "tokens": [50765, 297, 16, 307, 50865], "temperature": 0.0, "avg_logprob": -0.11292776884856047, "compression_ratio": 1.6972477064220184, "no_speech_prob": 0.00031411732197739184}, {"id": 1402, "seek": 343134, "start": 3441.34, "end": 3443.34, "text": " oh sorry, I should probably run this.", "tokens": [50865, 1954, 2597, 11, 286, 820, 1391, 1190, 341, 13, 50965], "temperature": 0.0, "avg_logprob": -0.11292776884856047, "compression_ratio": 1.6972477064220184, "no_speech_prob": 0.00031411732197739184}, {"id": 1403, "seek": 343134, "start": 3443.34, "end": 3445.34, "text": " n1 is", "tokens": [50965, 297, 16, 307, 51065], "temperature": 0.0, "avg_logprob": -0.11292776884856047, "compression_ratio": 1.6972477064220184, "no_speech_prob": 0.00031411732197739184}, {"id": 1404, "seek": 343134, "start": 3445.34, "end": 3447.34, "text": " 25,000 and n2 is 28,000.", "tokens": [51065, 3552, 11, 1360, 293, 297, 17, 307, 7562, 11, 1360, 13, 51165], "temperature": 0.0, "avg_logprob": -0.11292776884856047, "compression_ratio": 1.6972477064220184, "no_speech_prob": 0.00031411732197739184}, {"id": 1405, "seek": 343134, "start": 3447.34, "end": 3449.34, "text": " And so here we see that", "tokens": [51165, 400, 370, 510, 321, 536, 300, 51265], "temperature": 0.0, "avg_logprob": -0.11292776884856047, "compression_ratio": 1.6972477064220184, "no_speech_prob": 0.00031411732197739184}, {"id": 1406, "seek": 343134, "start": 3449.34, "end": 3451.34, "text": " I'm calling build data set", "tokens": [51265, 286, 478, 5141, 1322, 1412, 992, 51365], "temperature": 0.0, "avg_logprob": -0.11292776884856047, "compression_ratio": 1.6972477064220184, "no_speech_prob": 0.00031411732197739184}, {"id": 1407, "seek": 343134, "start": 3451.34, "end": 3453.34, "text": " to build the training set x and y", "tokens": [51365, 281, 1322, 264, 3097, 992, 2031, 293, 288, 51465], "temperature": 0.0, "avg_logprob": -0.11292776884856047, "compression_ratio": 1.6972477064220184, "no_speech_prob": 0.00031411732197739184}, {"id": 1408, "seek": 343134, "start": 3453.34, "end": 3455.34, "text": " by indexing into", "tokens": [51465, 538, 8186, 278, 666, 51565], "temperature": 0.0, "avg_logprob": -0.11292776884856047, "compression_ratio": 1.6972477064220184, "no_speech_prob": 0.00031411732197739184}, {"id": 1409, "seek": 343134, "start": 3455.34, "end": 3457.34, "text": " up to n1. So we're going to have", "tokens": [51565, 493, 281, 297, 16, 13, 407, 321, 434, 516, 281, 362, 51665], "temperature": 0.0, "avg_logprob": -0.11292776884856047, "compression_ratio": 1.6972477064220184, "no_speech_prob": 0.00031411732197739184}, {"id": 1410, "seek": 343134, "start": 3457.34, "end": 3459.34, "text": " only 25,000 training words.", "tokens": [51665, 787, 3552, 11, 1360, 3097, 2283, 13, 51765], "temperature": 0.0, "avg_logprob": -0.11292776884856047, "compression_ratio": 1.6972477064220184, "no_speech_prob": 0.00031411732197739184}, {"id": 1411, "seek": 343134, "start": 3459.34, "end": 3461.34, "text": " And then we're going to have", "tokens": [51765, 400, 550, 321, 434, 516, 281, 362, 51865], "temperature": 0.0, "avg_logprob": -0.11292776884856047, "compression_ratio": 1.6972477064220184, "no_speech_prob": 0.00031411732197739184}, {"id": 1412, "seek": 346134, "start": 3461.34, "end": 3463.34, "text": " roughly", "tokens": [50365, 9810, 50465], "temperature": 0.0, "avg_logprob": -0.09969897329071421, "compression_ratio": 1.4304635761589404, "no_speech_prob": 0.00023338780738413334}, {"id": 1413, "seek": 346134, "start": 3463.34, "end": 3465.34, "text": " n2 minus n1", "tokens": [50465, 297, 17, 3175, 297, 16, 50565], "temperature": 0.0, "avg_logprob": -0.09969897329071421, "compression_ratio": 1.4304635761589404, "no_speech_prob": 0.00023338780738413334}, {"id": 1414, "seek": 346134, "start": 3465.34, "end": 3467.34, "text": " 3,000 validation", "tokens": [50565, 805, 11, 1360, 24071, 50665], "temperature": 0.0, "avg_logprob": -0.09969897329071421, "compression_ratio": 1.4304635761589404, "no_speech_prob": 0.00023338780738413334}, {"id": 1415, "seek": 346134, "start": 3467.34, "end": 3469.34, "text": " examples or dev", "tokens": [50665, 5110, 420, 1905, 50765], "temperature": 0.0, "avg_logprob": -0.09969897329071421, "compression_ratio": 1.4304635761589404, "no_speech_prob": 0.00023338780738413334}, {"id": 1416, "seek": 346134, "start": 3469.34, "end": 3471.34, "text": " examples and we're going to have", "tokens": [50765, 5110, 293, 321, 434, 516, 281, 362, 50865], "temperature": 0.0, "avg_logprob": -0.09969897329071421, "compression_ratio": 1.4304635761589404, "no_speech_prob": 0.00023338780738413334}, {"id": 1417, "seek": 346134, "start": 3473.34, "end": 3475.34, "text": " length of words basically", "tokens": [50965, 4641, 295, 2283, 1936, 51065], "temperature": 0.0, "avg_logprob": -0.09969897329071421, "compression_ratio": 1.4304635761589404, "no_speech_prob": 0.00023338780738413334}, {"id": 1418, "seek": 346134, "start": 3475.34, "end": 3477.34, "text": " minus n2", "tokens": [51065, 3175, 297, 17, 51165], "temperature": 0.0, "avg_logprob": -0.09969897329071421, "compression_ratio": 1.4304635761589404, "no_speech_prob": 0.00023338780738413334}, {"id": 1419, "seek": 346134, "start": 3477.34, "end": 3479.34, "text": " or 3,204", "tokens": [51165, 420, 805, 11, 2009, 19, 51265], "temperature": 0.0, "avg_logprob": -0.09969897329071421, "compression_ratio": 1.4304635761589404, "no_speech_prob": 0.00023338780738413334}, {"id": 1420, "seek": 346134, "start": 3479.34, "end": 3481.34, "text": " examples here", "tokens": [51265, 5110, 510, 51365], "temperature": 0.0, "avg_logprob": -0.09969897329071421, "compression_ratio": 1.4304635761589404, "no_speech_prob": 0.00023338780738413334}, {"id": 1421, "seek": 346134, "start": 3481.34, "end": 3483.34, "text": " for the test set.", "tokens": [51365, 337, 264, 1500, 992, 13, 51465], "temperature": 0.0, "avg_logprob": -0.09969897329071421, "compression_ratio": 1.4304635761589404, "no_speech_prob": 0.00023338780738413334}, {"id": 1422, "seek": 346134, "start": 3483.34, "end": 3485.34, "text": " So now we have", "tokens": [51465, 407, 586, 321, 362, 51565], "temperature": 0.0, "avg_logprob": -0.09969897329071421, "compression_ratio": 1.4304635761589404, "no_speech_prob": 0.00023338780738413334}, {"id": 1423, "seek": 346134, "start": 3485.34, "end": 3487.34, "text": " x's and y's for", "tokens": [51565, 2031, 311, 293, 288, 311, 337, 51665], "temperature": 0.0, "avg_logprob": -0.09969897329071421, "compression_ratio": 1.4304635761589404, "no_speech_prob": 0.00023338780738413334}, {"id": 1424, "seek": 346134, "start": 3487.34, "end": 3489.34, "text": " all those three splits.", "tokens": [51665, 439, 729, 1045, 37741, 13, 51765], "temperature": 0.0, "avg_logprob": -0.09969897329071421, "compression_ratio": 1.4304635761589404, "no_speech_prob": 0.00023338780738413334}, {"id": 1425, "seek": 349134, "start": 3491.34, "end": 3493.34, "text": " Oh yeah", "tokens": [50365, 876, 1338, 50465], "temperature": 0.0, "avg_logprob": -0.10527856299217711, "compression_ratio": 1.6142857142857143, "no_speech_prob": 8.35537794046104e-05}, {"id": 1426, "seek": 349134, "start": 3493.34, "end": 3495.34, "text": " I'm printing their size here inside the function as well.", "tokens": [50465, 286, 478, 14699, 641, 2744, 510, 1854, 264, 2445, 382, 731, 13, 50565], "temperature": 0.0, "avg_logprob": -0.10527856299217711, "compression_ratio": 1.6142857142857143, "no_speech_prob": 8.35537794046104e-05}, {"id": 1427, "seek": 349134, "start": 3499.34, "end": 3501.34, "text": " But here we don't have words but these are already", "tokens": [50765, 583, 510, 321, 500, 380, 362, 2283, 457, 613, 366, 1217, 50865], "temperature": 0.0, "avg_logprob": -0.10527856299217711, "compression_ratio": 1.6142857142857143, "no_speech_prob": 8.35537794046104e-05}, {"id": 1428, "seek": 349134, "start": 3501.34, "end": 3503.34, "text": " the individual examples made from those words.", "tokens": [50865, 264, 2609, 5110, 1027, 490, 729, 2283, 13, 50965], "temperature": 0.0, "avg_logprob": -0.10527856299217711, "compression_ratio": 1.6142857142857143, "no_speech_prob": 8.35537794046104e-05}, {"id": 1429, "seek": 349134, "start": 3505.34, "end": 3507.34, "text": " So let's now scroll down here", "tokens": [51065, 407, 718, 311, 586, 11369, 760, 510, 51165], "temperature": 0.0, "avg_logprob": -0.10527856299217711, "compression_ratio": 1.6142857142857143, "no_speech_prob": 8.35537794046104e-05}, {"id": 1430, "seek": 349134, "start": 3507.34, "end": 3509.34, "text": " and the data set now for training", "tokens": [51165, 293, 264, 1412, 992, 586, 337, 3097, 51265], "temperature": 0.0, "avg_logprob": -0.10527856299217711, "compression_ratio": 1.6142857142857143, "no_speech_prob": 8.35537794046104e-05}, {"id": 1431, "seek": 349134, "start": 3509.34, "end": 3511.34, "text": " is", "tokens": [51265, 307, 51365], "temperature": 0.0, "avg_logprob": -0.10527856299217711, "compression_ratio": 1.6142857142857143, "no_speech_prob": 8.35537794046104e-05}, {"id": 1432, "seek": 349134, "start": 3511.34, "end": 3513.34, "text": " more like this.", "tokens": [51365, 544, 411, 341, 13, 51465], "temperature": 0.0, "avg_logprob": -0.10527856299217711, "compression_ratio": 1.6142857142857143, "no_speech_prob": 8.35537794046104e-05}, {"id": 1433, "seek": 349134, "start": 3513.34, "end": 3515.34, "text": " And then when we reset the network", "tokens": [51465, 400, 550, 562, 321, 14322, 264, 3209, 51565], "temperature": 0.0, "avg_logprob": -0.10527856299217711, "compression_ratio": 1.6142857142857143, "no_speech_prob": 8.35537794046104e-05}, {"id": 1434, "seek": 349134, "start": 3517.34, "end": 3519.34, "text": " when we're training", "tokens": [51665, 562, 321, 434, 3097, 51765], "temperature": 0.0, "avg_logprob": -0.10527856299217711, "compression_ratio": 1.6142857142857143, "no_speech_prob": 8.35537794046104e-05}, {"id": 1435, "seek": 349134, "start": 3519.34, "end": 3521.34, "text": " we're only going to be training using", "tokens": [51765, 321, 434, 787, 516, 281, 312, 3097, 1228, 51865], "temperature": 0.0, "avg_logprob": -0.10527856299217711, "compression_ratio": 1.6142857142857143, "no_speech_prob": 8.35537794046104e-05}, {"id": 1436, "seek": 352134, "start": 3521.34, "end": 3523.34, "text": " x train", "tokens": [50365, 2031, 3847, 50465], "temperature": 0.0, "avg_logprob": -0.10748826721568167, "compression_ratio": 1.5294117647058822, "no_speech_prob": 0.000413485657190904}, {"id": 1437, "seek": 352134, "start": 3523.34, "end": 3525.34, "text": " x train", "tokens": [50465, 2031, 3847, 50565], "temperature": 0.0, "avg_logprob": -0.10748826721568167, "compression_ratio": 1.5294117647058822, "no_speech_prob": 0.000413485657190904}, {"id": 1438, "seek": 352134, "start": 3525.34, "end": 3527.34, "text": " and y train.", "tokens": [50565, 293, 288, 3847, 13, 50665], "temperature": 0.0, "avg_logprob": -0.10748826721568167, "compression_ratio": 1.5294117647058822, "no_speech_prob": 0.000413485657190904}, {"id": 1439, "seek": 352134, "start": 3527.34, "end": 3529.34, "text": " So that's the only thing we're", "tokens": [50665, 407, 300, 311, 264, 787, 551, 321, 434, 50765], "temperature": 0.0, "avg_logprob": -0.10748826721568167, "compression_ratio": 1.5294117647058822, "no_speech_prob": 0.000413485657190904}, {"id": 1440, "seek": 352134, "start": 3529.34, "end": 3531.34, "text": " training on.", "tokens": [50765, 3097, 322, 13, 50865], "temperature": 0.0, "avg_logprob": -0.10748826721568167, "compression_ratio": 1.5294117647058822, "no_speech_prob": 0.000413485657190904}, {"id": 1441, "seek": 352134, "start": 3537.34, "end": 3539.34, "text": " Let's see where we are", "tokens": [51165, 961, 311, 536, 689, 321, 366, 51265], "temperature": 0.0, "avg_logprob": -0.10748826721568167, "compression_ratio": 1.5294117647058822, "no_speech_prob": 0.000413485657190904}, {"id": 1442, "seek": 352134, "start": 3539.34, "end": 3541.34, "text": " on the single batch.", "tokens": [51265, 322, 264, 2167, 15245, 13, 51365], "temperature": 0.0, "avg_logprob": -0.10748826721568167, "compression_ratio": 1.5294117647058822, "no_speech_prob": 0.000413485657190904}, {"id": 1443, "seek": 352134, "start": 3541.34, "end": 3543.34, "text": " Let's now train maybe", "tokens": [51365, 961, 311, 586, 3847, 1310, 51465], "temperature": 0.0, "avg_logprob": -0.10748826721568167, "compression_ratio": 1.5294117647058822, "no_speech_prob": 0.000413485657190904}, {"id": 1444, "seek": 352134, "start": 3543.34, "end": 3545.34, "text": " a few more steps.", "tokens": [51465, 257, 1326, 544, 4439, 13, 51565], "temperature": 0.0, "avg_logprob": -0.10748826721568167, "compression_ratio": 1.5294117647058822, "no_speech_prob": 0.000413485657190904}, {"id": 1445, "seek": 352134, "start": 3547.34, "end": 3549.34, "text": " Training of neural networks can take a while.", "tokens": [51665, 20620, 295, 18161, 9590, 393, 747, 257, 1339, 13, 51765], "temperature": 0.0, "avg_logprob": -0.10748826721568167, "compression_ratio": 1.5294117647058822, "no_speech_prob": 0.000413485657190904}, {"id": 1446, "seek": 352134, "start": 3549.34, "end": 3551.34, "text": " Usually you don't do it inline.", "tokens": [51765, 11419, 291, 500, 380, 360, 309, 294, 1889, 13, 51865], "temperature": 0.0, "avg_logprob": -0.10748826721568167, "compression_ratio": 1.5294117647058822, "no_speech_prob": 0.000413485657190904}, {"id": 1447, "seek": 355134, "start": 3551.34, "end": 3553.34, "text": " You launch a bunch of jobs", "tokens": [50365, 509, 4025, 257, 3840, 295, 4782, 50465], "temperature": 0.0, "avg_logprob": -0.10587343927157128, "compression_ratio": 1.568, "no_speech_prob": 0.0001436556485714391}, {"id": 1448, "seek": 355134, "start": 3553.34, "end": 3555.34, "text": " and you wait for them to finish.", "tokens": [50465, 293, 291, 1699, 337, 552, 281, 2413, 13, 50565], "temperature": 0.0, "avg_logprob": -0.10587343927157128, "compression_ratio": 1.568, "no_speech_prob": 0.0001436556485714391}, {"id": 1449, "seek": 355134, "start": 3555.34, "end": 3557.34, "text": " It can take multiple days and so on.", "tokens": [50565, 467, 393, 747, 3866, 1708, 293, 370, 322, 13, 50665], "temperature": 0.0, "avg_logprob": -0.10587343927157128, "compression_ratio": 1.568, "no_speech_prob": 0.0001436556485714391}, {"id": 1450, "seek": 355134, "start": 3557.34, "end": 3559.34, "text": " Luckily this is a very small network.", "tokens": [50665, 19726, 341, 307, 257, 588, 1359, 3209, 13, 50765], "temperature": 0.0, "avg_logprob": -0.10587343927157128, "compression_ratio": 1.568, "no_speech_prob": 0.0001436556485714391}, {"id": 1451, "seek": 355134, "start": 3561.34, "end": 3563.34, "text": " Okay so the loss is pretty good.", "tokens": [50865, 1033, 370, 264, 4470, 307, 1238, 665, 13, 50965], "temperature": 0.0, "avg_logprob": -0.10587343927157128, "compression_ratio": 1.568, "no_speech_prob": 0.0001436556485714391}, {"id": 1452, "seek": 355134, "start": 3563.34, "end": 3565.34, "text": " Oh we accidentally used", "tokens": [50965, 876, 321, 15715, 1143, 51065], "temperature": 0.0, "avg_logprob": -0.10587343927157128, "compression_ratio": 1.568, "no_speech_prob": 0.0001436556485714391}, {"id": 1453, "seek": 355134, "start": 3565.34, "end": 3567.34, "text": " a learning rate that is way too low.", "tokens": [51065, 257, 2539, 3314, 300, 307, 636, 886, 2295, 13, 51165], "temperature": 0.0, "avg_logprob": -0.10587343927157128, "compression_ratio": 1.568, "no_speech_prob": 0.0001436556485714391}, {"id": 1454, "seek": 355134, "start": 3567.34, "end": 3569.34, "text": " So let me actually come back.", "tokens": [51165, 407, 718, 385, 767, 808, 646, 13, 51265], "temperature": 0.0, "avg_logprob": -0.10587343927157128, "compression_ratio": 1.568, "no_speech_prob": 0.0001436556485714391}, {"id": 1455, "seek": 355134, "start": 3569.34, "end": 3571.34, "text": " We used the decay learning rate", "tokens": [51265, 492, 1143, 264, 21039, 2539, 3314, 51365], "temperature": 0.0, "avg_logprob": -0.10587343927157128, "compression_ratio": 1.568, "no_speech_prob": 0.0001436556485714391}, {"id": 1456, "seek": 355134, "start": 3571.34, "end": 3573.34, "text": " of 0.01.", "tokens": [51365, 295, 1958, 13, 10607, 13, 51465], "temperature": 0.0, "avg_logprob": -0.10587343927157128, "compression_ratio": 1.568, "no_speech_prob": 0.0001436556485714391}, {"id": 1457, "seek": 355134, "start": 3575.34, "end": 3577.34, "text": " So this will train much faster.", "tokens": [51565, 407, 341, 486, 3847, 709, 4663, 13, 51665], "temperature": 0.0, "avg_logprob": -0.10587343927157128, "compression_ratio": 1.568, "no_speech_prob": 0.0001436556485714391}, {"id": 1458, "seek": 355134, "start": 3577.34, "end": 3579.34, "text": " And then here when we evaluate", "tokens": [51665, 400, 550, 510, 562, 321, 13059, 51765], "temperature": 0.0, "avg_logprob": -0.10587343927157128, "compression_ratio": 1.568, "no_speech_prob": 0.0001436556485714391}, {"id": 1459, "seek": 355134, "start": 3579.34, "end": 3581.34, "text": " let's use the depth set here.", "tokens": [51765, 718, 311, 764, 264, 7161, 992, 510, 13, 51865], "temperature": 0.0, "avg_logprob": -0.10587343927157128, "compression_ratio": 1.568, "no_speech_prob": 0.0001436556485714391}, {"id": 1460, "seek": 358134, "start": 3581.34, "end": 3583.34, "text": " x dev", "tokens": [50365, 2031, 1905, 50465], "temperature": 0.0, "avg_logprob": -0.11446644010997954, "compression_ratio": 1.6818181818181819, "no_speech_prob": 0.00022427967633120716}, {"id": 1461, "seek": 358134, "start": 3583.34, "end": 3585.34, "text": " and y dev", "tokens": [50465, 293, 288, 1905, 50565], "temperature": 0.0, "avg_logprob": -0.11446644010997954, "compression_ratio": 1.6818181818181819, "no_speech_prob": 0.00022427967633120716}, {"id": 1462, "seek": 358134, "start": 3585.34, "end": 3587.34, "text": " to evaluate the loss.", "tokens": [50565, 281, 13059, 264, 4470, 13, 50665], "temperature": 0.0, "avg_logprob": -0.11446644010997954, "compression_ratio": 1.6818181818181819, "no_speech_prob": 0.00022427967633120716}, {"id": 1463, "seek": 358134, "start": 3589.34, "end": 3591.34, "text": " And let's not decay the learning rate", "tokens": [50765, 400, 718, 311, 406, 21039, 264, 2539, 3314, 50865], "temperature": 0.0, "avg_logprob": -0.11446644010997954, "compression_ratio": 1.6818181818181819, "no_speech_prob": 0.00022427967633120716}, {"id": 1464, "seek": 358134, "start": 3591.34, "end": 3593.34, "text": " and only do say 10,000 examples.", "tokens": [50865, 293, 787, 360, 584, 1266, 11, 1360, 5110, 13, 50965], "temperature": 0.0, "avg_logprob": -0.11446644010997954, "compression_ratio": 1.6818181818181819, "no_speech_prob": 0.00022427967633120716}, {"id": 1465, "seek": 358134, "start": 3595.34, "end": 3597.34, "text": " And let's evaluate the dev loss", "tokens": [51065, 400, 718, 311, 13059, 264, 1905, 4470, 51165], "temperature": 0.0, "avg_logprob": -0.11446644010997954, "compression_ratio": 1.6818181818181819, "no_speech_prob": 0.00022427967633120716}, {"id": 1466, "seek": 358134, "start": 3597.34, "end": 3599.34, "text": " once here.", "tokens": [51165, 1564, 510, 13, 51265], "temperature": 0.0, "avg_logprob": -0.11446644010997954, "compression_ratio": 1.6818181818181819, "no_speech_prob": 0.00022427967633120716}, {"id": 1467, "seek": 358134, "start": 3599.34, "end": 3601.34, "text": " Okay so we're getting about 2.3 on dev.", "tokens": [51265, 1033, 370, 321, 434, 1242, 466, 568, 13, 18, 322, 1905, 13, 51365], "temperature": 0.0, "avg_logprob": -0.11446644010997954, "compression_ratio": 1.6818181818181819, "no_speech_prob": 0.00022427967633120716}, {"id": 1468, "seek": 358134, "start": 3601.34, "end": 3603.34, "text": " And so the neural network when it was training", "tokens": [51365, 400, 370, 264, 18161, 3209, 562, 309, 390, 3097, 51465], "temperature": 0.0, "avg_logprob": -0.11446644010997954, "compression_ratio": 1.6818181818181819, "no_speech_prob": 0.00022427967633120716}, {"id": 1469, "seek": 358134, "start": 3603.34, "end": 3605.34, "text": " did not see these dev examples.", "tokens": [51465, 630, 406, 536, 613, 1905, 5110, 13, 51565], "temperature": 0.0, "avg_logprob": -0.11446644010997954, "compression_ratio": 1.6818181818181819, "no_speech_prob": 0.00022427967633120716}, {"id": 1470, "seek": 358134, "start": 3605.34, "end": 3607.34, "text": " It hasn't optimized on them.", "tokens": [51565, 467, 6132, 380, 26941, 322, 552, 13, 51665], "temperature": 0.0, "avg_logprob": -0.11446644010997954, "compression_ratio": 1.6818181818181819, "no_speech_prob": 0.00022427967633120716}, {"id": 1471, "seek": 358134, "start": 3607.34, "end": 3609.34, "text": " And yet when we evaluate the loss", "tokens": [51665, 400, 1939, 562, 321, 13059, 264, 4470, 51765], "temperature": 0.0, "avg_logprob": -0.11446644010997954, "compression_ratio": 1.6818181818181819, "no_speech_prob": 0.00022427967633120716}, {"id": 1472, "seek": 360934, "start": 3609.34, "end": 3611.34, "text": " on these dev we actually get a pretty decent loss.", "tokens": [50365, 322, 613, 1905, 321, 767, 483, 257, 1238, 8681, 4470, 13, 50465], "temperature": 0.0, "avg_logprob": -0.08788449202126604, "compression_ratio": 1.7619047619047619, "no_speech_prob": 0.0001663435105001554}, {"id": 1473, "seek": 360934, "start": 3611.34, "end": 3613.34, "text": " And so", "tokens": [50465, 400, 370, 50565], "temperature": 0.0, "avg_logprob": -0.08788449202126604, "compression_ratio": 1.7619047619047619, "no_speech_prob": 0.0001663435105001554}, {"id": 1474, "seek": 360934, "start": 3613.34, "end": 3615.34, "text": " we can also look at what the", "tokens": [50565, 321, 393, 611, 574, 412, 437, 264, 50665], "temperature": 0.0, "avg_logprob": -0.08788449202126604, "compression_ratio": 1.7619047619047619, "no_speech_prob": 0.0001663435105001554}, {"id": 1475, "seek": 360934, "start": 3615.34, "end": 3617.34, "text": " loss is on all of training set.", "tokens": [50665, 4470, 307, 322, 439, 295, 3097, 992, 13, 50765], "temperature": 0.0, "avg_logprob": -0.08788449202126604, "compression_ratio": 1.7619047619047619, "no_speech_prob": 0.0001663435105001554}, {"id": 1476, "seek": 360934, "start": 3619.34, "end": 3621.34, "text": " Oops.", "tokens": [50865, 21726, 13, 50965], "temperature": 0.0, "avg_logprob": -0.08788449202126604, "compression_ratio": 1.7619047619047619, "no_speech_prob": 0.0001663435105001554}, {"id": 1477, "seek": 360934, "start": 3621.34, "end": 3623.34, "text": " And so we see that the training and the dev loss", "tokens": [50965, 400, 370, 321, 536, 300, 264, 3097, 293, 264, 1905, 4470, 51065], "temperature": 0.0, "avg_logprob": -0.08788449202126604, "compression_ratio": 1.7619047619047619, "no_speech_prob": 0.0001663435105001554}, {"id": 1478, "seek": 360934, "start": 3623.34, "end": 3625.34, "text": " are about equal.", "tokens": [51065, 366, 466, 2681, 13, 51165], "temperature": 0.0, "avg_logprob": -0.08788449202126604, "compression_ratio": 1.7619047619047619, "no_speech_prob": 0.0001663435105001554}, {"id": 1479, "seek": 360934, "start": 3625.34, "end": 3627.34, "text": " So we're not overfitting.", "tokens": [51165, 407, 321, 434, 406, 670, 69, 2414, 13, 51265], "temperature": 0.0, "avg_logprob": -0.08788449202126604, "compression_ratio": 1.7619047619047619, "no_speech_prob": 0.0001663435105001554}, {"id": 1480, "seek": 360934, "start": 3627.34, "end": 3629.34, "text": " This model is not powerful enough", "tokens": [51265, 639, 2316, 307, 406, 4005, 1547, 51365], "temperature": 0.0, "avg_logprob": -0.08788449202126604, "compression_ratio": 1.7619047619047619, "no_speech_prob": 0.0001663435105001554}, {"id": 1481, "seek": 360934, "start": 3629.34, "end": 3631.34, "text": " to just be purely memorizing the data.", "tokens": [51365, 281, 445, 312, 17491, 10560, 3319, 264, 1412, 13, 51465], "temperature": 0.0, "avg_logprob": -0.08788449202126604, "compression_ratio": 1.7619047619047619, "no_speech_prob": 0.0001663435105001554}, {"id": 1482, "seek": 360934, "start": 3631.34, "end": 3633.34, "text": " And so far we are what's called underfitting.", "tokens": [51465, 400, 370, 1400, 321, 366, 437, 311, 1219, 833, 69, 2414, 13, 51565], "temperature": 0.0, "avg_logprob": -0.08788449202126604, "compression_ratio": 1.7619047619047619, "no_speech_prob": 0.0001663435105001554}, {"id": 1483, "seek": 360934, "start": 3633.34, "end": 3635.34, "text": " Because the training loss", "tokens": [51565, 1436, 264, 3097, 4470, 51665], "temperature": 0.0, "avg_logprob": -0.08788449202126604, "compression_ratio": 1.7619047619047619, "no_speech_prob": 0.0001663435105001554}, {"id": 1484, "seek": 360934, "start": 3635.34, "end": 3637.34, "text": " and the dev or test losses", "tokens": [51665, 293, 264, 1905, 420, 1500, 15352, 51765], "temperature": 0.0, "avg_logprob": -0.08788449202126604, "compression_ratio": 1.7619047619047619, "no_speech_prob": 0.0001663435105001554}, {"id": 1485, "seek": 360934, "start": 3637.34, "end": 3639.34, "text": " are roughly equal.", "tokens": [51765, 366, 9810, 2681, 13, 51865], "temperature": 0.0, "avg_logprob": -0.08788449202126604, "compression_ratio": 1.7619047619047619, "no_speech_prob": 0.0001663435105001554}, {"id": 1486, "seek": 363934, "start": 3639.34, "end": 3641.34, "text": " So what we can do is", "tokens": [50365, 407, 437, 321, 393, 360, 307, 50465], "temperature": 0.0, "avg_logprob": -0.11681109366657065, "compression_ratio": 1.8093385214007782, "no_speech_prob": 0.00015043008897919208}, {"id": 1487, "seek": 363934, "start": 3641.34, "end": 3643.34, "text": " is that our network is very tiny.", "tokens": [50465, 307, 300, 527, 3209, 307, 588, 5870, 13, 50565], "temperature": 0.0, "avg_logprob": -0.11681109366657065, "compression_ratio": 1.8093385214007782, "no_speech_prob": 0.00015043008897919208}, {"id": 1488, "seek": 363934, "start": 3643.34, "end": 3645.34, "text": " Very small.", "tokens": [50565, 4372, 1359, 13, 50665], "temperature": 0.0, "avg_logprob": -0.11681109366657065, "compression_ratio": 1.8093385214007782, "no_speech_prob": 0.00015043008897919208}, {"id": 1489, "seek": 363934, "start": 3645.34, "end": 3647.34, "text": " And we expect to make performance improvements", "tokens": [50665, 400, 321, 2066, 281, 652, 3389, 13797, 50765], "temperature": 0.0, "avg_logprob": -0.11681109366657065, "compression_ratio": 1.8093385214007782, "no_speech_prob": 0.00015043008897919208}, {"id": 1490, "seek": 363934, "start": 3647.34, "end": 3649.34, "text": " by scaling up the size of this neural net.", "tokens": [50765, 538, 21589, 493, 264, 2744, 295, 341, 18161, 2533, 13, 50865], "temperature": 0.0, "avg_logprob": -0.11681109366657065, "compression_ratio": 1.8093385214007782, "no_speech_prob": 0.00015043008897919208}, {"id": 1491, "seek": 363934, "start": 3649.34, "end": 3651.34, "text": " So let's do that now.", "tokens": [50865, 407, 718, 311, 360, 300, 586, 13, 50965], "temperature": 0.0, "avg_logprob": -0.11681109366657065, "compression_ratio": 1.8093385214007782, "no_speech_prob": 0.00015043008897919208}, {"id": 1492, "seek": 363934, "start": 3651.34, "end": 3653.34, "text": " So let's come over here", "tokens": [50965, 407, 718, 311, 808, 670, 510, 51065], "temperature": 0.0, "avg_logprob": -0.11681109366657065, "compression_ratio": 1.8093385214007782, "no_speech_prob": 0.00015043008897919208}, {"id": 1493, "seek": 363934, "start": 3653.34, "end": 3655.34, "text": " and let's increase the size of the neural net.", "tokens": [51065, 293, 718, 311, 3488, 264, 2744, 295, 264, 18161, 2533, 13, 51165], "temperature": 0.0, "avg_logprob": -0.11681109366657065, "compression_ratio": 1.8093385214007782, "no_speech_prob": 0.00015043008897919208}, {"id": 1494, "seek": 363934, "start": 3655.34, "end": 3657.34, "text": " The easiest way to do this", "tokens": [51165, 440, 12889, 636, 281, 360, 341, 51265], "temperature": 0.0, "avg_logprob": -0.11681109366657065, "compression_ratio": 1.8093385214007782, "no_speech_prob": 0.00015043008897919208}, {"id": 1495, "seek": 363934, "start": 3657.34, "end": 3659.34, "text": " is we can come here to the hidden layer", "tokens": [51265, 307, 321, 393, 808, 510, 281, 264, 7633, 4583, 51365], "temperature": 0.0, "avg_logprob": -0.11681109366657065, "compression_ratio": 1.8093385214007782, "no_speech_prob": 0.00015043008897919208}, {"id": 1496, "seek": 363934, "start": 3659.34, "end": 3661.34, "text": " which currently has 100 neurons.", "tokens": [51365, 597, 4362, 575, 2319, 22027, 13, 51465], "temperature": 0.0, "avg_logprob": -0.11681109366657065, "compression_ratio": 1.8093385214007782, "no_speech_prob": 0.00015043008897919208}, {"id": 1497, "seek": 363934, "start": 3661.34, "end": 3663.34, "text": " And let's just bump this up.", "tokens": [51465, 400, 718, 311, 445, 9961, 341, 493, 13, 51565], "temperature": 0.0, "avg_logprob": -0.11681109366657065, "compression_ratio": 1.8093385214007782, "no_speech_prob": 0.00015043008897919208}, {"id": 1498, "seek": 363934, "start": 3663.34, "end": 3665.34, "text": " So let's do 300 neurons.", "tokens": [51565, 407, 718, 311, 360, 6641, 22027, 13, 51665], "temperature": 0.0, "avg_logprob": -0.11681109366657065, "compression_ratio": 1.8093385214007782, "no_speech_prob": 0.00015043008897919208}, {"id": 1499, "seek": 363934, "start": 3665.34, "end": 3667.34, "text": " And then this is also 300 biases.", "tokens": [51665, 400, 550, 341, 307, 611, 6641, 32152, 13, 51765], "temperature": 0.0, "avg_logprob": -0.11681109366657065, "compression_ratio": 1.8093385214007782, "no_speech_prob": 0.00015043008897919208}, {"id": 1500, "seek": 363934, "start": 3667.34, "end": 3669.34, "text": " And here we have 300 inputs", "tokens": [51765, 400, 510, 321, 362, 6641, 15743, 51865], "temperature": 0.0, "avg_logprob": -0.11681109366657065, "compression_ratio": 1.8093385214007782, "no_speech_prob": 0.00015043008897919208}, {"id": 1501, "seek": 366934, "start": 3669.34, "end": 3671.34, "text": " that initialize our neural net.", "tokens": [50365, 300, 5883, 1125, 527, 18161, 2533, 13, 50465], "temperature": 0.0, "avg_logprob": -0.10562366909450954, "compression_ratio": 1.7277486910994764, "no_speech_prob": 0.0006712460308335721}, {"id": 1502, "seek": 366934, "start": 3671.34, "end": 3673.34, "text": " We now have 10,000 parameters", "tokens": [50465, 492, 586, 362, 1266, 11, 1360, 9834, 50565], "temperature": 0.0, "avg_logprob": -0.10562366909450954, "compression_ratio": 1.7277486910994764, "no_speech_prob": 0.0006712460308335721}, {"id": 1503, "seek": 366934, "start": 3673.34, "end": 3675.34, "text": " instead of 3,000 parameters.", "tokens": [50565, 2602, 295, 805, 11, 1360, 9834, 13, 50665], "temperature": 0.0, "avg_logprob": -0.10562366909450954, "compression_ratio": 1.7277486910994764, "no_speech_prob": 0.0006712460308335721}, {"id": 1504, "seek": 366934, "start": 3675.34, "end": 3677.34, "text": " And then we're not using this.", "tokens": [50665, 400, 550, 321, 434, 406, 1228, 341, 13, 50765], "temperature": 0.0, "avg_logprob": -0.10562366909450954, "compression_ratio": 1.7277486910994764, "no_speech_prob": 0.0006712460308335721}, {"id": 1505, "seek": 366934, "start": 3677.34, "end": 3679.34, "text": " And then here what I'd like to do", "tokens": [50765, 400, 550, 510, 437, 286, 1116, 411, 281, 360, 50865], "temperature": 0.0, "avg_logprob": -0.10562366909450954, "compression_ratio": 1.7277486910994764, "no_speech_prob": 0.0006712460308335721}, {"id": 1506, "seek": 366934, "start": 3679.34, "end": 3681.34, "text": " is I'd like to actually", "tokens": [50865, 307, 286, 1116, 411, 281, 767, 50965], "temperature": 0.0, "avg_logprob": -0.10562366909450954, "compression_ratio": 1.7277486910994764, "no_speech_prob": 0.0006712460308335721}, {"id": 1507, "seek": 366934, "start": 3681.34, "end": 3683.34, "text": " keep track of", "tokens": [50965, 1066, 2837, 295, 51065], "temperature": 0.0, "avg_logprob": -0.10562366909450954, "compression_ratio": 1.7277486910994764, "no_speech_prob": 0.0006712460308335721}, {"id": 1508, "seek": 366934, "start": 3687.34, "end": 3689.34, "text": " Okay, let's just do this.", "tokens": [51265, 1033, 11, 718, 311, 445, 360, 341, 13, 51365], "temperature": 0.0, "avg_logprob": -0.10562366909450954, "compression_ratio": 1.7277486910994764, "no_speech_prob": 0.0006712460308335721}, {"id": 1509, "seek": 366934, "start": 3689.34, "end": 3691.34, "text": " Let's keep stats again.", "tokens": [51365, 961, 311, 1066, 18152, 797, 13, 51465], "temperature": 0.0, "avg_logprob": -0.10562366909450954, "compression_ratio": 1.7277486910994764, "no_speech_prob": 0.0006712460308335721}, {"id": 1510, "seek": 366934, "start": 3691.34, "end": 3693.34, "text": " And here when we're keeping track of the", "tokens": [51465, 400, 510, 562, 321, 434, 5145, 2837, 295, 264, 51565], "temperature": 0.0, "avg_logprob": -0.10562366909450954, "compression_ratio": 1.7277486910994764, "no_speech_prob": 0.0006712460308335721}, {"id": 1511, "seek": 366934, "start": 3693.34, "end": 3695.34, "text": " loss", "tokens": [51565, 4470, 51665], "temperature": 0.0, "avg_logprob": -0.10562366909450954, "compression_ratio": 1.7277486910994764, "no_speech_prob": 0.0006712460308335721}, {"id": 1512, "seek": 366934, "start": 3695.34, "end": 3697.34, "text": " let's just also keep track of", "tokens": [51665, 718, 311, 445, 611, 1066, 2837, 295, 51765], "temperature": 0.0, "avg_logprob": -0.10562366909450954, "compression_ratio": 1.7277486910994764, "no_speech_prob": 0.0006712460308335721}, {"id": 1513, "seek": 366934, "start": 3697.34, "end": 3699.34, "text": " the steps.", "tokens": [51765, 264, 4439, 13, 51865], "temperature": 0.0, "avg_logprob": -0.10562366909450954, "compression_ratio": 1.7277486910994764, "no_speech_prob": 0.0006712460308335721}, {"id": 1514, "seek": 369934, "start": 3699.34, "end": 3701.34, "text": " I have an eye here.", "tokens": [50365, 286, 362, 364, 3313, 510, 13, 50465], "temperature": 0.0, "avg_logprob": -0.12181839413113064, "compression_ratio": 1.4596273291925466, "no_speech_prob": 0.00011903050472028553}, {"id": 1515, "seek": 369934, "start": 3701.34, "end": 3703.34, "text": " And let's train on 30,000", "tokens": [50465, 400, 718, 311, 3847, 322, 2217, 11, 1360, 50565], "temperature": 0.0, "avg_logprob": -0.12181839413113064, "compression_ratio": 1.4596273291925466, "no_speech_prob": 0.00011903050472028553}, {"id": 1516, "seek": 369934, "start": 3703.34, "end": 3705.34, "text": " or rather say", "tokens": [50565, 420, 2831, 584, 50665], "temperature": 0.0, "avg_logprob": -0.12181839413113064, "compression_ratio": 1.4596273291925466, "no_speech_prob": 0.00011903050472028553}, {"id": 1517, "seek": 369934, "start": 3705.34, "end": 3707.34, "text": " Okay, let's try 30,000.", "tokens": [50665, 1033, 11, 718, 311, 853, 2217, 11, 1360, 13, 50765], "temperature": 0.0, "avg_logprob": -0.12181839413113064, "compression_ratio": 1.4596273291925466, "no_speech_prob": 0.00011903050472028553}, {"id": 1518, "seek": 369934, "start": 3707.34, "end": 3709.34, "text": " And we are at 0.1", "tokens": [50765, 400, 321, 366, 412, 1958, 13, 16, 50865], "temperature": 0.0, "avg_logprob": -0.12181839413113064, "compression_ratio": 1.4596273291925466, "no_speech_prob": 0.00011903050472028553}, {"id": 1519, "seek": 369934, "start": 3711.34, "end": 3713.34, "text": " And we should", "tokens": [50965, 400, 321, 820, 51065], "temperature": 0.0, "avg_logprob": -0.12181839413113064, "compression_ratio": 1.4596273291925466, "no_speech_prob": 0.00011903050472028553}, {"id": 1520, "seek": 369934, "start": 3713.34, "end": 3715.34, "text": " be able to run this", "tokens": [51065, 312, 1075, 281, 1190, 341, 51165], "temperature": 0.0, "avg_logprob": -0.12181839413113064, "compression_ratio": 1.4596273291925466, "no_speech_prob": 0.00011903050472028553}, {"id": 1521, "seek": 369934, "start": 3715.34, "end": 3717.34, "text": " and optimize the neural net.", "tokens": [51165, 293, 19719, 264, 18161, 2533, 13, 51265], "temperature": 0.0, "avg_logprob": -0.12181839413113064, "compression_ratio": 1.4596273291925466, "no_speech_prob": 0.00011903050472028553}, {"id": 1522, "seek": 369934, "start": 3717.34, "end": 3719.34, "text": " And then here basically", "tokens": [51265, 400, 550, 510, 1936, 51365], "temperature": 0.0, "avg_logprob": -0.12181839413113064, "compression_ratio": 1.4596273291925466, "no_speech_prob": 0.00011903050472028553}, {"id": 1523, "seek": 369934, "start": 3719.34, "end": 3721.34, "text": " I want to plt.plot", "tokens": [51365, 286, 528, 281, 499, 83, 13, 564, 310, 51465], "temperature": 0.0, "avg_logprob": -0.12181839413113064, "compression_ratio": 1.4596273291925466, "no_speech_prob": 0.00011903050472028553}, {"id": 1524, "seek": 369934, "start": 3721.34, "end": 3723.34, "text": " the steps against", "tokens": [51465, 264, 4439, 1970, 51565], "temperature": 0.0, "avg_logprob": -0.12181839413113064, "compression_ratio": 1.4596273291925466, "no_speech_prob": 0.00011903050472028553}, {"id": 1525, "seek": 369934, "start": 3723.34, "end": 3725.34, "text": " the loss.", "tokens": [51565, 264, 4470, 13, 51665], "temperature": 0.0, "avg_logprob": -0.12181839413113064, "compression_ratio": 1.4596273291925466, "no_speech_prob": 0.00011903050472028553}, {"id": 1526, "seek": 372934, "start": 3729.34, "end": 3731.34, "text": " So these are the x's and the y's.", "tokens": [50365, 407, 613, 366, 264, 2031, 311, 293, 264, 288, 311, 13, 50465], "temperature": 0.0, "avg_logprob": -0.0882900653242254, "compression_ratio": 1.7924528301886793, "no_speech_prob": 0.0005388832069002092}, {"id": 1527, "seek": 372934, "start": 3731.34, "end": 3733.34, "text": " And this is", "tokens": [50465, 400, 341, 307, 50565], "temperature": 0.0, "avg_logprob": -0.0882900653242254, "compression_ratio": 1.7924528301886793, "no_speech_prob": 0.0005388832069002092}, {"id": 1528, "seek": 372934, "start": 3733.34, "end": 3735.34, "text": " the loss function", "tokens": [50565, 264, 4470, 2445, 50665], "temperature": 0.0, "avg_logprob": -0.0882900653242254, "compression_ratio": 1.7924528301886793, "no_speech_prob": 0.0005388832069002092}, {"id": 1529, "seek": 372934, "start": 3735.34, "end": 3737.34, "text": " and how it's being optimized.", "tokens": [50665, 293, 577, 309, 311, 885, 26941, 13, 50765], "temperature": 0.0, "avg_logprob": -0.0882900653242254, "compression_ratio": 1.7924528301886793, "no_speech_prob": 0.0005388832069002092}, {"id": 1530, "seek": 372934, "start": 3737.34, "end": 3739.34, "text": " Now you see that there's quite a bit of", "tokens": [50765, 823, 291, 536, 300, 456, 311, 1596, 257, 857, 295, 50865], "temperature": 0.0, "avg_logprob": -0.0882900653242254, "compression_ratio": 1.7924528301886793, "no_speech_prob": 0.0005388832069002092}, {"id": 1531, "seek": 372934, "start": 3739.34, "end": 3741.34, "text": " thickness to this.", "tokens": [50865, 14855, 281, 341, 13, 50965], "temperature": 0.0, "avg_logprob": -0.0882900653242254, "compression_ratio": 1.7924528301886793, "no_speech_prob": 0.0005388832069002092}, {"id": 1532, "seek": 372934, "start": 3741.34, "end": 3743.34, "text": " And that's because we are optimizing over these mini-batches.", "tokens": [50965, 400, 300, 311, 570, 321, 366, 40425, 670, 613, 8382, 12, 65, 852, 279, 13, 51065], "temperature": 0.0, "avg_logprob": -0.0882900653242254, "compression_ratio": 1.7924528301886793, "no_speech_prob": 0.0005388832069002092}, {"id": 1533, "seek": 372934, "start": 3743.34, "end": 3745.34, "text": " And the mini-batches create a little bit of noise", "tokens": [51065, 400, 264, 8382, 12, 65, 852, 279, 1884, 257, 707, 857, 295, 5658, 51165], "temperature": 0.0, "avg_logprob": -0.0882900653242254, "compression_ratio": 1.7924528301886793, "no_speech_prob": 0.0005388832069002092}, {"id": 1534, "seek": 372934, "start": 3745.34, "end": 3747.34, "text": " in this.", "tokens": [51165, 294, 341, 13, 51265], "temperature": 0.0, "avg_logprob": -0.0882900653242254, "compression_ratio": 1.7924528301886793, "no_speech_prob": 0.0005388832069002092}, {"id": 1535, "seek": 372934, "start": 3747.34, "end": 3749.34, "text": " Where are we in the def set?", "tokens": [51265, 2305, 366, 321, 294, 264, 1060, 992, 30, 51365], "temperature": 0.0, "avg_logprob": -0.0882900653242254, "compression_ratio": 1.7924528301886793, "no_speech_prob": 0.0005388832069002092}, {"id": 1536, "seek": 372934, "start": 3749.34, "end": 3751.34, "text": " We are at 2.5.", "tokens": [51365, 492, 366, 412, 568, 13, 20, 13, 51465], "temperature": 0.0, "avg_logprob": -0.0882900653242254, "compression_ratio": 1.7924528301886793, "no_speech_prob": 0.0005388832069002092}, {"id": 1537, "seek": 372934, "start": 3751.34, "end": 3753.34, "text": " So we still haven't optimized this neural net very well.", "tokens": [51465, 407, 321, 920, 2378, 380, 26941, 341, 18161, 2533, 588, 731, 13, 51565], "temperature": 0.0, "avg_logprob": -0.0882900653242254, "compression_ratio": 1.7924528301886793, "no_speech_prob": 0.0005388832069002092}, {"id": 1538, "seek": 372934, "start": 3753.34, "end": 3755.34, "text": " And that's probably because we made it bigger.", "tokens": [51565, 400, 300, 311, 1391, 570, 321, 1027, 309, 3801, 13, 51665], "temperature": 0.0, "avg_logprob": -0.0882900653242254, "compression_ratio": 1.7924528301886793, "no_speech_prob": 0.0005388832069002092}, {"id": 1539, "seek": 372934, "start": 3755.34, "end": 3757.34, "text": " It might take longer for this neural net to converge.", "tokens": [51665, 467, 1062, 747, 2854, 337, 341, 18161, 2533, 281, 41881, 13, 51765], "temperature": 0.0, "avg_logprob": -0.0882900653242254, "compression_ratio": 1.7924528301886793, "no_speech_prob": 0.0005388832069002092}, {"id": 1540, "seek": 375734, "start": 3757.34, "end": 3759.34, "text": " And so let's continue training.", "tokens": [50365, 400, 370, 718, 311, 2354, 3097, 13, 50465], "temperature": 0.0, "avg_logprob": -0.08691813548405965, "compression_ratio": 1.7461139896373057, "no_speech_prob": 0.0003394624509382993}, {"id": 1541, "seek": 375734, "start": 3761.34, "end": 3763.34, "text": " Yeah, let's just", "tokens": [50565, 865, 11, 718, 311, 445, 50665], "temperature": 0.0, "avg_logprob": -0.08691813548405965, "compression_ratio": 1.7461139896373057, "no_speech_prob": 0.0003394624509382993}, {"id": 1542, "seek": 375734, "start": 3763.34, "end": 3765.34, "text": " continue training.", "tokens": [50665, 2354, 3097, 13, 50765], "temperature": 0.0, "avg_logprob": -0.08691813548405965, "compression_ratio": 1.7461139896373057, "no_speech_prob": 0.0003394624509382993}, {"id": 1543, "seek": 375734, "start": 3765.34, "end": 3767.34, "text": " One possibility", "tokens": [50765, 1485, 7959, 50865], "temperature": 0.0, "avg_logprob": -0.08691813548405965, "compression_ratio": 1.7461139896373057, "no_speech_prob": 0.0003394624509382993}, {"id": 1544, "seek": 375734, "start": 3767.34, "end": 3769.34, "text": " is that the batch size is so low", "tokens": [50865, 307, 300, 264, 15245, 2744, 307, 370, 2295, 50965], "temperature": 0.0, "avg_logprob": -0.08691813548405965, "compression_ratio": 1.7461139896373057, "no_speech_prob": 0.0003394624509382993}, {"id": 1545, "seek": 375734, "start": 3769.34, "end": 3771.34, "text": " that we just have way too much", "tokens": [50965, 300, 321, 445, 362, 636, 886, 709, 51065], "temperature": 0.0, "avg_logprob": -0.08691813548405965, "compression_ratio": 1.7461139896373057, "no_speech_prob": 0.0003394624509382993}, {"id": 1546, "seek": 375734, "start": 3771.34, "end": 3773.34, "text": " noise in the training.", "tokens": [51065, 5658, 294, 264, 3097, 13, 51165], "temperature": 0.0, "avg_logprob": -0.08691813548405965, "compression_ratio": 1.7461139896373057, "no_speech_prob": 0.0003394624509382993}, {"id": 1547, "seek": 375734, "start": 3773.34, "end": 3775.34, "text": " And we may want to increase the batch size so that we have a bit more", "tokens": [51165, 400, 321, 815, 528, 281, 3488, 264, 15245, 2744, 370, 300, 321, 362, 257, 857, 544, 51265], "temperature": 0.0, "avg_logprob": -0.08691813548405965, "compression_ratio": 1.7461139896373057, "no_speech_prob": 0.0003394624509382993}, {"id": 1548, "seek": 375734, "start": 3775.34, "end": 3777.34, "text": " correct gradient.", "tokens": [51265, 3006, 16235, 13, 51365], "temperature": 0.0, "avg_logprob": -0.08691813548405965, "compression_ratio": 1.7461139896373057, "no_speech_prob": 0.0003394624509382993}, {"id": 1549, "seek": 375734, "start": 3777.34, "end": 3779.34, "text": " And we are not thrashing too much.", "tokens": [51365, 400, 321, 366, 406, 739, 11077, 886, 709, 13, 51465], "temperature": 0.0, "avg_logprob": -0.08691813548405965, "compression_ratio": 1.7461139896373057, "no_speech_prob": 0.0003394624509382993}, {"id": 1550, "seek": 375734, "start": 3779.34, "end": 3781.34, "text": " And we can actually optimize more properly.", "tokens": [51465, 400, 321, 393, 767, 19719, 544, 6108, 13, 51565], "temperature": 0.0, "avg_logprob": -0.08691813548405965, "compression_ratio": 1.7461139896373057, "no_speech_prob": 0.0003394624509382993}, {"id": 1551, "seek": 378734, "start": 3787.34, "end": 3789.34, "text": " This will now become", "tokens": [50365, 639, 486, 586, 1813, 50465], "temperature": 0.0, "avg_logprob": -0.12211837538753648, "compression_ratio": 1.4067796610169492, "no_speech_prob": 0.0023473133333027363}, {"id": 1552, "seek": 378734, "start": 3789.34, "end": 3791.34, "text": " meaningless because we've", "tokens": [50465, 33232, 570, 321, 600, 50565], "temperature": 0.0, "avg_logprob": -0.12211837538753648, "compression_ratio": 1.4067796610169492, "no_speech_prob": 0.0023473133333027363}, {"id": 1553, "seek": 378734, "start": 3791.34, "end": 3793.34, "text": " re-initialized these.", "tokens": [50565, 319, 12, 259, 270, 831, 1602, 613, 13, 50665], "temperature": 0.0, "avg_logprob": -0.12211837538753648, "compression_ratio": 1.4067796610169492, "no_speech_prob": 0.0023473133333027363}, {"id": 1554, "seek": 378734, "start": 3793.34, "end": 3795.34, "text": " This looks not", "tokens": [50665, 639, 1542, 406, 50765], "temperature": 0.0, "avg_logprob": -0.12211837538753648, "compression_ratio": 1.4067796610169492, "no_speech_prob": 0.0023473133333027363}, {"id": 1555, "seek": 378734, "start": 3795.34, "end": 3797.34, "text": " pleasing right now.", "tokens": [50765, 32798, 558, 586, 13, 50865], "temperature": 0.0, "avg_logprob": -0.12211837538753648, "compression_ratio": 1.4067796610169492, "no_speech_prob": 0.0023473133333027363}, {"id": 1556, "seek": 378734, "start": 3797.34, "end": 3799.34, "text": " But there probably is a tiny improvement", "tokens": [50865, 583, 456, 1391, 307, 257, 5870, 10444, 50965], "temperature": 0.0, "avg_logprob": -0.12211837538753648, "compression_ratio": 1.4067796610169492, "no_speech_prob": 0.0023473133333027363}, {"id": 1557, "seek": 378734, "start": 3799.34, "end": 3801.34, "text": " but it's so hard to tell.", "tokens": [50965, 457, 309, 311, 370, 1152, 281, 980, 13, 51065], "temperature": 0.0, "avg_logprob": -0.12211837538753648, "compression_ratio": 1.4067796610169492, "no_speech_prob": 0.0023473133333027363}, {"id": 1558, "seek": 378734, "start": 3801.34, "end": 3803.34, "text": " Let's go again.", "tokens": [51065, 961, 311, 352, 797, 13, 51165], "temperature": 0.0, "avg_logprob": -0.12211837538753648, "compression_ratio": 1.4067796610169492, "no_speech_prob": 0.0023473133333027363}, {"id": 1559, "seek": 378734, "start": 3803.34, "end": 3805.34, "text": " 2.52", "tokens": [51165, 568, 13, 17602, 51265], "temperature": 0.0, "avg_logprob": -0.12211837538753648, "compression_ratio": 1.4067796610169492, "no_speech_prob": 0.0023473133333027363}, {"id": 1560, "seek": 378734, "start": 3805.34, "end": 3807.34, "text": " Let's try to decrease the learning rate", "tokens": [51265, 961, 311, 853, 281, 11514, 264, 2539, 3314, 51365], "temperature": 0.0, "avg_logprob": -0.12211837538753648, "compression_ratio": 1.4067796610169492, "no_speech_prob": 0.0023473133333027363}, {"id": 1561, "seek": 378734, "start": 3807.34, "end": 3809.34, "text": " by a factor of 2.", "tokens": [51365, 538, 257, 5952, 295, 568, 13, 51465], "temperature": 0.0, "avg_logprob": -0.12211837538753648, "compression_ratio": 1.4067796610169492, "no_speech_prob": 0.0023473133333027363}, {"id": 1562, "seek": 381734, "start": 3817.34, "end": 3831.34, "text": " Okay, we're at 2.32.", "tokens": [50365, 1033, 11, 321, 434, 412, 568, 13, 11440, 13, 51065], "temperature": 0.0, "avg_logprob": -0.21229558331625803, "compression_ratio": 0.975609756097561, "no_speech_prob": 0.0052656675688922405}, {"id": 1563, "seek": 381734, "start": 3831.34, "end": 3833.34, "text": " Let's continue training.", "tokens": [51065, 961, 311, 2354, 3097, 13, 51165], "temperature": 0.0, "avg_logprob": -0.21229558331625803, "compression_ratio": 0.975609756097561, "no_speech_prob": 0.0052656675688922405}, {"id": 1564, "seek": 381734, "start": 3845.34, "end": 3847.34, "text": " We basically expect to see a lower", "tokens": [51765, 492, 1936, 2066, 281, 536, 257, 3126, 51865], "temperature": 0.0, "avg_logprob": -0.21229558331625803, "compression_ratio": 0.975609756097561, "no_speech_prob": 0.0052656675688922405}, {"id": 1565, "seek": 384734, "start": 3847.34, "end": 3849.34, "text": " loss than what we had before.", "tokens": [50365, 4470, 813, 437, 321, 632, 949, 13, 50465], "temperature": 0.0, "avg_logprob": -0.07233854850626881, "compression_ratio": 1.7309941520467835, "no_speech_prob": 0.0005332280998118222}, {"id": 1566, "seek": 384734, "start": 3849.34, "end": 3851.34, "text": " Because now we have a much much bigger model", "tokens": [50465, 1436, 586, 321, 362, 257, 709, 709, 3801, 2316, 50565], "temperature": 0.0, "avg_logprob": -0.07233854850626881, "compression_ratio": 1.7309941520467835, "no_speech_prob": 0.0005332280998118222}, {"id": 1567, "seek": 384734, "start": 3851.34, "end": 3853.34, "text": " and we were underfitting.", "tokens": [50565, 293, 321, 645, 833, 69, 2414, 13, 50665], "temperature": 0.0, "avg_logprob": -0.07233854850626881, "compression_ratio": 1.7309941520467835, "no_speech_prob": 0.0005332280998118222}, {"id": 1568, "seek": 384734, "start": 3853.34, "end": 3855.34, "text": " So we'd expect that increasing the size of the model should help the neural net.", "tokens": [50665, 407, 321, 1116, 2066, 300, 5662, 264, 2744, 295, 264, 2316, 820, 854, 264, 18161, 2533, 13, 50765], "temperature": 0.0, "avg_logprob": -0.07233854850626881, "compression_ratio": 1.7309941520467835, "no_speech_prob": 0.0005332280998118222}, {"id": 1569, "seek": 384734, "start": 3855.34, "end": 3857.34, "text": " 2.32", "tokens": [50765, 568, 13, 11440, 50865], "temperature": 0.0, "avg_logprob": -0.07233854850626881, "compression_ratio": 1.7309941520467835, "no_speech_prob": 0.0005332280998118222}, {"id": 1570, "seek": 384734, "start": 3857.34, "end": 3859.34, "text": " Okay, so that's not happening too well.", "tokens": [50865, 1033, 11, 370, 300, 311, 406, 2737, 886, 731, 13, 50965], "temperature": 0.0, "avg_logprob": -0.07233854850626881, "compression_ratio": 1.7309941520467835, "no_speech_prob": 0.0005332280998118222}, {"id": 1571, "seek": 384734, "start": 3859.34, "end": 3861.34, "text": " Now one other concern is that", "tokens": [50965, 823, 472, 661, 3136, 307, 300, 51065], "temperature": 0.0, "avg_logprob": -0.07233854850626881, "compression_ratio": 1.7309941520467835, "no_speech_prob": 0.0005332280998118222}, {"id": 1572, "seek": 384734, "start": 3861.34, "end": 3863.34, "text": " even though we've made the 10H layer here", "tokens": [51065, 754, 1673, 321, 600, 1027, 264, 1266, 39, 4583, 510, 51165], "temperature": 0.0, "avg_logprob": -0.07233854850626881, "compression_ratio": 1.7309941520467835, "no_speech_prob": 0.0005332280998118222}, {"id": 1573, "seek": 384734, "start": 3863.34, "end": 3865.34, "text": " or the hidden layer much much bigger", "tokens": [51165, 420, 264, 7633, 4583, 709, 709, 3801, 51265], "temperature": 0.0, "avg_logprob": -0.07233854850626881, "compression_ratio": 1.7309941520467835, "no_speech_prob": 0.0005332280998118222}, {"id": 1574, "seek": 384734, "start": 3865.34, "end": 3867.34, "text": " it could be that the bottleneck of the network", "tokens": [51265, 309, 727, 312, 300, 264, 44641, 547, 295, 264, 3209, 51365], "temperature": 0.0, "avg_logprob": -0.07233854850626881, "compression_ratio": 1.7309941520467835, "no_speech_prob": 0.0005332280998118222}, {"id": 1575, "seek": 384734, "start": 3867.34, "end": 3869.34, "text": " right now are these embeddings", "tokens": [51365, 558, 586, 366, 613, 12240, 29432, 51465], "temperature": 0.0, "avg_logprob": -0.07233854850626881, "compression_ratio": 1.7309941520467835, "no_speech_prob": 0.0005332280998118222}, {"id": 1576, "seek": 384734, "start": 3869.34, "end": 3871.34, "text": " that are two-dimensional.", "tokens": [51465, 300, 366, 732, 12, 18759, 13, 51565], "temperature": 0.0, "avg_logprob": -0.07233854850626881, "compression_ratio": 1.7309941520467835, "no_speech_prob": 0.0005332280998118222}, {"id": 1577, "seek": 384734, "start": 3871.34, "end": 3873.34, "text": " It can be that we're just cramming way too many characters", "tokens": [51565, 467, 393, 312, 300, 321, 434, 445, 941, 335, 2810, 636, 886, 867, 4342, 51665], "temperature": 0.0, "avg_logprob": -0.07233854850626881, "compression_ratio": 1.7309941520467835, "no_speech_prob": 0.0005332280998118222}, {"id": 1578, "seek": 384734, "start": 3873.34, "end": 3875.34, "text": " into just two dimensions", "tokens": [51665, 666, 445, 732, 12819, 51765], "temperature": 0.0, "avg_logprob": -0.07233854850626881, "compression_ratio": 1.7309941520467835, "no_speech_prob": 0.0005332280998118222}, {"id": 1579, "seek": 384734, "start": 3875.34, "end": 3877.34, "text": " and the neural net is not able to really use that space effectively.", "tokens": [51765, 293, 264, 18161, 2533, 307, 406, 1075, 281, 534, 764, 300, 1901, 8659, 13, 51865], "temperature": 0.0, "avg_logprob": -0.07233854850626881, "compression_ratio": 1.7309941520467835, "no_speech_prob": 0.0005332280998118222}, {"id": 1580, "seek": 387734, "start": 3877.34, "end": 3879.34, "text": " And that is sort of like", "tokens": [50365, 400, 300, 307, 1333, 295, 411, 50465], "temperature": 0.0, "avg_logprob": -0.05154909167373389, "compression_ratio": 1.5867768595041323, "no_speech_prob": 8.118384721456096e-05}, {"id": 1581, "seek": 387734, "start": 3879.34, "end": 3881.34, "text": " the bottleneck to our network's performance.", "tokens": [50465, 264, 44641, 547, 281, 527, 3209, 311, 3389, 13, 50565], "temperature": 0.0, "avg_logprob": -0.05154909167373389, "compression_ratio": 1.5867768595041323, "no_speech_prob": 8.118384721456096e-05}, {"id": 1582, "seek": 387734, "start": 3881.34, "end": 3883.34, "text": " Okay, 2.23", "tokens": [50565, 1033, 11, 568, 13, 9356, 50665], "temperature": 0.0, "avg_logprob": -0.05154909167373389, "compression_ratio": 1.5867768595041323, "no_speech_prob": 8.118384721456096e-05}, {"id": 1583, "seek": 387734, "start": 3883.34, "end": 3885.34, "text": " So just by decreasing the learning rate", "tokens": [50665, 407, 445, 538, 23223, 264, 2539, 3314, 50765], "temperature": 0.0, "avg_logprob": -0.05154909167373389, "compression_ratio": 1.5867768595041323, "no_speech_prob": 8.118384721456096e-05}, {"id": 1584, "seek": 387734, "start": 3885.34, "end": 3887.34, "text": " I was able to make quite a bit of progress.", "tokens": [50765, 286, 390, 1075, 281, 652, 1596, 257, 857, 295, 4205, 13, 50865], "temperature": 0.0, "avg_logprob": -0.05154909167373389, "compression_ratio": 1.5867768595041323, "no_speech_prob": 8.118384721456096e-05}, {"id": 1585, "seek": 387734, "start": 3887.34, "end": 3889.34, "text": " Let's run this one more time.", "tokens": [50865, 961, 311, 1190, 341, 472, 544, 565, 13, 50965], "temperature": 0.0, "avg_logprob": -0.05154909167373389, "compression_ratio": 1.5867768595041323, "no_speech_prob": 8.118384721456096e-05}, {"id": 1586, "seek": 387734, "start": 3891.34, "end": 3893.34, "text": " And then evaluate the training", "tokens": [51065, 400, 550, 13059, 264, 3097, 51165], "temperature": 0.0, "avg_logprob": -0.05154909167373389, "compression_ratio": 1.5867768595041323, "no_speech_prob": 8.118384721456096e-05}, {"id": 1587, "seek": 387734, "start": 3893.34, "end": 3895.34, "text": " and the dev loss.", "tokens": [51165, 293, 264, 1905, 4470, 13, 51265], "temperature": 0.0, "avg_logprob": -0.05154909167373389, "compression_ratio": 1.5867768595041323, "no_speech_prob": 8.118384721456096e-05}, {"id": 1588, "seek": 387734, "start": 3895.34, "end": 3897.34, "text": " Now one more thing", "tokens": [51265, 823, 472, 544, 551, 51365], "temperature": 0.0, "avg_logprob": -0.05154909167373389, "compression_ratio": 1.5867768595041323, "no_speech_prob": 8.118384721456096e-05}, {"id": 1589, "seek": 387734, "start": 3897.34, "end": 3899.34, "text": " after training that I'd like to do", "tokens": [51365, 934, 3097, 300, 286, 1116, 411, 281, 360, 51465], "temperature": 0.0, "avg_logprob": -0.05154909167373389, "compression_ratio": 1.5867768595041323, "no_speech_prob": 8.118384721456096e-05}, {"id": 1590, "seek": 387734, "start": 3899.34, "end": 3901.34, "text": " is I'd like to visualize", "tokens": [51465, 307, 286, 1116, 411, 281, 23273, 51565], "temperature": 0.0, "avg_logprob": -0.05154909167373389, "compression_ratio": 1.5867768595041323, "no_speech_prob": 8.118384721456096e-05}, {"id": 1591, "seek": 387734, "start": 3901.34, "end": 3903.34, "text": " the embedding vectors", "tokens": [51565, 264, 12240, 3584, 18875, 51665], "temperature": 0.0, "avg_logprob": -0.05154909167373389, "compression_ratio": 1.5867768595041323, "no_speech_prob": 8.118384721456096e-05}, {"id": 1592, "seek": 387734, "start": 3903.34, "end": 3905.34, "text": " for these", "tokens": [51665, 337, 613, 51765], "temperature": 0.0, "avg_logprob": -0.05154909167373389, "compression_ratio": 1.5867768595041323, "no_speech_prob": 8.118384721456096e-05}, {"id": 1593, "seek": 387734, "start": 3905.34, "end": 3907.34, "text": " characters before we scale up", "tokens": [51765, 4342, 949, 321, 4373, 493, 51865], "temperature": 0.0, "avg_logprob": -0.05154909167373389, "compression_ratio": 1.5867768595041323, "no_speech_prob": 8.118384721456096e-05}, {"id": 1594, "seek": 390734, "start": 3907.34, "end": 3909.34, "text": " the embedding size from 2.", "tokens": [50365, 264, 12240, 3584, 2744, 490, 568, 13, 50465], "temperature": 0.0, "avg_logprob": -0.05355187971814931, "compression_ratio": 1.7756653992395437, "no_speech_prob": 8.173043170245364e-05}, {"id": 1595, "seek": 390734, "start": 3909.34, "end": 3911.34, "text": " Because we'd like to make", "tokens": [50465, 1436, 321, 1116, 411, 281, 652, 50565], "temperature": 0.0, "avg_logprob": -0.05355187971814931, "compression_ratio": 1.7756653992395437, "no_speech_prob": 8.173043170245364e-05}, {"id": 1596, "seek": 390734, "start": 3911.34, "end": 3913.34, "text": " this bottleneck potentially go away.", "tokens": [50565, 341, 44641, 547, 7263, 352, 1314, 13, 50665], "temperature": 0.0, "avg_logprob": -0.05355187971814931, "compression_ratio": 1.7756653992395437, "no_speech_prob": 8.173043170245364e-05}, {"id": 1597, "seek": 390734, "start": 3913.34, "end": 3915.34, "text": " But once I make this greater than 2", "tokens": [50665, 583, 1564, 286, 652, 341, 5044, 813, 568, 50765], "temperature": 0.0, "avg_logprob": -0.05355187971814931, "compression_ratio": 1.7756653992395437, "no_speech_prob": 8.173043170245364e-05}, {"id": 1598, "seek": 390734, "start": 3915.34, "end": 3917.34, "text": " we won't be able to visualize them.", "tokens": [50765, 321, 1582, 380, 312, 1075, 281, 23273, 552, 13, 50865], "temperature": 0.0, "avg_logprob": -0.05355187971814931, "compression_ratio": 1.7756653992395437, "no_speech_prob": 8.173043170245364e-05}, {"id": 1599, "seek": 390734, "start": 3917.34, "end": 3919.34, "text": " So here, okay we're at 2.23", "tokens": [50865, 407, 510, 11, 1392, 321, 434, 412, 568, 13, 9356, 50965], "temperature": 0.0, "avg_logprob": -0.05355187971814931, "compression_ratio": 1.7756653992395437, "no_speech_prob": 8.173043170245364e-05}, {"id": 1600, "seek": 390734, "start": 3919.34, "end": 3921.34, "text": " and 2.24", "tokens": [50965, 293, 568, 13, 7911, 51065], "temperature": 0.0, "avg_logprob": -0.05355187971814931, "compression_ratio": 1.7756653992395437, "no_speech_prob": 8.173043170245364e-05}, {"id": 1601, "seek": 390734, "start": 3921.34, "end": 3923.34, "text": " so we're not improving", "tokens": [51065, 370, 321, 434, 406, 11470, 51165], "temperature": 0.0, "avg_logprob": -0.05355187971814931, "compression_ratio": 1.7756653992395437, "no_speech_prob": 8.173043170245364e-05}, {"id": 1602, "seek": 390734, "start": 3923.34, "end": 3925.34, "text": " much more and maybe the bottleneck now", "tokens": [51165, 709, 544, 293, 1310, 264, 44641, 547, 586, 51265], "temperature": 0.0, "avg_logprob": -0.05355187971814931, "compression_ratio": 1.7756653992395437, "no_speech_prob": 8.173043170245364e-05}, {"id": 1603, "seek": 390734, "start": 3925.34, "end": 3927.34, "text": " is the character embedding size which is 2.", "tokens": [51265, 307, 264, 2517, 12240, 3584, 2744, 597, 307, 568, 13, 51365], "temperature": 0.0, "avg_logprob": -0.05355187971814931, "compression_ratio": 1.7756653992395437, "no_speech_prob": 8.173043170245364e-05}, {"id": 1604, "seek": 390734, "start": 3927.34, "end": 3929.34, "text": " So here I have a bunch", "tokens": [51365, 407, 510, 286, 362, 257, 3840, 51465], "temperature": 0.0, "avg_logprob": -0.05355187971814931, "compression_ratio": 1.7756653992395437, "no_speech_prob": 8.173043170245364e-05}, {"id": 1605, "seek": 390734, "start": 3929.34, "end": 3931.34, "text": " of code that will create a figure", "tokens": [51465, 295, 3089, 300, 486, 1884, 257, 2573, 51565], "temperature": 0.0, "avg_logprob": -0.05355187971814931, "compression_ratio": 1.7756653992395437, "no_speech_prob": 8.173043170245364e-05}, {"id": 1606, "seek": 390734, "start": 3931.34, "end": 3933.34, "text": " and then we're going to visualize", "tokens": [51565, 293, 550, 321, 434, 516, 281, 23273, 51665], "temperature": 0.0, "avg_logprob": -0.05355187971814931, "compression_ratio": 1.7756653992395437, "no_speech_prob": 8.173043170245364e-05}, {"id": 1607, "seek": 390734, "start": 3933.34, "end": 3935.34, "text": " the embeddings that were trained", "tokens": [51665, 264, 12240, 29432, 300, 645, 8895, 51765], "temperature": 0.0, "avg_logprob": -0.05355187971814931, "compression_ratio": 1.7756653992395437, "no_speech_prob": 8.173043170245364e-05}, {"id": 1608, "seek": 390734, "start": 3935.34, "end": 3937.34, "text": " by the neural net on these characters.", "tokens": [51765, 538, 264, 18161, 2533, 322, 613, 4342, 13, 51865], "temperature": 0.0, "avg_logprob": -0.05355187971814931, "compression_ratio": 1.7756653992395437, "no_speech_prob": 8.173043170245364e-05}, {"id": 1609, "seek": 393734, "start": 3937.34, "end": 3939.34, "text": " Because right now the embedding size is just 2", "tokens": [50365, 1436, 558, 586, 264, 12240, 3584, 2744, 307, 445, 568, 50465], "temperature": 0.0, "avg_logprob": -0.06484221655224996, "compression_ratio": 1.8715953307392996, "no_speech_prob": 0.00038639098056592047}, {"id": 1610, "seek": 393734, "start": 3939.34, "end": 3941.34, "text": " so we can visualize all the characters", "tokens": [50465, 370, 321, 393, 23273, 439, 264, 4342, 50565], "temperature": 0.0, "avg_logprob": -0.06484221655224996, "compression_ratio": 1.8715953307392996, "no_speech_prob": 0.00038639098056592047}, {"id": 1611, "seek": 393734, "start": 3941.34, "end": 3943.34, "text": " with the x and the y coordinates", "tokens": [50565, 365, 264, 2031, 293, 264, 288, 21056, 50665], "temperature": 0.0, "avg_logprob": -0.06484221655224996, "compression_ratio": 1.8715953307392996, "no_speech_prob": 0.00038639098056592047}, {"id": 1612, "seek": 393734, "start": 3943.34, "end": 3945.34, "text": " as the two embedding locations", "tokens": [50665, 382, 264, 732, 12240, 3584, 9253, 50765], "temperature": 0.0, "avg_logprob": -0.06484221655224996, "compression_ratio": 1.8715953307392996, "no_speech_prob": 0.00038639098056592047}, {"id": 1613, "seek": 393734, "start": 3945.34, "end": 3947.34, "text": " for each of these characters.", "tokens": [50765, 337, 1184, 295, 613, 4342, 13, 50865], "temperature": 0.0, "avg_logprob": -0.06484221655224996, "compression_ratio": 1.8715953307392996, "no_speech_prob": 0.00038639098056592047}, {"id": 1614, "seek": 393734, "start": 3947.34, "end": 3949.34, "text": " And so here are the", "tokens": [50865, 400, 370, 510, 366, 264, 50965], "temperature": 0.0, "avg_logprob": -0.06484221655224996, "compression_ratio": 1.8715953307392996, "no_speech_prob": 0.00038639098056592047}, {"id": 1615, "seek": 393734, "start": 3949.34, "end": 3951.34, "text": " x coordinates and the y coordinates", "tokens": [50965, 2031, 21056, 293, 264, 288, 21056, 51065], "temperature": 0.0, "avg_logprob": -0.06484221655224996, "compression_ratio": 1.8715953307392996, "no_speech_prob": 0.00038639098056592047}, {"id": 1616, "seek": 393734, "start": 3951.34, "end": 3953.34, "text": " which are the columns of C", "tokens": [51065, 597, 366, 264, 13766, 295, 383, 51165], "temperature": 0.0, "avg_logprob": -0.06484221655224996, "compression_ratio": 1.8715953307392996, "no_speech_prob": 0.00038639098056592047}, {"id": 1617, "seek": 393734, "start": 3953.34, "end": 3955.34, "text": " and then for each one I also include", "tokens": [51165, 293, 550, 337, 1184, 472, 286, 611, 4090, 51265], "temperature": 0.0, "avg_logprob": -0.06484221655224996, "compression_ratio": 1.8715953307392996, "no_speech_prob": 0.00038639098056592047}, {"id": 1618, "seek": 393734, "start": 3955.34, "end": 3957.34, "text": " the text of the little character.", "tokens": [51265, 264, 2487, 295, 264, 707, 2517, 13, 51365], "temperature": 0.0, "avg_logprob": -0.06484221655224996, "compression_ratio": 1.8715953307392996, "no_speech_prob": 0.00038639098056592047}, {"id": 1619, "seek": 393734, "start": 3957.34, "end": 3959.34, "text": " So here what we see", "tokens": [51365, 407, 510, 437, 321, 536, 51465], "temperature": 0.0, "avg_logprob": -0.06484221655224996, "compression_ratio": 1.8715953307392996, "no_speech_prob": 0.00038639098056592047}, {"id": 1620, "seek": 393734, "start": 3959.34, "end": 3961.34, "text": " is actually kind of interesting.", "tokens": [51465, 307, 767, 733, 295, 1880, 13, 51565], "temperature": 0.0, "avg_logprob": -0.06484221655224996, "compression_ratio": 1.8715953307392996, "no_speech_prob": 0.00038639098056592047}, {"id": 1621, "seek": 393734, "start": 3961.34, "end": 3963.34, "text": " The network has", "tokens": [51565, 440, 3209, 575, 51665], "temperature": 0.0, "avg_logprob": -0.06484221655224996, "compression_ratio": 1.8715953307392996, "no_speech_prob": 0.00038639098056592047}, {"id": 1622, "seek": 393734, "start": 3963.34, "end": 3965.34, "text": " basically learned to separate out", "tokens": [51665, 1936, 3264, 281, 4994, 484, 51765], "temperature": 0.0, "avg_logprob": -0.06484221655224996, "compression_ratio": 1.8715953307392996, "no_speech_prob": 0.00038639098056592047}, {"id": 1623, "seek": 393734, "start": 3965.34, "end": 3967.34, "text": " the characters and cluster them a little bit", "tokens": [51765, 264, 4342, 293, 13630, 552, 257, 707, 857, 51865], "temperature": 0.0, "avg_logprob": -0.06484221655224996, "compression_ratio": 1.8715953307392996, "no_speech_prob": 0.00038639098056592047}, {"id": 1624, "seek": 396734, "start": 3967.34, "end": 3969.34, "text": " so for example you see how the vowels", "tokens": [50365, 370, 337, 1365, 291, 536, 577, 264, 44972, 50465], "temperature": 0.0, "avg_logprob": -0.09809166750461935, "compression_ratio": 1.9049429657794676, "no_speech_prob": 0.00010926045797532424}, {"id": 1625, "seek": 396734, "start": 3969.34, "end": 3971.34, "text": " a, e, i, o, u", "tokens": [50465, 257, 11, 308, 11, 741, 11, 277, 11, 344, 50565], "temperature": 0.0, "avg_logprob": -0.09809166750461935, "compression_ratio": 1.9049429657794676, "no_speech_prob": 0.00010926045797532424}, {"id": 1626, "seek": 396734, "start": 3971.34, "end": 3973.34, "text": " are clustered up here", "tokens": [50565, 366, 596, 38624, 493, 510, 50665], "temperature": 0.0, "avg_logprob": -0.09809166750461935, "compression_ratio": 1.9049429657794676, "no_speech_prob": 0.00010926045797532424}, {"id": 1627, "seek": 396734, "start": 3973.34, "end": 3975.34, "text": " so what that's telling us is that the neural net", "tokens": [50665, 370, 437, 300, 311, 3585, 505, 307, 300, 264, 18161, 2533, 50765], "temperature": 0.0, "avg_logprob": -0.09809166750461935, "compression_ratio": 1.9049429657794676, "no_speech_prob": 0.00010926045797532424}, {"id": 1628, "seek": 396734, "start": 3975.34, "end": 3977.34, "text": " treats these as very similar", "tokens": [50765, 19566, 613, 382, 588, 2531, 50865], "temperature": 0.0, "avg_logprob": -0.09809166750461935, "compression_ratio": 1.9049429657794676, "no_speech_prob": 0.00010926045797532424}, {"id": 1629, "seek": 396734, "start": 3977.34, "end": 3979.34, "text": " because when they feed into the neural net", "tokens": [50865, 570, 562, 436, 3154, 666, 264, 18161, 2533, 50965], "temperature": 0.0, "avg_logprob": -0.09809166750461935, "compression_ratio": 1.9049429657794676, "no_speech_prob": 0.00010926045797532424}, {"id": 1630, "seek": 396734, "start": 3979.34, "end": 3981.34, "text": " the embedding for all these characters", "tokens": [50965, 264, 12240, 3584, 337, 439, 613, 4342, 51065], "temperature": 0.0, "avg_logprob": -0.09809166750461935, "compression_ratio": 1.9049429657794676, "no_speech_prob": 0.00010926045797532424}, {"id": 1631, "seek": 396734, "start": 3981.34, "end": 3983.34, "text": " is very similar and so the neural net", "tokens": [51065, 307, 588, 2531, 293, 370, 264, 18161, 2533, 51165], "temperature": 0.0, "avg_logprob": -0.09809166750461935, "compression_ratio": 1.9049429657794676, "no_speech_prob": 0.00010926045797532424}, {"id": 1632, "seek": 396734, "start": 3983.34, "end": 3985.34, "text": " thinks that they're very similar", "tokens": [51165, 7309, 300, 436, 434, 588, 2531, 51265], "temperature": 0.0, "avg_logprob": -0.09809166750461935, "compression_ratio": 1.9049429657794676, "no_speech_prob": 0.00010926045797532424}, {"id": 1633, "seek": 396734, "start": 3985.34, "end": 3987.34, "text": " and kind of like interchangeable", "tokens": [51265, 293, 733, 295, 411, 30358, 712, 51365], "temperature": 0.0, "avg_logprob": -0.09809166750461935, "compression_ratio": 1.9049429657794676, "no_speech_prob": 0.00010926045797532424}, {"id": 1634, "seek": 396734, "start": 3987.34, "end": 3989.34, "text": " if that makes sense.", "tokens": [51365, 498, 300, 1669, 2020, 13, 51465], "temperature": 0.0, "avg_logprob": -0.09809166750461935, "compression_ratio": 1.9049429657794676, "no_speech_prob": 0.00010926045797532424}, {"id": 1635, "seek": 396734, "start": 3989.34, "end": 3991.34, "text": " Then the points that are like", "tokens": [51465, 1396, 264, 2793, 300, 366, 411, 51565], "temperature": 0.0, "avg_logprob": -0.09809166750461935, "compression_ratio": 1.9049429657794676, "no_speech_prob": 0.00010926045797532424}, {"id": 1636, "seek": 396734, "start": 3991.34, "end": 3993.34, "text": " really far away are for example Q", "tokens": [51565, 534, 1400, 1314, 366, 337, 1365, 1249, 51665], "temperature": 0.0, "avg_logprob": -0.09809166750461935, "compression_ratio": 1.9049429657794676, "no_speech_prob": 0.00010926045797532424}, {"id": 1637, "seek": 396734, "start": 3993.34, "end": 3995.34, "text": " Q is kind of treated as an exception", "tokens": [51665, 1249, 307, 733, 295, 8668, 382, 364, 11183, 51765], "temperature": 0.0, "avg_logprob": -0.09809166750461935, "compression_ratio": 1.9049429657794676, "no_speech_prob": 0.00010926045797532424}, {"id": 1638, "seek": 396734, "start": 3995.34, "end": 3997.34, "text": " and Q has a very special embedding vector", "tokens": [51765, 293, 1249, 575, 257, 588, 2121, 12240, 3584, 8062, 51865], "temperature": 0.0, "avg_logprob": -0.09809166750461935, "compression_ratio": 1.9049429657794676, "no_speech_prob": 0.00010926045797532424}, {"id": 1639, "seek": 399734, "start": 3997.34, "end": 3999.34, "text": " so to speak.", "tokens": [50365, 370, 281, 1710, 13, 50465], "temperature": 0.0, "avg_logprob": -0.06832445008414133, "compression_ratio": 1.6966666666666668, "no_speech_prob": 0.00013098663475830108}, {"id": 1640, "seek": 399734, "start": 3999.34, "end": 4001.34, "text": " Similarly dot, which is a special character", "tokens": [50465, 13157, 5893, 11, 597, 307, 257, 2121, 2517, 50565], "temperature": 0.0, "avg_logprob": -0.06832445008414133, "compression_ratio": 1.6966666666666668, "no_speech_prob": 0.00013098663475830108}, {"id": 1641, "seek": 399734, "start": 4001.34, "end": 4003.34, "text": " is all the way out here", "tokens": [50565, 307, 439, 264, 636, 484, 510, 50665], "temperature": 0.0, "avg_logprob": -0.06832445008414133, "compression_ratio": 1.6966666666666668, "no_speech_prob": 0.00013098663475830108}, {"id": 1642, "seek": 399734, "start": 4003.34, "end": 4005.34, "text": " and a lot of the other letters are sort of like", "tokens": [50665, 293, 257, 688, 295, 264, 661, 7825, 366, 1333, 295, 411, 50765], "temperature": 0.0, "avg_logprob": -0.06832445008414133, "compression_ratio": 1.6966666666666668, "no_speech_prob": 0.00013098663475830108}, {"id": 1643, "seek": 399734, "start": 4005.34, "end": 4007.34, "text": " clustered up here.", "tokens": [50765, 596, 38624, 493, 510, 13, 50865], "temperature": 0.0, "avg_logprob": -0.06832445008414133, "compression_ratio": 1.6966666666666668, "no_speech_prob": 0.00013098663475830108}, {"id": 1644, "seek": 399734, "start": 4007.34, "end": 4009.34, "text": " And so it's kind of interesting that there's", "tokens": [50865, 400, 370, 309, 311, 733, 295, 1880, 300, 456, 311, 50965], "temperature": 0.0, "avg_logprob": -0.06832445008414133, "compression_ratio": 1.6966666666666668, "no_speech_prob": 0.00013098663475830108}, {"id": 1645, "seek": 399734, "start": 4009.34, "end": 4011.34, "text": " a little bit of structure here", "tokens": [50965, 257, 707, 857, 295, 3877, 510, 51065], "temperature": 0.0, "avg_logprob": -0.06832445008414133, "compression_ratio": 1.6966666666666668, "no_speech_prob": 0.00013098663475830108}, {"id": 1646, "seek": 399734, "start": 4011.34, "end": 4013.34, "text": " after the training and it's not", "tokens": [51065, 934, 264, 3097, 293, 309, 311, 406, 51165], "temperature": 0.0, "avg_logprob": -0.06832445008414133, "compression_ratio": 1.6966666666666668, "no_speech_prob": 0.00013098663475830108}, {"id": 1647, "seek": 399734, "start": 4013.34, "end": 4015.34, "text": " definitely not random and these embeddings", "tokens": [51165, 2138, 406, 4974, 293, 613, 12240, 29432, 51265], "temperature": 0.0, "avg_logprob": -0.06832445008414133, "compression_ratio": 1.6966666666666668, "no_speech_prob": 0.00013098663475830108}, {"id": 1648, "seek": 399734, "start": 4015.34, "end": 4017.34, "text": " make sense.", "tokens": [51265, 652, 2020, 13, 51365], "temperature": 0.0, "avg_logprob": -0.06832445008414133, "compression_ratio": 1.6966666666666668, "no_speech_prob": 0.00013098663475830108}, {"id": 1649, "seek": 399734, "start": 4017.34, "end": 4019.34, "text": " So we're now going to scale up the embedding size", "tokens": [51365, 407, 321, 434, 586, 516, 281, 4373, 493, 264, 12240, 3584, 2744, 51465], "temperature": 0.0, "avg_logprob": -0.06832445008414133, "compression_ratio": 1.6966666666666668, "no_speech_prob": 0.00013098663475830108}, {"id": 1650, "seek": 399734, "start": 4019.34, "end": 4021.34, "text": " and won't be able to visualize it directly", "tokens": [51465, 293, 1582, 380, 312, 1075, 281, 23273, 309, 3838, 51565], "temperature": 0.0, "avg_logprob": -0.06832445008414133, "compression_ratio": 1.6966666666666668, "no_speech_prob": 0.00013098663475830108}, {"id": 1651, "seek": 399734, "start": 4021.34, "end": 4023.34, "text": " but we expect that because we're underfitting", "tokens": [51565, 457, 321, 2066, 300, 570, 321, 434, 833, 69, 2414, 51665], "temperature": 0.0, "avg_logprob": -0.06832445008414133, "compression_ratio": 1.6966666666666668, "no_speech_prob": 0.00013098663475830108}, {"id": 1652, "seek": 399734, "start": 4023.34, "end": 4025.34, "text": " and we made this layer", "tokens": [51665, 293, 321, 1027, 341, 4583, 51765], "temperature": 0.0, "avg_logprob": -0.06832445008414133, "compression_ratio": 1.6966666666666668, "no_speech_prob": 0.00013098663475830108}, {"id": 1653, "seek": 399734, "start": 4025.34, "end": 4027.34, "text": " much bigger and did not sufficiently", "tokens": [51765, 709, 3801, 293, 630, 406, 31868, 51865], "temperature": 0.0, "avg_logprob": -0.06832445008414133, "compression_ratio": 1.6966666666666668, "no_speech_prob": 0.00013098663475830108}, {"id": 1654, "seek": 402734, "start": 4027.34, "end": 4029.34, "text": " improve the loss, we're thinking that the", "tokens": [50365, 3470, 264, 4470, 11, 321, 434, 1953, 300, 264, 50465], "temperature": 0.0, "avg_logprob": -0.08492843243254333, "compression_ratio": 1.7119341563786008, "no_speech_prob": 0.00010546199337113649}, {"id": 1655, "seek": 402734, "start": 4029.34, "end": 4031.34, "text": " constraint", "tokens": [50465, 25534, 50565], "temperature": 0.0, "avg_logprob": -0.08492843243254333, "compression_ratio": 1.7119341563786008, "no_speech_prob": 0.00010546199337113649}, {"id": 1656, "seek": 402734, "start": 4031.34, "end": 4033.34, "text": " to better performance right now", "tokens": [50565, 281, 1101, 3389, 558, 586, 50665], "temperature": 0.0, "avg_logprob": -0.08492843243254333, "compression_ratio": 1.7119341563786008, "no_speech_prob": 0.00010546199337113649}, {"id": 1657, "seek": 402734, "start": 4033.34, "end": 4035.34, "text": " could be these embedding vectors.", "tokens": [50665, 727, 312, 613, 12240, 3584, 18875, 13, 50765], "temperature": 0.0, "avg_logprob": -0.08492843243254333, "compression_ratio": 1.7119341563786008, "no_speech_prob": 0.00010546199337113649}, {"id": 1658, "seek": 402734, "start": 4035.34, "end": 4037.34, "text": " So let's make them bigger.", "tokens": [50765, 407, 718, 311, 652, 552, 3801, 13, 50865], "temperature": 0.0, "avg_logprob": -0.08492843243254333, "compression_ratio": 1.7119341563786008, "no_speech_prob": 0.00010546199337113649}, {"id": 1659, "seek": 402734, "start": 4037.34, "end": 4039.34, "text": " So let's scroll up here and now we don't have", "tokens": [50865, 407, 718, 311, 11369, 493, 510, 293, 586, 321, 500, 380, 362, 50965], "temperature": 0.0, "avg_logprob": -0.08492843243254333, "compression_ratio": 1.7119341563786008, "no_speech_prob": 0.00010546199337113649}, {"id": 1660, "seek": 402734, "start": 4039.34, "end": 4041.34, "text": " two dimensional embeddings, we are going to have", "tokens": [50965, 732, 18795, 12240, 29432, 11, 321, 366, 516, 281, 362, 51065], "temperature": 0.0, "avg_logprob": -0.08492843243254333, "compression_ratio": 1.7119341563786008, "no_speech_prob": 0.00010546199337113649}, {"id": 1661, "seek": 402734, "start": 4041.34, "end": 4043.34, "text": " say 10 dimensional embeddings", "tokens": [51065, 584, 1266, 18795, 12240, 29432, 51165], "temperature": 0.0, "avg_logprob": -0.08492843243254333, "compression_ratio": 1.7119341563786008, "no_speech_prob": 0.00010546199337113649}, {"id": 1662, "seek": 402734, "start": 4043.34, "end": 4045.34, "text": " for each word.", "tokens": [51165, 337, 1184, 1349, 13, 51265], "temperature": 0.0, "avg_logprob": -0.08492843243254333, "compression_ratio": 1.7119341563786008, "no_speech_prob": 0.00010546199337113649}, {"id": 1663, "seek": 402734, "start": 4045.34, "end": 4047.34, "text": " Then this layer will receive", "tokens": [51265, 1396, 341, 4583, 486, 4774, 51365], "temperature": 0.0, "avg_logprob": -0.08492843243254333, "compression_ratio": 1.7119341563786008, "no_speech_prob": 0.00010546199337113649}, {"id": 1664, "seek": 402734, "start": 4047.34, "end": 4049.34, "text": " 3 times 10", "tokens": [51365, 805, 1413, 1266, 51465], "temperature": 0.0, "avg_logprob": -0.08492843243254333, "compression_ratio": 1.7119341563786008, "no_speech_prob": 0.00010546199337113649}, {"id": 1665, "seek": 402734, "start": 4049.34, "end": 4051.34, "text": " so 30 inputs", "tokens": [51465, 370, 2217, 15743, 51565], "temperature": 0.0, "avg_logprob": -0.08492843243254333, "compression_ratio": 1.7119341563786008, "no_speech_prob": 0.00010546199337113649}, {"id": 1666, "seek": 402734, "start": 4051.34, "end": 4053.34, "text": " will go into", "tokens": [51565, 486, 352, 666, 51665], "temperature": 0.0, "avg_logprob": -0.08492843243254333, "compression_ratio": 1.7119341563786008, "no_speech_prob": 0.00010546199337113649}, {"id": 1667, "seek": 402734, "start": 4053.34, "end": 4055.34, "text": " the hidden layer.", "tokens": [51665, 264, 7633, 4583, 13, 51765], "temperature": 0.0, "avg_logprob": -0.08492843243254333, "compression_ratio": 1.7119341563786008, "no_speech_prob": 0.00010546199337113649}, {"id": 1668, "seek": 402734, "start": 4055.34, "end": 4057.34, "text": " Let's also make the hidden layer a bit smaller", "tokens": [51765, 961, 311, 611, 652, 264, 7633, 4583, 257, 857, 4356, 51865], "temperature": 0.0, "avg_logprob": -0.08492843243254333, "compression_ratio": 1.7119341563786008, "no_speech_prob": 0.00010546199337113649}, {"id": 1669, "seek": 405734, "start": 4057.34, "end": 4059.34, "text": " so instead of 300 let's just do 200", "tokens": [50365, 370, 2602, 295, 6641, 718, 311, 445, 360, 2331, 50465], "temperature": 0.0, "avg_logprob": -0.08220795542001724, "compression_ratio": 1.6293436293436294, "no_speech_prob": 0.0001610310428077355}, {"id": 1670, "seek": 405734, "start": 4059.34, "end": 4061.34, "text": " neurons in that hidden layer.", "tokens": [50465, 22027, 294, 300, 7633, 4583, 13, 50565], "temperature": 0.0, "avg_logprob": -0.08220795542001724, "compression_ratio": 1.6293436293436294, "no_speech_prob": 0.0001610310428077355}, {"id": 1671, "seek": 405734, "start": 4061.34, "end": 4063.34, "text": " So now the total number of elements", "tokens": [50565, 407, 586, 264, 3217, 1230, 295, 4959, 50665], "temperature": 0.0, "avg_logprob": -0.08220795542001724, "compression_ratio": 1.6293436293436294, "no_speech_prob": 0.0001610310428077355}, {"id": 1672, "seek": 405734, "start": 4063.34, "end": 4065.34, "text": " will be slightly bigger at", "tokens": [50665, 486, 312, 4748, 3801, 412, 50765], "temperature": 0.0, "avg_logprob": -0.08220795542001724, "compression_ratio": 1.6293436293436294, "no_speech_prob": 0.0001610310428077355}, {"id": 1673, "seek": 405734, "start": 4065.34, "end": 4067.34, "text": " 11,000.", "tokens": [50765, 2975, 11, 1360, 13, 50865], "temperature": 0.0, "avg_logprob": -0.08220795542001724, "compression_ratio": 1.6293436293436294, "no_speech_prob": 0.0001610310428077355}, {"id": 1674, "seek": 405734, "start": 4067.34, "end": 4069.34, "text": " And then here we have to be a bit careful because", "tokens": [50865, 400, 550, 510, 321, 362, 281, 312, 257, 857, 5026, 570, 50965], "temperature": 0.0, "avg_logprob": -0.08220795542001724, "compression_ratio": 1.6293436293436294, "no_speech_prob": 0.0001610310428077355}, {"id": 1675, "seek": 405734, "start": 4069.34, "end": 4071.34, "text": " the learning rate", "tokens": [50965, 264, 2539, 3314, 51065], "temperature": 0.0, "avg_logprob": -0.08220795542001724, "compression_ratio": 1.6293436293436294, "no_speech_prob": 0.0001610310428077355}, {"id": 1676, "seek": 405734, "start": 4071.34, "end": 4073.34, "text": " we set to 0.1", "tokens": [51065, 321, 992, 281, 1958, 13, 16, 51165], "temperature": 0.0, "avg_logprob": -0.08220795542001724, "compression_ratio": 1.6293436293436294, "no_speech_prob": 0.0001610310428077355}, {"id": 1677, "seek": 405734, "start": 4073.34, "end": 4075.34, "text": " here we are hardcoding 6", "tokens": [51165, 510, 321, 366, 1152, 66, 8616, 1386, 51265], "temperature": 0.0, "avg_logprob": -0.08220795542001724, "compression_ratio": 1.6293436293436294, "no_speech_prob": 0.0001610310428077355}, {"id": 1678, "seek": 405734, "start": 4075.34, "end": 4077.34, "text": " and obviously if you're working in production", "tokens": [51265, 293, 2745, 498, 291, 434, 1364, 294, 4265, 51365], "temperature": 0.0, "avg_logprob": -0.08220795542001724, "compression_ratio": 1.6293436293436294, "no_speech_prob": 0.0001610310428077355}, {"id": 1679, "seek": 405734, "start": 4077.34, "end": 4079.34, "text": " you don't want to be hardcoding magic numbers", "tokens": [51365, 291, 500, 380, 528, 281, 312, 1152, 66, 8616, 5585, 3547, 51465], "temperature": 0.0, "avg_logprob": -0.08220795542001724, "compression_ratio": 1.6293436293436294, "no_speech_prob": 0.0001610310428077355}, {"id": 1680, "seek": 405734, "start": 4079.34, "end": 4081.34, "text": " but instead of 6 this should now be 30.", "tokens": [51465, 457, 2602, 295, 1386, 341, 820, 586, 312, 2217, 13, 51565], "temperature": 0.0, "avg_logprob": -0.08220795542001724, "compression_ratio": 1.6293436293436294, "no_speech_prob": 0.0001610310428077355}, {"id": 1681, "seek": 405734, "start": 4083.34, "end": 4085.34, "text": " And let's run for", "tokens": [51665, 400, 718, 311, 1190, 337, 51765], "temperature": 0.0, "avg_logprob": -0.08220795542001724, "compression_ratio": 1.6293436293436294, "no_speech_prob": 0.0001610310428077355}, {"id": 1682, "seek": 405734, "start": 4085.34, "end": 4087.34, "text": " 50,000 iterations and let me", "tokens": [51765, 2625, 11, 1360, 36540, 293, 718, 385, 51865], "temperature": 0.0, "avg_logprob": -0.08220795542001724, "compression_ratio": 1.6293436293436294, "no_speech_prob": 0.0001610310428077355}, {"id": 1683, "seek": 408734, "start": 4087.34, "end": 4089.34, "text": " split out the initialization here", "tokens": [50365, 7472, 484, 264, 5883, 2144, 510, 50465], "temperature": 0.0, "avg_logprob": -0.11205427854963877, "compression_ratio": 1.585, "no_speech_prob": 0.00030372204491868615}, {"id": 1684, "seek": 408734, "start": 4089.34, "end": 4091.34, "text": " outside so that", "tokens": [50465, 2380, 370, 300, 50565], "temperature": 0.0, "avg_logprob": -0.11205427854963877, "compression_ratio": 1.585, "no_speech_prob": 0.00030372204491868615}, {"id": 1685, "seek": 408734, "start": 4091.34, "end": 4093.34, "text": " when we run this multiple times it's not going", "tokens": [50565, 562, 321, 1190, 341, 3866, 1413, 309, 311, 406, 516, 50665], "temperature": 0.0, "avg_logprob": -0.11205427854963877, "compression_ratio": 1.585, "no_speech_prob": 0.00030372204491868615}, {"id": 1686, "seek": 408734, "start": 4093.34, "end": 4095.34, "text": " to wipe out our loss.", "tokens": [50665, 281, 14082, 484, 527, 4470, 13, 50765], "temperature": 0.0, "avg_logprob": -0.11205427854963877, "compression_ratio": 1.585, "no_speech_prob": 0.00030372204491868615}, {"id": 1687, "seek": 408734, "start": 4097.34, "end": 4099.34, "text": " In addition to that", "tokens": [50865, 682, 4500, 281, 300, 50965], "temperature": 0.0, "avg_logprob": -0.11205427854963877, "compression_ratio": 1.585, "no_speech_prob": 0.00030372204491868615}, {"id": 1688, "seek": 408734, "start": 4099.34, "end": 4101.34, "text": " here let's instead", "tokens": [50965, 510, 718, 311, 2602, 51065], "temperature": 0.0, "avg_logprob": -0.11205427854963877, "compression_ratio": 1.585, "no_speech_prob": 0.00030372204491868615}, {"id": 1689, "seek": 408734, "start": 4101.34, "end": 4103.34, "text": " of logging loss.item let's actually", "tokens": [51065, 295, 27991, 4470, 13, 270, 443, 718, 311, 767, 51165], "temperature": 0.0, "avg_logprob": -0.11205427854963877, "compression_ratio": 1.585, "no_speech_prob": 0.00030372204491868615}, {"id": 1690, "seek": 408734, "start": 4103.34, "end": 4105.34, "text": " log the", "tokens": [51165, 3565, 264, 51265], "temperature": 0.0, "avg_logprob": -0.11205427854963877, "compression_ratio": 1.585, "no_speech_prob": 0.00030372204491868615}, {"id": 1691, "seek": 408734, "start": 4105.34, "end": 4107.34, "text": " let's do log10", "tokens": [51265, 718, 311, 360, 3565, 3279, 51365], "temperature": 0.0, "avg_logprob": -0.11205427854963877, "compression_ratio": 1.585, "no_speech_prob": 0.00030372204491868615}, {"id": 1692, "seek": 408734, "start": 4107.34, "end": 4109.34, "text": " I believe", "tokens": [51365, 286, 1697, 51465], "temperature": 0.0, "avg_logprob": -0.11205427854963877, "compression_ratio": 1.585, "no_speech_prob": 0.00030372204491868615}, {"id": 1693, "seek": 408734, "start": 4109.34, "end": 4111.34, "text": " that's a function of the loss", "tokens": [51465, 300, 311, 257, 2445, 295, 264, 4470, 51565], "temperature": 0.0, "avg_logprob": -0.11205427854963877, "compression_ratio": 1.585, "no_speech_prob": 0.00030372204491868615}, {"id": 1694, "seek": 408734, "start": 4111.34, "end": 4113.34, "text": " and I'll show you", "tokens": [51565, 293, 286, 603, 855, 291, 51665], "temperature": 0.0, "avg_logprob": -0.11205427854963877, "compression_ratio": 1.585, "no_speech_prob": 0.00030372204491868615}, {"id": 1695, "seek": 408734, "start": 4113.34, "end": 4115.34, "text": " why in a second. Let's optimize this.", "tokens": [51665, 983, 294, 257, 1150, 13, 961, 311, 19719, 341, 13, 51765], "temperature": 0.0, "avg_logprob": -0.11205427854963877, "compression_ratio": 1.585, "no_speech_prob": 0.00030372204491868615}, {"id": 1696, "seek": 408734, "start": 4115.34, "end": 4117.34, "text": " This", "tokens": [51765, 639, 51865], "temperature": 0.0, "avg_logprob": -0.11205427854963877, "compression_ratio": 1.585, "no_speech_prob": 0.00030372204491868615}, {"id": 1697, "seek": 411734, "start": 4117.34, "end": 4119.34, "text": " basically I'd like to plot the log loss", "tokens": [50365, 1936, 286, 1116, 411, 281, 7542, 264, 3565, 4470, 50465], "temperature": 0.0, "avg_logprob": -0.10754300089715754, "compression_ratio": 1.569377990430622, "no_speech_prob": 0.0007545179687440395}, {"id": 1698, "seek": 411734, "start": 4119.34, "end": 4121.34, "text": " instead of the loss because when you plot", "tokens": [50465, 2602, 295, 264, 4470, 570, 562, 291, 7542, 50565], "temperature": 0.0, "avg_logprob": -0.10754300089715754, "compression_ratio": 1.569377990430622, "no_speech_prob": 0.0007545179687440395}, {"id": 1699, "seek": 411734, "start": 4121.34, "end": 4123.34, "text": " the loss many times it can have this hockey stick", "tokens": [50565, 264, 4470, 867, 1413, 309, 393, 362, 341, 22449, 2897, 50665], "temperature": 0.0, "avg_logprob": -0.10754300089715754, "compression_ratio": 1.569377990430622, "no_speech_prob": 0.0007545179687440395}, {"id": 1700, "seek": 411734, "start": 4123.34, "end": 4125.34, "text": " appearance and log", "tokens": [50665, 8967, 293, 3565, 50765], "temperature": 0.0, "avg_logprob": -0.10754300089715754, "compression_ratio": 1.569377990430622, "no_speech_prob": 0.0007545179687440395}, {"id": 1701, "seek": 411734, "start": 4125.34, "end": 4127.34, "text": " squashes it in.", "tokens": [50765, 2339, 12808, 309, 294, 13, 50865], "temperature": 0.0, "avg_logprob": -0.10754300089715754, "compression_ratio": 1.569377990430622, "no_speech_prob": 0.0007545179687440395}, {"id": 1702, "seek": 411734, "start": 4127.34, "end": 4129.34, "text": " So it just kind of like looks nicer.", "tokens": [50865, 407, 309, 445, 733, 295, 411, 1542, 22842, 13, 50965], "temperature": 0.0, "avg_logprob": -0.10754300089715754, "compression_ratio": 1.569377990430622, "no_speech_prob": 0.0007545179687440395}, {"id": 1703, "seek": 411734, "start": 4129.34, "end": 4131.34, "text": " So the x-axis is step i", "tokens": [50965, 407, 264, 2031, 12, 24633, 307, 1823, 741, 51065], "temperature": 0.0, "avg_logprob": -0.10754300089715754, "compression_ratio": 1.569377990430622, "no_speech_prob": 0.0007545179687440395}, {"id": 1704, "seek": 411734, "start": 4131.34, "end": 4133.34, "text": " and the y-axis will be the loss", "tokens": [51065, 293, 264, 288, 12, 24633, 486, 312, 264, 4470, 51165], "temperature": 0.0, "avg_logprob": -0.10754300089715754, "compression_ratio": 1.569377990430622, "no_speech_prob": 0.0007545179687440395}, {"id": 1705, "seek": 411734, "start": 4133.34, "end": 4135.34, "text": " i.", "tokens": [51165, 741, 13, 51265], "temperature": 0.0, "avg_logprob": -0.10754300089715754, "compression_ratio": 1.569377990430622, "no_speech_prob": 0.0007545179687440395}, {"id": 1706, "seek": 411734, "start": 4141.34, "end": 4143.34, "text": " And then here this is 30.", "tokens": [51565, 400, 550, 510, 341, 307, 2217, 13, 51665], "temperature": 0.0, "avg_logprob": -0.10754300089715754, "compression_ratio": 1.569377990430622, "no_speech_prob": 0.0007545179687440395}, {"id": 1707, "seek": 411734, "start": 4143.34, "end": 4145.34, "text": " Ideally we wouldn't be hardcoding these", "tokens": [51665, 40817, 321, 2759, 380, 312, 1152, 66, 8616, 613, 51765], "temperature": 0.0, "avg_logprob": -0.10754300089715754, "compression_ratio": 1.569377990430622, "no_speech_prob": 0.0007545179687440395}, {"id": 1708, "seek": 414534, "start": 4145.34, "end": 4149.34, "text": " because let's look", "tokens": [50365, 570, 718, 311, 574, 50565], "temperature": 0.0, "avg_logprob": -0.13342109680175782, "compression_ratio": 1.5583756345177664, "no_speech_prob": 0.0006745528080500662}, {"id": 1709, "seek": 414534, "start": 4149.34, "end": 4151.34, "text": " at the loss.", "tokens": [50565, 412, 264, 4470, 13, 50665], "temperature": 0.0, "avg_logprob": -0.13342109680175782, "compression_ratio": 1.5583756345177664, "no_speech_prob": 0.0006745528080500662}, {"id": 1710, "seek": 414534, "start": 4151.34, "end": 4153.34, "text": " It's again very thick because", "tokens": [50665, 467, 311, 797, 588, 5060, 570, 50765], "temperature": 0.0, "avg_logprob": -0.13342109680175782, "compression_ratio": 1.5583756345177664, "no_speech_prob": 0.0006745528080500662}, {"id": 1711, "seek": 414534, "start": 4153.34, "end": 4155.34, "text": " the mini-batch size is very small", "tokens": [50765, 264, 8382, 12, 65, 852, 2744, 307, 588, 1359, 50865], "temperature": 0.0, "avg_logprob": -0.13342109680175782, "compression_ratio": 1.5583756345177664, "no_speech_prob": 0.0006745528080500662}, {"id": 1712, "seek": 414534, "start": 4155.34, "end": 4157.34, "text": " but the total loss over the training set", "tokens": [50865, 457, 264, 3217, 4470, 670, 264, 3097, 992, 50965], "temperature": 0.0, "avg_logprob": -0.13342109680175782, "compression_ratio": 1.5583756345177664, "no_speech_prob": 0.0006745528080500662}, {"id": 1713, "seek": 414534, "start": 4157.34, "end": 4159.34, "text": " is 2.3 and the test", "tokens": [50965, 307, 568, 13, 18, 293, 264, 1500, 51065], "temperature": 0.0, "avg_logprob": -0.13342109680175782, "compression_ratio": 1.5583756345177664, "no_speech_prob": 0.0006745528080500662}, {"id": 1714, "seek": 414534, "start": 4159.34, "end": 4161.34, "text": " or the def set is 2.38 as well.", "tokens": [51065, 420, 264, 1060, 992, 307, 568, 13, 12625, 382, 731, 13, 51165], "temperature": 0.0, "avg_logprob": -0.13342109680175782, "compression_ratio": 1.5583756345177664, "no_speech_prob": 0.0006745528080500662}, {"id": 1715, "seek": 414534, "start": 4161.34, "end": 4163.34, "text": " So far so good.", "tokens": [51165, 407, 1400, 370, 665, 13, 51265], "temperature": 0.0, "avg_logprob": -0.13342109680175782, "compression_ratio": 1.5583756345177664, "no_speech_prob": 0.0006745528080500662}, {"id": 1716, "seek": 414534, "start": 4163.34, "end": 4165.34, "text": " Let's try to now decrease the learning rate", "tokens": [51265, 961, 311, 853, 281, 586, 11514, 264, 2539, 3314, 51365], "temperature": 0.0, "avg_logprob": -0.13342109680175782, "compression_ratio": 1.5583756345177664, "no_speech_prob": 0.0006745528080500662}, {"id": 1717, "seek": 414534, "start": 4165.34, "end": 4167.34, "text": " by a factor of 10", "tokens": [51365, 538, 257, 5952, 295, 1266, 51465], "temperature": 0.0, "avg_logprob": -0.13342109680175782, "compression_ratio": 1.5583756345177664, "no_speech_prob": 0.0006745528080500662}, {"id": 1718, "seek": 414534, "start": 4169.34, "end": 4171.34, "text": " and train for another 50,000 iterations.", "tokens": [51565, 293, 3847, 337, 1071, 2625, 11, 1360, 36540, 13, 51665], "temperature": 0.0, "avg_logprob": -0.13342109680175782, "compression_ratio": 1.5583756345177664, "no_speech_prob": 0.0006745528080500662}, {"id": 1719, "seek": 417534, "start": 4175.34, "end": 4177.34, "text": " We'd hope that we would be able to beat", "tokens": [50365, 492, 1116, 1454, 300, 321, 576, 312, 1075, 281, 4224, 50465], "temperature": 0.0, "avg_logprob": -0.06966033348670372, "compression_ratio": 1.7360594795539033, "no_speech_prob": 0.0001850475528044626}, {"id": 1720, "seek": 417534, "start": 4177.34, "end": 4179.34, "text": " 2.32.", "tokens": [50465, 568, 13, 11440, 13, 50565], "temperature": 0.0, "avg_logprob": -0.06966033348670372, "compression_ratio": 1.7360594795539033, "no_speech_prob": 0.0001850475528044626}, {"id": 1721, "seek": 417534, "start": 4183.34, "end": 4185.34, "text": " But again we're just kind of like doing this very", "tokens": [50765, 583, 797, 321, 434, 445, 733, 295, 411, 884, 341, 588, 50865], "temperature": 0.0, "avg_logprob": -0.06966033348670372, "compression_ratio": 1.7360594795539033, "no_speech_prob": 0.0001850475528044626}, {"id": 1722, "seek": 417534, "start": 4185.34, "end": 4187.34, "text": " haphazardly so I don't actually have", "tokens": [50865, 324, 950, 921, 515, 356, 370, 286, 500, 380, 767, 362, 50965], "temperature": 0.0, "avg_logprob": -0.06966033348670372, "compression_ratio": 1.7360594795539033, "no_speech_prob": 0.0001850475528044626}, {"id": 1723, "seek": 417534, "start": 4187.34, "end": 4189.34, "text": " confidence that our learning rate is set", "tokens": [50965, 6687, 300, 527, 2539, 3314, 307, 992, 51065], "temperature": 0.0, "avg_logprob": -0.06966033348670372, "compression_ratio": 1.7360594795539033, "no_speech_prob": 0.0001850475528044626}, {"id": 1724, "seek": 417534, "start": 4189.34, "end": 4191.34, "text": " very well, that our learning rate decay", "tokens": [51065, 588, 731, 11, 300, 527, 2539, 3314, 21039, 51165], "temperature": 0.0, "avg_logprob": -0.06966033348670372, "compression_ratio": 1.7360594795539033, "no_speech_prob": 0.0001850475528044626}, {"id": 1725, "seek": 417534, "start": 4191.34, "end": 4193.34, "text": " which we just do at random", "tokens": [51165, 597, 321, 445, 360, 412, 4974, 51265], "temperature": 0.0, "avg_logprob": -0.06966033348670372, "compression_ratio": 1.7360594795539033, "no_speech_prob": 0.0001850475528044626}, {"id": 1726, "seek": 417534, "start": 4193.34, "end": 4195.34, "text": " is set very well.", "tokens": [51265, 307, 992, 588, 731, 13, 51365], "temperature": 0.0, "avg_logprob": -0.06966033348670372, "compression_ratio": 1.7360594795539033, "no_speech_prob": 0.0001850475528044626}, {"id": 1727, "seek": 417534, "start": 4195.34, "end": 4197.34, "text": " And so the optimization here", "tokens": [51365, 400, 370, 264, 19618, 510, 51465], "temperature": 0.0, "avg_logprob": -0.06966033348670372, "compression_ratio": 1.7360594795539033, "no_speech_prob": 0.0001850475528044626}, {"id": 1728, "seek": 417534, "start": 4197.34, "end": 4199.34, "text": " is kind of suspect to be honest and this is", "tokens": [51465, 307, 733, 295, 9091, 281, 312, 3245, 293, 341, 307, 51565], "temperature": 0.0, "avg_logprob": -0.06966033348670372, "compression_ratio": 1.7360594795539033, "no_speech_prob": 0.0001850475528044626}, {"id": 1729, "seek": 417534, "start": 4199.34, "end": 4201.34, "text": " not how you would do it typically in production.", "tokens": [51565, 406, 577, 291, 576, 360, 309, 5850, 294, 4265, 13, 51665], "temperature": 0.0, "avg_logprob": -0.06966033348670372, "compression_ratio": 1.7360594795539033, "no_speech_prob": 0.0001850475528044626}, {"id": 1730, "seek": 417534, "start": 4201.34, "end": 4203.34, "text": " In production you would create parameters", "tokens": [51665, 682, 4265, 291, 576, 1884, 9834, 51765], "temperature": 0.0, "avg_logprob": -0.06966033348670372, "compression_ratio": 1.7360594795539033, "no_speech_prob": 0.0001850475528044626}, {"id": 1731, "seek": 417534, "start": 4203.34, "end": 4205.34, "text": " or hyperparameters out of all these settings", "tokens": [51765, 420, 9848, 2181, 335, 6202, 484, 295, 439, 613, 6257, 51865], "temperature": 0.0, "avg_logprob": -0.06966033348670372, "compression_ratio": 1.7360594795539033, "no_speech_prob": 0.0001850475528044626}, {"id": 1732, "seek": 420534, "start": 4205.34, "end": 4207.34, "text": " and then you would run lots of experiments", "tokens": [50365, 293, 550, 291, 576, 1190, 3195, 295, 12050, 50465], "temperature": 0.0, "avg_logprob": -0.07877132348846971, "compression_ratio": 1.6475409836065573, "no_speech_prob": 8.56250335345976e-05}, {"id": 1733, "seek": 420534, "start": 4207.34, "end": 4209.34, "text": " and see whichever ones are working well for you.", "tokens": [50465, 293, 536, 24123, 2306, 366, 1364, 731, 337, 291, 13, 50565], "temperature": 0.0, "avg_logprob": -0.07877132348846971, "compression_ratio": 1.6475409836065573, "no_speech_prob": 8.56250335345976e-05}, {"id": 1734, "seek": 420534, "start": 4211.34, "end": 4213.34, "text": " Okay.", "tokens": [50665, 1033, 13, 50765], "temperature": 0.0, "avg_logprob": -0.07877132348846971, "compression_ratio": 1.6475409836065573, "no_speech_prob": 8.56250335345976e-05}, {"id": 1735, "seek": 420534, "start": 4213.34, "end": 4215.34, "text": " So we have 2.17 now", "tokens": [50765, 407, 321, 362, 568, 13, 7773, 586, 50865], "temperature": 0.0, "avg_logprob": -0.07877132348846971, "compression_ratio": 1.6475409836065573, "no_speech_prob": 8.56250335345976e-05}, {"id": 1736, "seek": 420534, "start": 4215.34, "end": 4217.34, "text": " and 2.2.", "tokens": [50865, 293, 568, 13, 17, 13, 50965], "temperature": 0.0, "avg_logprob": -0.07877132348846971, "compression_ratio": 1.6475409836065573, "no_speech_prob": 8.56250335345976e-05}, {"id": 1737, "seek": 420534, "start": 4217.34, "end": 4219.34, "text": " So you see how the training and the validation", "tokens": [50965, 407, 291, 536, 577, 264, 3097, 293, 264, 24071, 51065], "temperature": 0.0, "avg_logprob": -0.07877132348846971, "compression_ratio": 1.6475409836065573, "no_speech_prob": 8.56250335345976e-05}, {"id": 1738, "seek": 420534, "start": 4219.34, "end": 4221.34, "text": " performance are starting to", "tokens": [51065, 3389, 366, 2891, 281, 51165], "temperature": 0.0, "avg_logprob": -0.07877132348846971, "compression_ratio": 1.6475409836065573, "no_speech_prob": 8.56250335345976e-05}, {"id": 1739, "seek": 420534, "start": 4221.34, "end": 4223.34, "text": " slightly slowly depart.", "tokens": [51165, 4748, 5692, 9110, 13, 51265], "temperature": 0.0, "avg_logprob": -0.07877132348846971, "compression_ratio": 1.6475409836065573, "no_speech_prob": 8.56250335345976e-05}, {"id": 1740, "seek": 420534, "start": 4223.34, "end": 4225.34, "text": " So maybe we're getting the sense that the neural net", "tokens": [51265, 407, 1310, 321, 434, 1242, 264, 2020, 300, 264, 18161, 2533, 51365], "temperature": 0.0, "avg_logprob": -0.07877132348846971, "compression_ratio": 1.6475409836065573, "no_speech_prob": 8.56250335345976e-05}, {"id": 1741, "seek": 420534, "start": 4225.34, "end": 4227.34, "text": " is getting good enough", "tokens": [51365, 307, 1242, 665, 1547, 51465], "temperature": 0.0, "avg_logprob": -0.07877132348846971, "compression_ratio": 1.6475409836065573, "no_speech_prob": 8.56250335345976e-05}, {"id": 1742, "seek": 420534, "start": 4227.34, "end": 4229.34, "text": " or that number of parameters", "tokens": [51465, 420, 300, 1230, 295, 9834, 51565], "temperature": 0.0, "avg_logprob": -0.07877132348846971, "compression_ratio": 1.6475409836065573, "no_speech_prob": 8.56250335345976e-05}, {"id": 1743, "seek": 420534, "start": 4229.34, "end": 4231.34, "text": " is large enough", "tokens": [51565, 307, 2416, 1547, 51665], "temperature": 0.0, "avg_logprob": -0.07877132348846971, "compression_ratio": 1.6475409836065573, "no_speech_prob": 8.56250335345976e-05}, {"id": 1744, "seek": 420534, "start": 4231.34, "end": 4233.34, "text": " that we are slowly starting to overfit.", "tokens": [51665, 300, 321, 366, 5692, 2891, 281, 670, 6845, 13, 51765], "temperature": 0.0, "avg_logprob": -0.07877132348846971, "compression_ratio": 1.6475409836065573, "no_speech_prob": 8.56250335345976e-05}, {"id": 1745, "seek": 420534, "start": 4233.34, "end": 4235.34, "text": " Let's maybe run", "tokens": [51765, 961, 311, 1310, 1190, 51865], "temperature": 0.0, "avg_logprob": -0.07877132348846971, "compression_ratio": 1.6475409836065573, "no_speech_prob": 8.56250335345976e-05}, {"id": 1746, "seek": 423534, "start": 4235.34, "end": 4237.34, "text": " one more iteration of this", "tokens": [50365, 472, 544, 24784, 295, 341, 50465], "temperature": 0.0, "avg_logprob": -0.06889032348384702, "compression_ratio": 1.794007490636704, "no_speech_prob": 0.0004681070277001709}, {"id": 1747, "seek": 423534, "start": 4237.34, "end": 4239.34, "text": " and see where we get.", "tokens": [50465, 293, 536, 689, 321, 483, 13, 50565], "temperature": 0.0, "avg_logprob": -0.06889032348384702, "compression_ratio": 1.794007490636704, "no_speech_prob": 0.0004681070277001709}, {"id": 1748, "seek": 423534, "start": 4241.34, "end": 4243.34, "text": " But yeah, basically you would be running", "tokens": [50665, 583, 1338, 11, 1936, 291, 576, 312, 2614, 50765], "temperature": 0.0, "avg_logprob": -0.06889032348384702, "compression_ratio": 1.794007490636704, "no_speech_prob": 0.0004681070277001709}, {"id": 1749, "seek": 423534, "start": 4243.34, "end": 4245.34, "text": " lots of experiments and then you are slowly", "tokens": [50765, 3195, 295, 12050, 293, 550, 291, 366, 5692, 50865], "temperature": 0.0, "avg_logprob": -0.06889032348384702, "compression_ratio": 1.794007490636704, "no_speech_prob": 0.0004681070277001709}, {"id": 1750, "seek": 423534, "start": 4245.34, "end": 4247.34, "text": " scrutinizing whichever ones give you the best", "tokens": [50865, 28949, 259, 3319, 24123, 2306, 976, 291, 264, 1151, 50965], "temperature": 0.0, "avg_logprob": -0.06889032348384702, "compression_ratio": 1.794007490636704, "no_speech_prob": 0.0004681070277001709}, {"id": 1751, "seek": 423534, "start": 4247.34, "end": 4249.34, "text": " depth performance. And then once you find", "tokens": [50965, 7161, 3389, 13, 400, 550, 1564, 291, 915, 51065], "temperature": 0.0, "avg_logprob": -0.06889032348384702, "compression_ratio": 1.794007490636704, "no_speech_prob": 0.0004681070277001709}, {"id": 1752, "seek": 423534, "start": 4249.34, "end": 4251.34, "text": " all the hyperparameters that make", "tokens": [51065, 439, 264, 9848, 2181, 335, 6202, 300, 652, 51165], "temperature": 0.0, "avg_logprob": -0.06889032348384702, "compression_ratio": 1.794007490636704, "no_speech_prob": 0.0004681070277001709}, {"id": 1753, "seek": 423534, "start": 4251.34, "end": 4253.34, "text": " your depth performance good", "tokens": [51165, 428, 7161, 3389, 665, 51265], "temperature": 0.0, "avg_logprob": -0.06889032348384702, "compression_ratio": 1.794007490636704, "no_speech_prob": 0.0004681070277001709}, {"id": 1754, "seek": 423534, "start": 4253.34, "end": 4255.34, "text": " you take that model and you evaluate the test set", "tokens": [51265, 291, 747, 300, 2316, 293, 291, 13059, 264, 1500, 992, 51365], "temperature": 0.0, "avg_logprob": -0.06889032348384702, "compression_ratio": 1.794007490636704, "no_speech_prob": 0.0004681070277001709}, {"id": 1755, "seek": 423534, "start": 4255.34, "end": 4257.34, "text": " performance a single time.", "tokens": [51365, 3389, 257, 2167, 565, 13, 51465], "temperature": 0.0, "avg_logprob": -0.06889032348384702, "compression_ratio": 1.794007490636704, "no_speech_prob": 0.0004681070277001709}, {"id": 1756, "seek": 423534, "start": 4257.34, "end": 4259.34, "text": " And that's the number that you report in your paper", "tokens": [51465, 400, 300, 311, 264, 1230, 300, 291, 2275, 294, 428, 3035, 51565], "temperature": 0.0, "avg_logprob": -0.06889032348384702, "compression_ratio": 1.794007490636704, "no_speech_prob": 0.0004681070277001709}, {"id": 1757, "seek": 423534, "start": 4259.34, "end": 4261.34, "text": " or wherever else you want to talk about", "tokens": [51565, 420, 8660, 1646, 291, 528, 281, 751, 466, 51665], "temperature": 0.0, "avg_logprob": -0.06889032348384702, "compression_ratio": 1.794007490636704, "no_speech_prob": 0.0004681070277001709}, {"id": 1758, "seek": 423534, "start": 4261.34, "end": 4263.34, "text": " and brag about your model.", "tokens": [51665, 293, 41995, 466, 428, 2316, 13, 51765], "temperature": 0.0, "avg_logprob": -0.06889032348384702, "compression_ratio": 1.794007490636704, "no_speech_prob": 0.0004681070277001709}, {"id": 1759, "seek": 426534, "start": 4265.34, "end": 4267.34, "text": " So let's then rerun the plot", "tokens": [50365, 407, 718, 311, 550, 43819, 409, 264, 7542, 50465], "temperature": 0.0, "avg_logprob": -0.0814903320804719, "compression_ratio": 1.630952380952381, "no_speech_prob": 4.9784874136094004e-05}, {"id": 1760, "seek": 426534, "start": 4267.34, "end": 4269.34, "text": " and rerun the train and dev.", "tokens": [50465, 293, 43819, 409, 264, 3847, 293, 1905, 13, 50565], "temperature": 0.0, "avg_logprob": -0.0814903320804719, "compression_ratio": 1.630952380952381, "no_speech_prob": 4.9784874136094004e-05}, {"id": 1761, "seek": 426534, "start": 4271.34, "end": 4273.34, "text": " And because we're getting lower loss now", "tokens": [50665, 400, 570, 321, 434, 1242, 3126, 4470, 586, 50765], "temperature": 0.0, "avg_logprob": -0.0814903320804719, "compression_ratio": 1.630952380952381, "no_speech_prob": 4.9784874136094004e-05}, {"id": 1762, "seek": 426534, "start": 4273.34, "end": 4275.34, "text": " it is the case that the embedding size", "tokens": [50765, 309, 307, 264, 1389, 300, 264, 12240, 3584, 2744, 50865], "temperature": 0.0, "avg_logprob": -0.0814903320804719, "compression_ratio": 1.630952380952381, "no_speech_prob": 4.9784874136094004e-05}, {"id": 1763, "seek": 426534, "start": 4275.34, "end": 4277.34, "text": " of these was holding us back very likely.", "tokens": [50865, 295, 613, 390, 5061, 505, 646, 588, 3700, 13, 50965], "temperature": 0.0, "avg_logprob": -0.0814903320804719, "compression_ratio": 1.630952380952381, "no_speech_prob": 4.9784874136094004e-05}, {"id": 1764, "seek": 426534, "start": 4279.34, "end": 4281.34, "text": " Okay, so 2.16, 2.19", "tokens": [51065, 1033, 11, 370, 568, 13, 6866, 11, 568, 13, 3405, 51165], "temperature": 0.0, "avg_logprob": -0.0814903320804719, "compression_ratio": 1.630952380952381, "no_speech_prob": 4.9784874136094004e-05}, {"id": 1765, "seek": 426534, "start": 4281.34, "end": 4283.34, "text": " is what we're roughly getting.", "tokens": [51165, 307, 437, 321, 434, 9810, 1242, 13, 51265], "temperature": 0.0, "avg_logprob": -0.0814903320804719, "compression_ratio": 1.630952380952381, "no_speech_prob": 4.9784874136094004e-05}, {"id": 1766, "seek": 426534, "start": 4283.34, "end": 4285.34, "text": " So there's many ways", "tokens": [51265, 407, 456, 311, 867, 2098, 51365], "temperature": 0.0, "avg_logprob": -0.0814903320804719, "compression_ratio": 1.630952380952381, "no_speech_prob": 4.9784874136094004e-05}, {"id": 1767, "seek": 426534, "start": 4285.34, "end": 4287.34, "text": " to go from here.", "tokens": [51365, 281, 352, 490, 510, 13, 51465], "temperature": 0.0, "avg_logprob": -0.0814903320804719, "compression_ratio": 1.630952380952381, "no_speech_prob": 4.9784874136094004e-05}, {"id": 1768, "seek": 426534, "start": 4287.34, "end": 4289.34, "text": " We can continue tuning the optimization.", "tokens": [51465, 492, 393, 2354, 15164, 264, 19618, 13, 51565], "temperature": 0.0, "avg_logprob": -0.0814903320804719, "compression_ratio": 1.630952380952381, "no_speech_prob": 4.9784874136094004e-05}, {"id": 1769, "seek": 426534, "start": 4289.34, "end": 4291.34, "text": " We can continue", "tokens": [51565, 492, 393, 2354, 51665], "temperature": 0.0, "avg_logprob": -0.0814903320804719, "compression_ratio": 1.630952380952381, "no_speech_prob": 4.9784874136094004e-05}, {"id": 1770, "seek": 426534, "start": 4291.34, "end": 4293.34, "text": " for example playing with the size of the neural net.", "tokens": [51665, 337, 1365, 2433, 365, 264, 2744, 295, 264, 18161, 2533, 13, 51765], "temperature": 0.0, "avg_logprob": -0.0814903320804719, "compression_ratio": 1.630952380952381, "no_speech_prob": 4.9784874136094004e-05}, {"id": 1771, "seek": 426534, "start": 4293.34, "end": 4295.34, "text": " Or we can increase the number of", "tokens": [51765, 1610, 321, 393, 3488, 264, 1230, 295, 51865], "temperature": 0.0, "avg_logprob": -0.0814903320804719, "compression_ratio": 1.630952380952381, "no_speech_prob": 4.9784874136094004e-05}, {"id": 1772, "seek": 429534, "start": 4295.34, "end": 4297.34, "text": " words or characters", "tokens": [50365, 2283, 420, 4342, 50465], "temperature": 0.0, "avg_logprob": -0.0670303589588887, "compression_ratio": 1.8687943262411348, "no_speech_prob": 0.00012809755571652204}, {"id": 1773, "seek": 429534, "start": 4297.34, "end": 4299.34, "text": " in our case that we are taking as an input.", "tokens": [50465, 294, 527, 1389, 300, 321, 366, 1940, 382, 364, 4846, 13, 50565], "temperature": 0.0, "avg_logprob": -0.0670303589588887, "compression_ratio": 1.8687943262411348, "no_speech_prob": 0.00012809755571652204}, {"id": 1774, "seek": 429534, "start": 4299.34, "end": 4301.34, "text": " So instead of just three characters we could be taking", "tokens": [50565, 407, 2602, 295, 445, 1045, 4342, 321, 727, 312, 1940, 50665], "temperature": 0.0, "avg_logprob": -0.0670303589588887, "compression_ratio": 1.8687943262411348, "no_speech_prob": 0.00012809755571652204}, {"id": 1775, "seek": 429534, "start": 4301.34, "end": 4303.34, "text": " more characters as an input.", "tokens": [50665, 544, 4342, 382, 364, 4846, 13, 50765], "temperature": 0.0, "avg_logprob": -0.0670303589588887, "compression_ratio": 1.8687943262411348, "no_speech_prob": 0.00012809755571652204}, {"id": 1776, "seek": 429534, "start": 4303.34, "end": 4305.34, "text": " And that could further improve", "tokens": [50765, 400, 300, 727, 3052, 3470, 50865], "temperature": 0.0, "avg_logprob": -0.0670303589588887, "compression_ratio": 1.8687943262411348, "no_speech_prob": 0.00012809755571652204}, {"id": 1777, "seek": 429534, "start": 4305.34, "end": 4307.34, "text": " the loss. Okay, so I changed", "tokens": [50865, 264, 4470, 13, 1033, 11, 370, 286, 3105, 50965], "temperature": 0.0, "avg_logprob": -0.0670303589588887, "compression_ratio": 1.8687943262411348, "no_speech_prob": 0.00012809755571652204}, {"id": 1778, "seek": 429534, "start": 4307.34, "end": 4309.34, "text": " the code slightly so we have here", "tokens": [50965, 264, 3089, 4748, 370, 321, 362, 510, 51065], "temperature": 0.0, "avg_logprob": -0.0670303589588887, "compression_ratio": 1.8687943262411348, "no_speech_prob": 0.00012809755571652204}, {"id": 1779, "seek": 429534, "start": 4309.34, "end": 4311.34, "text": " 200,000 steps of the optimization", "tokens": [51065, 2331, 11, 1360, 4439, 295, 264, 19618, 51165], "temperature": 0.0, "avg_logprob": -0.0670303589588887, "compression_ratio": 1.8687943262411348, "no_speech_prob": 0.00012809755571652204}, {"id": 1780, "seek": 429534, "start": 4311.34, "end": 4313.34, "text": " and in the first 100,000 we're using", "tokens": [51165, 293, 294, 264, 700, 2319, 11, 1360, 321, 434, 1228, 51265], "temperature": 0.0, "avg_logprob": -0.0670303589588887, "compression_ratio": 1.8687943262411348, "no_speech_prob": 0.00012809755571652204}, {"id": 1781, "seek": 429534, "start": 4313.34, "end": 4315.34, "text": " a learning rate of 0.1 and then in the next", "tokens": [51265, 257, 2539, 3314, 295, 1958, 13, 16, 293, 550, 294, 264, 958, 51365], "temperature": 0.0, "avg_logprob": -0.0670303589588887, "compression_ratio": 1.8687943262411348, "no_speech_prob": 0.00012809755571652204}, {"id": 1782, "seek": 429534, "start": 4315.34, "end": 4317.34, "text": " 100,000 we're using a learning rate of 0.01.", "tokens": [51365, 2319, 11, 1360, 321, 434, 1228, 257, 2539, 3314, 295, 1958, 13, 10607, 13, 51465], "temperature": 0.0, "avg_logprob": -0.0670303589588887, "compression_ratio": 1.8687943262411348, "no_speech_prob": 0.00012809755571652204}, {"id": 1783, "seek": 429534, "start": 4317.34, "end": 4319.34, "text": " This is the loss", "tokens": [51465, 639, 307, 264, 4470, 51565], "temperature": 0.0, "avg_logprob": -0.0670303589588887, "compression_ratio": 1.8687943262411348, "no_speech_prob": 0.00012809755571652204}, {"id": 1784, "seek": 429534, "start": 4319.34, "end": 4321.34, "text": " that I achieve and these are the", "tokens": [51565, 300, 286, 4584, 293, 613, 366, 264, 51665], "temperature": 0.0, "avg_logprob": -0.0670303589588887, "compression_ratio": 1.8687943262411348, "no_speech_prob": 0.00012809755571652204}, {"id": 1785, "seek": 429534, "start": 4321.34, "end": 4323.34, "text": " performance on the training and validation loss.", "tokens": [51665, 3389, 322, 264, 3097, 293, 24071, 4470, 13, 51765], "temperature": 0.0, "avg_logprob": -0.0670303589588887, "compression_ratio": 1.8687943262411348, "no_speech_prob": 0.00012809755571652204}, {"id": 1786, "seek": 429534, "start": 4323.34, "end": 4325.34, "text": " And in particular the best", "tokens": [51765, 400, 294, 1729, 264, 1151, 51865], "temperature": 0.0, "avg_logprob": -0.0670303589588887, "compression_ratio": 1.8687943262411348, "no_speech_prob": 0.00012809755571652204}, {"id": 1787, "seek": 432534, "start": 4325.34, "end": 4327.34, "text": " validation loss I've been able to obtain in the last", "tokens": [50365, 24071, 4470, 286, 600, 668, 1075, 281, 12701, 294, 264, 1036, 50465], "temperature": 0.0, "avg_logprob": -0.05559564447727333, "compression_ratio": 1.8472222222222223, "no_speech_prob": 0.0001355029089609161}, {"id": 1788, "seek": 432534, "start": 4327.34, "end": 4329.34, "text": " 30 minutes or so is 2.17.", "tokens": [50465, 2217, 2077, 420, 370, 307, 568, 13, 7773, 13, 50565], "temperature": 0.0, "avg_logprob": -0.05559564447727333, "compression_ratio": 1.8472222222222223, "no_speech_prob": 0.0001355029089609161}, {"id": 1789, "seek": 432534, "start": 4329.34, "end": 4331.34, "text": " So now I invite", "tokens": [50565, 407, 586, 286, 7980, 50665], "temperature": 0.0, "avg_logprob": -0.05559564447727333, "compression_ratio": 1.8472222222222223, "no_speech_prob": 0.0001355029089609161}, {"id": 1790, "seek": 432534, "start": 4331.34, "end": 4333.34, "text": " you to beat this number. And you have", "tokens": [50665, 291, 281, 4224, 341, 1230, 13, 400, 291, 362, 50765], "temperature": 0.0, "avg_logprob": -0.05559564447727333, "compression_ratio": 1.8472222222222223, "no_speech_prob": 0.0001355029089609161}, {"id": 1791, "seek": 432534, "start": 4333.34, "end": 4335.34, "text": " quite a few knobs available to you to I think", "tokens": [50765, 1596, 257, 1326, 46999, 2435, 281, 291, 281, 286, 519, 50865], "temperature": 0.0, "avg_logprob": -0.05559564447727333, "compression_ratio": 1.8472222222222223, "no_speech_prob": 0.0001355029089609161}, {"id": 1792, "seek": 432534, "start": 4335.34, "end": 4337.34, "text": " surpass this number.", "tokens": [50865, 27650, 341, 1230, 13, 50965], "temperature": 0.0, "avg_logprob": -0.05559564447727333, "compression_ratio": 1.8472222222222223, "no_speech_prob": 0.0001355029089609161}, {"id": 1793, "seek": 432534, "start": 4337.34, "end": 4339.34, "text": " So number one, you can of course change the number of", "tokens": [50965, 407, 1230, 472, 11, 291, 393, 295, 1164, 1319, 264, 1230, 295, 51065], "temperature": 0.0, "avg_logprob": -0.05559564447727333, "compression_ratio": 1.8472222222222223, "no_speech_prob": 0.0001355029089609161}, {"id": 1794, "seek": 432534, "start": 4339.34, "end": 4341.34, "text": " neurons in the hidden layer of this model.", "tokens": [51065, 22027, 294, 264, 7633, 4583, 295, 341, 2316, 13, 51165], "temperature": 0.0, "avg_logprob": -0.05559564447727333, "compression_ratio": 1.8472222222222223, "no_speech_prob": 0.0001355029089609161}, {"id": 1795, "seek": 432534, "start": 4341.34, "end": 4343.34, "text": " You can change the dimensionality of the", "tokens": [51165, 509, 393, 1319, 264, 10139, 1860, 295, 264, 51265], "temperature": 0.0, "avg_logprob": -0.05559564447727333, "compression_ratio": 1.8472222222222223, "no_speech_prob": 0.0001355029089609161}, {"id": 1796, "seek": 432534, "start": 4343.34, "end": 4345.34, "text": " embedding lookup table.", "tokens": [51265, 12240, 3584, 574, 1010, 3199, 13, 51365], "temperature": 0.0, "avg_logprob": -0.05559564447727333, "compression_ratio": 1.8472222222222223, "no_speech_prob": 0.0001355029089609161}, {"id": 1797, "seek": 432534, "start": 4345.34, "end": 4347.34, "text": " You can change the number of characters that are feeding", "tokens": [51365, 509, 393, 1319, 264, 1230, 295, 4342, 300, 366, 12919, 51465], "temperature": 0.0, "avg_logprob": -0.05559564447727333, "compression_ratio": 1.8472222222222223, "no_speech_prob": 0.0001355029089609161}, {"id": 1798, "seek": 432534, "start": 4347.34, "end": 4349.34, "text": " in as an input", "tokens": [51465, 294, 382, 364, 4846, 51565], "temperature": 0.0, "avg_logprob": -0.05559564447727333, "compression_ratio": 1.8472222222222223, "no_speech_prob": 0.0001355029089609161}, {"id": 1799, "seek": 432534, "start": 4349.34, "end": 4351.34, "text": " as the context into this model.", "tokens": [51565, 382, 264, 4319, 666, 341, 2316, 13, 51665], "temperature": 0.0, "avg_logprob": -0.05559564447727333, "compression_ratio": 1.8472222222222223, "no_speech_prob": 0.0001355029089609161}, {"id": 1800, "seek": 432534, "start": 4351.34, "end": 4353.34, "text": " And then of course you can", "tokens": [51665, 400, 550, 295, 1164, 291, 393, 51765], "temperature": 0.0, "avg_logprob": -0.05559564447727333, "compression_ratio": 1.8472222222222223, "no_speech_prob": 0.0001355029089609161}, {"id": 1801, "seek": 432534, "start": 4353.34, "end": 4355.34, "text": " change the details of the optimization.", "tokens": [51765, 1319, 264, 4365, 295, 264, 19618, 13, 51865], "temperature": 0.0, "avg_logprob": -0.05559564447727333, "compression_ratio": 1.8472222222222223, "no_speech_prob": 0.0001355029089609161}, {"id": 1802, "seek": 435534, "start": 4355.34, "end": 4357.34, "text": " How long are we running? Where is the learning rate?", "tokens": [50365, 1012, 938, 366, 321, 2614, 30, 2305, 307, 264, 2539, 3314, 30, 50465], "temperature": 0.0, "avg_logprob": -0.041585410850635475, "compression_ratio": 1.7665505226480835, "no_speech_prob": 0.0001567536819493398}, {"id": 1803, "seek": 435534, "start": 4357.34, "end": 4359.34, "text": " How does it change over time?", "tokens": [50465, 1012, 775, 309, 1319, 670, 565, 30, 50565], "temperature": 0.0, "avg_logprob": -0.041585410850635475, "compression_ratio": 1.7665505226480835, "no_speech_prob": 0.0001567536819493398}, {"id": 1804, "seek": 435534, "start": 4359.34, "end": 4361.34, "text": " How does it decay?", "tokens": [50565, 1012, 775, 309, 21039, 30, 50665], "temperature": 0.0, "avg_logprob": -0.041585410850635475, "compression_ratio": 1.7665505226480835, "no_speech_prob": 0.0001567536819493398}, {"id": 1805, "seek": 435534, "start": 4361.34, "end": 4363.34, "text": " You can change the batch size and you may be able to", "tokens": [50665, 509, 393, 1319, 264, 15245, 2744, 293, 291, 815, 312, 1075, 281, 50765], "temperature": 0.0, "avg_logprob": -0.041585410850635475, "compression_ratio": 1.7665505226480835, "no_speech_prob": 0.0001567536819493398}, {"id": 1806, "seek": 435534, "start": 4363.34, "end": 4365.34, "text": " actually achieve a much better convergence", "tokens": [50765, 767, 4584, 257, 709, 1101, 32181, 50865], "temperature": 0.0, "avg_logprob": -0.041585410850635475, "compression_ratio": 1.7665505226480835, "no_speech_prob": 0.0001567536819493398}, {"id": 1807, "seek": 435534, "start": 4365.34, "end": 4367.34, "text": " speed in terms of", "tokens": [50865, 3073, 294, 2115, 295, 50965], "temperature": 0.0, "avg_logprob": -0.041585410850635475, "compression_ratio": 1.7665505226480835, "no_speech_prob": 0.0001567536819493398}, {"id": 1808, "seek": 435534, "start": 4367.34, "end": 4369.34, "text": " how many seconds or minutes it takes to train", "tokens": [50965, 577, 867, 3949, 420, 2077, 309, 2516, 281, 3847, 51065], "temperature": 0.0, "avg_logprob": -0.041585410850635475, "compression_ratio": 1.7665505226480835, "no_speech_prob": 0.0001567536819493398}, {"id": 1809, "seek": 435534, "start": 4369.34, "end": 4371.34, "text": " the model and get", "tokens": [51065, 264, 2316, 293, 483, 51165], "temperature": 0.0, "avg_logprob": -0.041585410850635475, "compression_ratio": 1.7665505226480835, "no_speech_prob": 0.0001567536819493398}, {"id": 1810, "seek": 435534, "start": 4371.34, "end": 4373.34, "text": " your result in terms of really good", "tokens": [51165, 428, 1874, 294, 2115, 295, 534, 665, 51265], "temperature": 0.0, "avg_logprob": -0.041585410850635475, "compression_ratio": 1.7665505226480835, "no_speech_prob": 0.0001567536819493398}, {"id": 1811, "seek": 435534, "start": 4373.34, "end": 4375.34, "text": " loss.", "tokens": [51265, 4470, 13, 51365], "temperature": 0.0, "avg_logprob": -0.041585410850635475, "compression_ratio": 1.7665505226480835, "no_speech_prob": 0.0001567536819493398}, {"id": 1812, "seek": 435534, "start": 4375.34, "end": 4377.34, "text": " And then of course I actually invite you to", "tokens": [51365, 400, 550, 295, 1164, 286, 767, 7980, 291, 281, 51465], "temperature": 0.0, "avg_logprob": -0.041585410850635475, "compression_ratio": 1.7665505226480835, "no_speech_prob": 0.0001567536819493398}, {"id": 1813, "seek": 435534, "start": 4377.34, "end": 4379.34, "text": " read this paper. It is 19 pages", "tokens": [51465, 1401, 341, 3035, 13, 467, 307, 1294, 7183, 51565], "temperature": 0.0, "avg_logprob": -0.041585410850635475, "compression_ratio": 1.7665505226480835, "no_speech_prob": 0.0001567536819493398}, {"id": 1814, "seek": 435534, "start": 4379.34, "end": 4381.34, "text": " but at this point you should actually be able to", "tokens": [51565, 457, 412, 341, 935, 291, 820, 767, 312, 1075, 281, 51665], "temperature": 0.0, "avg_logprob": -0.041585410850635475, "compression_ratio": 1.7665505226480835, "no_speech_prob": 0.0001567536819493398}, {"id": 1815, "seek": 435534, "start": 4381.34, "end": 4383.34, "text": " read a good chunk of this paper and understand", "tokens": [51665, 1401, 257, 665, 16635, 295, 341, 3035, 293, 1223, 51765], "temperature": 0.0, "avg_logprob": -0.041585410850635475, "compression_ratio": 1.7665505226480835, "no_speech_prob": 0.0001567536819493398}, {"id": 1816, "seek": 435534, "start": 4383.34, "end": 4385.34, "text": " a pretty good", "tokens": [51765, 257, 1238, 665, 51865], "temperature": 0.0, "avg_logprob": -0.041585410850635475, "compression_ratio": 1.7665505226480835, "no_speech_prob": 0.0001567536819493398}, {"id": 1817, "seek": 438534, "start": 4385.34, "end": 4387.34, "text": " chunks of it.", "tokens": [50365, 24004, 295, 309, 13, 50465], "temperature": 0.0, "avg_logprob": -0.07424591526840672, "compression_ratio": 1.6304347826086956, "no_speech_prob": 0.00032031050068326294}, {"id": 1818, "seek": 438534, "start": 4387.34, "end": 4389.34, "text": " And this paper also has quite a few ideas for", "tokens": [50465, 400, 341, 3035, 611, 575, 1596, 257, 1326, 3487, 337, 50565], "temperature": 0.0, "avg_logprob": -0.07424591526840672, "compression_ratio": 1.6304347826086956, "no_speech_prob": 0.00032031050068326294}, {"id": 1819, "seek": 438534, "start": 4389.34, "end": 4391.34, "text": " improvements that you can play with.", "tokens": [50565, 13797, 300, 291, 393, 862, 365, 13, 50665], "temperature": 0.0, "avg_logprob": -0.07424591526840672, "compression_ratio": 1.6304347826086956, "no_speech_prob": 0.00032031050068326294}, {"id": 1820, "seek": 438534, "start": 4391.34, "end": 4393.34, "text": " So all of those are knobs available to you", "tokens": [50665, 407, 439, 295, 729, 366, 46999, 2435, 281, 291, 50765], "temperature": 0.0, "avg_logprob": -0.07424591526840672, "compression_ratio": 1.6304347826086956, "no_speech_prob": 0.00032031050068326294}, {"id": 1821, "seek": 438534, "start": 4393.34, "end": 4395.34, "text": " and you should be able to beat this number.", "tokens": [50765, 293, 291, 820, 312, 1075, 281, 4224, 341, 1230, 13, 50865], "temperature": 0.0, "avg_logprob": -0.07424591526840672, "compression_ratio": 1.6304347826086956, "no_speech_prob": 0.00032031050068326294}, {"id": 1822, "seek": 438534, "start": 4395.34, "end": 4397.34, "text": " I'm leaving that as an exercise to the reader", "tokens": [50865, 286, 478, 5012, 300, 382, 364, 5380, 281, 264, 15149, 50965], "temperature": 0.0, "avg_logprob": -0.07424591526840672, "compression_ratio": 1.6304347826086956, "no_speech_prob": 0.00032031050068326294}, {"id": 1823, "seek": 438534, "start": 4397.34, "end": 4399.34, "text": " and that's it for now and I'll see you", "tokens": [50965, 293, 300, 311, 309, 337, 586, 293, 286, 603, 536, 291, 51065], "temperature": 0.0, "avg_logprob": -0.07424591526840672, "compression_ratio": 1.6304347826086956, "no_speech_prob": 0.00032031050068326294}, {"id": 1824, "seek": 438534, "start": 4399.34, "end": 4401.34, "text": " next time.", "tokens": [51065, 958, 565, 13, 51165], "temperature": 0.0, "avg_logprob": -0.07424591526840672, "compression_ratio": 1.6304347826086956, "no_speech_prob": 0.00032031050068326294}, {"id": 1825, "seek": 438534, "start": 4403.34, "end": 4405.34, "text": " Before we wrap up I also", "tokens": [51265, 4546, 321, 7019, 493, 286, 611, 51365], "temperature": 0.0, "avg_logprob": -0.07424591526840672, "compression_ratio": 1.6304347826086956, "no_speech_prob": 0.00032031050068326294}, {"id": 1826, "seek": 438534, "start": 4405.34, "end": 4407.34, "text": " wanted to show how you would sample from the model.", "tokens": [51365, 1415, 281, 855, 577, 291, 576, 6889, 490, 264, 2316, 13, 51465], "temperature": 0.0, "avg_logprob": -0.07424591526840672, "compression_ratio": 1.6304347826086956, "no_speech_prob": 0.00032031050068326294}, {"id": 1827, "seek": 438534, "start": 4407.34, "end": 4409.34, "text": " So we're going to", "tokens": [51465, 407, 321, 434, 516, 281, 51565], "temperature": 0.0, "avg_logprob": -0.07424591526840672, "compression_ratio": 1.6304347826086956, "no_speech_prob": 0.00032031050068326294}, {"id": 1828, "seek": 438534, "start": 4409.34, "end": 4411.34, "text": " generate 20 samples.", "tokens": [51565, 8460, 945, 10938, 13, 51665], "temperature": 0.0, "avg_logprob": -0.07424591526840672, "compression_ratio": 1.6304347826086956, "no_speech_prob": 0.00032031050068326294}, {"id": 1829, "seek": 438534, "start": 4411.34, "end": 4413.34, "text": " At first we begin with all dots", "tokens": [51665, 1711, 700, 321, 1841, 365, 439, 15026, 51765], "temperature": 0.0, "avg_logprob": -0.07424591526840672, "compression_ratio": 1.6304347826086956, "no_speech_prob": 0.00032031050068326294}, {"id": 1830, "seek": 438534, "start": 4413.34, "end": 4415.34, "text": " so that's the context.", "tokens": [51765, 370, 300, 311, 264, 4319, 13, 51865], "temperature": 0.0, "avg_logprob": -0.07424591526840672, "compression_ratio": 1.6304347826086956, "no_speech_prob": 0.00032031050068326294}, {"id": 1831, "seek": 441534, "start": 4415.34, "end": 4417.34, "text": " And then until we generate", "tokens": [50365, 400, 550, 1826, 321, 8460, 50465], "temperature": 0.0, "avg_logprob": -0.08699692709971282, "compression_ratio": 1.717741935483871, "no_speech_prob": 0.00013891630806028843}, {"id": 1832, "seek": 441534, "start": 4417.34, "end": 4419.34, "text": " the 0th character again", "tokens": [50465, 264, 1958, 392, 2517, 797, 50565], "temperature": 0.0, "avg_logprob": -0.08699692709971282, "compression_ratio": 1.717741935483871, "no_speech_prob": 0.00013891630806028843}, {"id": 1833, "seek": 441534, "start": 4419.34, "end": 4421.34, "text": " we're going to embed", "tokens": [50565, 321, 434, 516, 281, 12240, 50665], "temperature": 0.0, "avg_logprob": -0.08699692709971282, "compression_ratio": 1.717741935483871, "no_speech_prob": 0.00013891630806028843}, {"id": 1834, "seek": 441534, "start": 4421.34, "end": 4423.34, "text": " the current context", "tokens": [50665, 264, 2190, 4319, 50765], "temperature": 0.0, "avg_logprob": -0.08699692709971282, "compression_ratio": 1.717741935483871, "no_speech_prob": 0.00013891630806028843}, {"id": 1835, "seek": 441534, "start": 4423.34, "end": 4425.34, "text": " using the embedding table C.", "tokens": [50765, 1228, 264, 12240, 3584, 3199, 383, 13, 50865], "temperature": 0.0, "avg_logprob": -0.08699692709971282, "compression_ratio": 1.717741935483871, "no_speech_prob": 0.00013891630806028843}, {"id": 1836, "seek": 441534, "start": 4425.34, "end": 4427.34, "text": " Now usually", "tokens": [50865, 823, 2673, 50965], "temperature": 0.0, "avg_logprob": -0.08699692709971282, "compression_ratio": 1.717741935483871, "no_speech_prob": 0.00013891630806028843}, {"id": 1837, "seek": 441534, "start": 4427.34, "end": 4429.34, "text": " here the first dimension was the size", "tokens": [50965, 510, 264, 700, 10139, 390, 264, 2744, 51065], "temperature": 0.0, "avg_logprob": -0.08699692709971282, "compression_ratio": 1.717741935483871, "no_speech_prob": 0.00013891630806028843}, {"id": 1838, "seek": 441534, "start": 4429.34, "end": 4431.34, "text": " of the training set. But here we're only working", "tokens": [51065, 295, 264, 3097, 992, 13, 583, 510, 321, 434, 787, 1364, 51165], "temperature": 0.0, "avg_logprob": -0.08699692709971282, "compression_ratio": 1.717741935483871, "no_speech_prob": 0.00013891630806028843}, {"id": 1839, "seek": 441534, "start": 4431.34, "end": 4433.34, "text": " with a single example that we're generating", "tokens": [51165, 365, 257, 2167, 1365, 300, 321, 434, 17746, 51265], "temperature": 0.0, "avg_logprob": -0.08699692709971282, "compression_ratio": 1.717741935483871, "no_speech_prob": 0.00013891630806028843}, {"id": 1840, "seek": 441534, "start": 4433.34, "end": 4435.34, "text": " so this is just dimension 1", "tokens": [51265, 370, 341, 307, 445, 10139, 502, 51365], "temperature": 0.0, "avg_logprob": -0.08699692709971282, "compression_ratio": 1.717741935483871, "no_speech_prob": 0.00013891630806028843}, {"id": 1841, "seek": 441534, "start": 4435.34, "end": 4437.34, "text": " just for simplicity.", "tokens": [51365, 445, 337, 25632, 13, 51465], "temperature": 0.0, "avg_logprob": -0.08699692709971282, "compression_ratio": 1.717741935483871, "no_speech_prob": 0.00013891630806028843}, {"id": 1842, "seek": 441534, "start": 4437.34, "end": 4439.34, "text": " And so this", "tokens": [51465, 400, 370, 341, 51565], "temperature": 0.0, "avg_logprob": -0.08699692709971282, "compression_ratio": 1.717741935483871, "no_speech_prob": 0.00013891630806028843}, {"id": 1843, "seek": 441534, "start": 4439.34, "end": 4441.34, "text": " embedding then gets projected into", "tokens": [51565, 12240, 3584, 550, 2170, 26231, 666, 51665], "temperature": 0.0, "avg_logprob": -0.08699692709971282, "compression_ratio": 1.717741935483871, "no_speech_prob": 0.00013891630806028843}, {"id": 1844, "seek": 441534, "start": 4441.34, "end": 4443.34, "text": " the state. You get the logits.", "tokens": [51665, 264, 1785, 13, 509, 483, 264, 3565, 1208, 13, 51765], "temperature": 0.0, "avg_logprob": -0.08699692709971282, "compression_ratio": 1.717741935483871, "no_speech_prob": 0.00013891630806028843}, {"id": 1845, "seek": 441534, "start": 4443.34, "end": 4445.34, "text": " Now we calculate the probabilities.", "tokens": [51765, 823, 321, 8873, 264, 33783, 13, 51865], "temperature": 0.0, "avg_logprob": -0.08699692709971282, "compression_ratio": 1.717741935483871, "no_speech_prob": 0.00013891630806028843}, {"id": 1846, "seek": 444534, "start": 4445.34, "end": 4447.34, "text": " For that you can use f.softmax", "tokens": [50365, 1171, 300, 291, 393, 764, 283, 13, 13908, 41167, 50465], "temperature": 0.0, "avg_logprob": -0.09667553621179917, "compression_ratio": 1.724907063197026, "no_speech_prob": 0.00024055715766735375}, {"id": 1847, "seek": 444534, "start": 4447.34, "end": 4449.34, "text": " of logits", "tokens": [50465, 295, 3565, 1208, 50565], "temperature": 0.0, "avg_logprob": -0.09667553621179917, "compression_ratio": 1.724907063197026, "no_speech_prob": 0.00024055715766735375}, {"id": 1848, "seek": 444534, "start": 4449.34, "end": 4451.34, "text": " and that just basically", "tokens": [50565, 293, 300, 445, 1936, 50665], "temperature": 0.0, "avg_logprob": -0.09667553621179917, "compression_ratio": 1.724907063197026, "no_speech_prob": 0.00024055715766735375}, {"id": 1849, "seek": 444534, "start": 4451.34, "end": 4453.34, "text": " exponentiates the logits and makes them sum to 1.", "tokens": [50665, 12680, 23012, 1024, 264, 3565, 1208, 293, 1669, 552, 2408, 281, 502, 13, 50765], "temperature": 0.0, "avg_logprob": -0.09667553621179917, "compression_ratio": 1.724907063197026, "no_speech_prob": 0.00024055715766735375}, {"id": 1850, "seek": 444534, "start": 4453.34, "end": 4455.34, "text": " And similar to cross entropy", "tokens": [50765, 400, 2531, 281, 3278, 30867, 50865], "temperature": 0.0, "avg_logprob": -0.09667553621179917, "compression_ratio": 1.724907063197026, "no_speech_prob": 0.00024055715766735375}, {"id": 1851, "seek": 444534, "start": 4455.34, "end": 4457.34, "text": " it is careful that there's no overflows.", "tokens": [50865, 309, 307, 5026, 300, 456, 311, 572, 670, 33229, 13, 50965], "temperature": 0.0, "avg_logprob": -0.09667553621179917, "compression_ratio": 1.724907063197026, "no_speech_prob": 0.00024055715766735375}, {"id": 1852, "seek": 444534, "start": 4457.34, "end": 4459.34, "text": " Once we have the probabilities", "tokens": [50965, 3443, 321, 362, 264, 33783, 51065], "temperature": 0.0, "avg_logprob": -0.09667553621179917, "compression_ratio": 1.724907063197026, "no_speech_prob": 0.00024055715766735375}, {"id": 1853, "seek": 444534, "start": 4459.34, "end": 4461.34, "text": " we sample from them using", "tokens": [51065, 321, 6889, 490, 552, 1228, 51165], "temperature": 0.0, "avg_logprob": -0.09667553621179917, "compression_ratio": 1.724907063197026, "no_speech_prob": 0.00024055715766735375}, {"id": 1854, "seek": 444534, "start": 4461.34, "end": 4463.34, "text": " torsh.multinomial to get our next index", "tokens": [51165, 3930, 2716, 13, 76, 723, 259, 47429, 281, 483, 527, 958, 8186, 51265], "temperature": 0.0, "avg_logprob": -0.09667553621179917, "compression_ratio": 1.724907063197026, "no_speech_prob": 0.00024055715766735375}, {"id": 1855, "seek": 444534, "start": 4463.34, "end": 4465.34, "text": " and then we shift the context window", "tokens": [51265, 293, 550, 321, 5513, 264, 4319, 4910, 51365], "temperature": 0.0, "avg_logprob": -0.09667553621179917, "compression_ratio": 1.724907063197026, "no_speech_prob": 0.00024055715766735375}, {"id": 1856, "seek": 444534, "start": 4465.34, "end": 4467.34, "text": " to append index and record it.", "tokens": [51365, 281, 34116, 8186, 293, 2136, 309, 13, 51465], "temperature": 0.0, "avg_logprob": -0.09667553621179917, "compression_ratio": 1.724907063197026, "no_speech_prob": 0.00024055715766735375}, {"id": 1857, "seek": 444534, "start": 4467.34, "end": 4469.34, "text": " And then we can just", "tokens": [51465, 400, 550, 321, 393, 445, 51565], "temperature": 0.0, "avg_logprob": -0.09667553621179917, "compression_ratio": 1.724907063197026, "no_speech_prob": 0.00024055715766735375}, {"id": 1858, "seek": 444534, "start": 4469.34, "end": 4471.34, "text": " decode all the integers to strings", "tokens": [51565, 979, 1429, 439, 264, 41674, 281, 13985, 51665], "temperature": 0.0, "avg_logprob": -0.09667553621179917, "compression_ratio": 1.724907063197026, "no_speech_prob": 0.00024055715766735375}, {"id": 1859, "seek": 444534, "start": 4471.34, "end": 4473.34, "text": " and print them out.", "tokens": [51665, 293, 4482, 552, 484, 13, 51765], "temperature": 0.0, "avg_logprob": -0.09667553621179917, "compression_ratio": 1.724907063197026, "no_speech_prob": 0.00024055715766735375}, {"id": 1860, "seek": 444534, "start": 4473.34, "end": 4475.34, "text": " And so these are some example samples.", "tokens": [51765, 400, 370, 613, 366, 512, 1365, 10938, 13, 51865], "temperature": 0.0, "avg_logprob": -0.09667553621179917, "compression_ratio": 1.724907063197026, "no_speech_prob": 0.00024055715766735375}, {"id": 1861, "seek": 447534, "start": 4475.34, "end": 4477.34, "text": " And you can see that the model now", "tokens": [50365, 400, 291, 393, 536, 300, 264, 2316, 586, 50465], "temperature": 0.0, "avg_logprob": -0.12319141544707835, "compression_ratio": 1.7, "no_speech_prob": 0.0003875136317219585}, {"id": 1862, "seek": 447534, "start": 4477.34, "end": 4479.34, "text": " works much better.", "tokens": [50465, 1985, 709, 1101, 13, 50565], "temperature": 0.0, "avg_logprob": -0.12319141544707835, "compression_ratio": 1.7, "no_speech_prob": 0.0003875136317219585}, {"id": 1863, "seek": 447534, "start": 4479.34, "end": 4481.34, "text": " So the words here are much more word-like", "tokens": [50565, 407, 264, 2283, 510, 366, 709, 544, 1349, 12, 4092, 50665], "temperature": 0.0, "avg_logprob": -0.12319141544707835, "compression_ratio": 1.7, "no_speech_prob": 0.0003875136317219585}, {"id": 1864, "seek": 447534, "start": 4481.34, "end": 4483.34, "text": " or name-like. So we have things like", "tokens": [50665, 420, 1315, 12, 4092, 13, 407, 321, 362, 721, 411, 50765], "temperature": 0.0, "avg_logprob": -0.12319141544707835, "compression_ratio": 1.7, "no_speech_prob": 0.0003875136317219585}, {"id": 1865, "seek": 447534, "start": 4483.34, "end": 4485.34, "text": " ham,", "tokens": [50765, 7852, 11, 50865], "temperature": 0.0, "avg_logprob": -0.12319141544707835, "compression_ratio": 1.7, "no_speech_prob": 0.0003875136317219585}, {"id": 1866, "seek": 447534, "start": 4485.34, "end": 4487.34, "text": " joes,", "tokens": [50865, 1488, 279, 11, 50965], "temperature": 0.0, "avg_logprob": -0.12319141544707835, "compression_ratio": 1.7, "no_speech_prob": 0.0003875136317219585}, {"id": 1867, "seek": 447534, "start": 4487.34, "end": 4489.34, "text": " lila.", "tokens": [50965, 375, 875, 13, 51065], "temperature": 0.0, "avg_logprob": -0.12319141544707835, "compression_ratio": 1.7, "no_speech_prob": 0.0003875136317219585}, {"id": 1868, "seek": 447534, "start": 4489.34, "end": 4491.34, "text": " It's starting to sound a little bit more name-like.", "tokens": [51065, 467, 311, 2891, 281, 1626, 257, 707, 857, 544, 1315, 12, 4092, 13, 51165], "temperature": 0.0, "avg_logprob": -0.12319141544707835, "compression_ratio": 1.7, "no_speech_prob": 0.0003875136317219585}, {"id": 1869, "seek": 447534, "start": 4491.34, "end": 4493.34, "text": " So we're definitely making progress", "tokens": [51165, 407, 321, 434, 2138, 1455, 4205, 51265], "temperature": 0.0, "avg_logprob": -0.12319141544707835, "compression_ratio": 1.7, "no_speech_prob": 0.0003875136317219585}, {"id": 1870, "seek": 447534, "start": 4493.34, "end": 4495.34, "text": " but we can still improve on this model quite a lot.", "tokens": [51265, 457, 321, 393, 920, 3470, 322, 341, 2316, 1596, 257, 688, 13, 51365], "temperature": 0.0, "avg_logprob": -0.12319141544707835, "compression_ratio": 1.7, "no_speech_prob": 0.0003875136317219585}, {"id": 1871, "seek": 447534, "start": 4495.34, "end": 4497.34, "text": " Okay sorry, there's some bonus content.", "tokens": [51365, 1033, 2597, 11, 456, 311, 512, 10882, 2701, 13, 51465], "temperature": 0.0, "avg_logprob": -0.12319141544707835, "compression_ratio": 1.7, "no_speech_prob": 0.0003875136317219585}, {"id": 1872, "seek": 447534, "start": 4497.34, "end": 4499.34, "text": " I wanted to mention that", "tokens": [51465, 286, 1415, 281, 2152, 300, 51565], "temperature": 0.0, "avg_logprob": -0.12319141544707835, "compression_ratio": 1.7, "no_speech_prob": 0.0003875136317219585}, {"id": 1873, "seek": 447534, "start": 4499.34, "end": 4501.34, "text": " I want to make these notebooks more accessible.", "tokens": [51565, 286, 528, 281, 652, 613, 43782, 544, 9515, 13, 51665], "temperature": 0.0, "avg_logprob": -0.12319141544707835, "compression_ratio": 1.7, "no_speech_prob": 0.0003875136317219585}, {"id": 1874, "seek": 447534, "start": 4501.34, "end": 4503.34, "text": " And so I don't want you to have to", "tokens": [51665, 400, 370, 286, 500, 380, 528, 291, 281, 362, 281, 51765], "temperature": 0.0, "avg_logprob": -0.12319141544707835, "compression_ratio": 1.7, "no_speech_prob": 0.0003875136317219585}, {"id": 1875, "seek": 447534, "start": 4503.34, "end": 4505.34, "text": " install Jupyter notebooks and torsh and everything else", "tokens": [51765, 3625, 22125, 88, 391, 43782, 293, 3930, 2716, 293, 1203, 1646, 51865], "temperature": 0.0, "avg_logprob": -0.12319141544707835, "compression_ratio": 1.7, "no_speech_prob": 0.0003875136317219585}, {"id": 1876, "seek": 450534, "start": 4505.34, "end": 4507.34, "text": " so I will be sharing a link", "tokens": [50365, 370, 286, 486, 312, 5414, 257, 2113, 50465], "temperature": 0.0, "avg_logprob": -0.06814999712838067, "compression_ratio": 1.7986111111111112, "no_speech_prob": 0.0005362994270399213}, {"id": 1877, "seek": 450534, "start": 4507.34, "end": 4509.34, "text": " to a Google Colab", "tokens": [50465, 281, 257, 3329, 4004, 455, 50565], "temperature": 0.0, "avg_logprob": -0.06814999712838067, "compression_ratio": 1.7986111111111112, "no_speech_prob": 0.0005362994270399213}, {"id": 1878, "seek": 450534, "start": 4509.34, "end": 4511.34, "text": " and the Google Colab will look like a notebook", "tokens": [50565, 293, 264, 3329, 4004, 455, 486, 574, 411, 257, 21060, 50665], "temperature": 0.0, "avg_logprob": -0.06814999712838067, "compression_ratio": 1.7986111111111112, "no_speech_prob": 0.0005362994270399213}, {"id": 1879, "seek": 450534, "start": 4511.34, "end": 4513.34, "text": " in your browser.", "tokens": [50665, 294, 428, 11185, 13, 50765], "temperature": 0.0, "avg_logprob": -0.06814999712838067, "compression_ratio": 1.7986111111111112, "no_speech_prob": 0.0005362994270399213}, {"id": 1880, "seek": 450534, "start": 4513.34, "end": 4515.34, "text": " And you can just go to the URL", "tokens": [50765, 400, 291, 393, 445, 352, 281, 264, 12905, 50865], "temperature": 0.0, "avg_logprob": -0.06814999712838067, "compression_ratio": 1.7986111111111112, "no_speech_prob": 0.0005362994270399213}, {"id": 1881, "seek": 450534, "start": 4515.34, "end": 4517.34, "text": " and you'll be able to execute all of the code that you saw", "tokens": [50865, 293, 291, 603, 312, 1075, 281, 14483, 439, 295, 264, 3089, 300, 291, 1866, 50965], "temperature": 0.0, "avg_logprob": -0.06814999712838067, "compression_ratio": 1.7986111111111112, "no_speech_prob": 0.0005362994270399213}, {"id": 1882, "seek": 450534, "start": 4517.34, "end": 4519.34, "text": " in the Google Colab.", "tokens": [50965, 294, 264, 3329, 4004, 455, 13, 51065], "temperature": 0.0, "avg_logprob": -0.06814999712838067, "compression_ratio": 1.7986111111111112, "no_speech_prob": 0.0005362994270399213}, {"id": 1883, "seek": 450534, "start": 4519.34, "end": 4521.34, "text": " And so this is me executing the code", "tokens": [51065, 400, 370, 341, 307, 385, 32368, 264, 3089, 51165], "temperature": 0.0, "avg_logprob": -0.06814999712838067, "compression_ratio": 1.7986111111111112, "no_speech_prob": 0.0005362994270399213}, {"id": 1884, "seek": 450534, "start": 4521.34, "end": 4523.34, "text": " in this lecture and I shortened it a little bit.", "tokens": [51165, 294, 341, 7991, 293, 286, 45183, 309, 257, 707, 857, 13, 51265], "temperature": 0.0, "avg_logprob": -0.06814999712838067, "compression_ratio": 1.7986111111111112, "no_speech_prob": 0.0005362994270399213}, {"id": 1885, "seek": 450534, "start": 4523.34, "end": 4525.34, "text": " But basically you're able to train", "tokens": [51265, 583, 1936, 291, 434, 1075, 281, 3847, 51365], "temperature": 0.0, "avg_logprob": -0.06814999712838067, "compression_ratio": 1.7986111111111112, "no_speech_prob": 0.0005362994270399213}, {"id": 1886, "seek": 450534, "start": 4525.34, "end": 4527.34, "text": " the exact same network and then", "tokens": [51365, 264, 1900, 912, 3209, 293, 550, 51465], "temperature": 0.0, "avg_logprob": -0.06814999712838067, "compression_ratio": 1.7986111111111112, "no_speech_prob": 0.0005362994270399213}, {"id": 1887, "seek": 450534, "start": 4527.34, "end": 4529.34, "text": " plot and sample from the model", "tokens": [51465, 7542, 293, 6889, 490, 264, 2316, 51565], "temperature": 0.0, "avg_logprob": -0.06814999712838067, "compression_ratio": 1.7986111111111112, "no_speech_prob": 0.0005362994270399213}, {"id": 1888, "seek": 450534, "start": 4529.34, "end": 4531.34, "text": " and everything is ready for you to tinker with the numbers", "tokens": [51565, 293, 1203, 307, 1919, 337, 291, 281, 256, 40467, 365, 264, 3547, 51665], "temperature": 0.0, "avg_logprob": -0.06814999712838067, "compression_ratio": 1.7986111111111112, "no_speech_prob": 0.0005362994270399213}, {"id": 1889, "seek": 450534, "start": 4531.34, "end": 4533.34, "text": " right there in your browser", "tokens": [51665, 558, 456, 294, 428, 11185, 51765], "temperature": 0.0, "avg_logprob": -0.06814999712838067, "compression_ratio": 1.7986111111111112, "no_speech_prob": 0.0005362994270399213}, {"id": 1890, "seek": 450534, "start": 4533.34, "end": 4535.34, "text": " no installation necessary.", "tokens": [51765, 572, 13260, 4818, 13, 51865], "temperature": 0.0, "avg_logprob": -0.06814999712838067, "compression_ratio": 1.7986111111111112, "no_speech_prob": 0.0005362994270399213}, {"id": 1891, "seek": 453534, "start": 4535.34, "end": 4537.34, "text": " So I just wanted to point that out", "tokens": [50365, 407, 286, 445, 1415, 281, 935, 300, 484, 50465], "temperature": 0.0, "avg_logprob": -0.020287299156188966, "compression_ratio": 1.1265822784810127, "no_speech_prob": 0.004055390600115061}, {"id": 1892, "seek": 453534, "start": 4537.34, "end": 4539.34, "text": " and the link to this will be in the video description.", "tokens": [50465, 293, 264, 2113, 281, 341, 486, 312, 294, 264, 960, 3855, 13, 50565], "temperature": 0.0, "avg_logprob": -0.020287299156188966, "compression_ratio": 1.1265822784810127, "no_speech_prob": 0.004055390600115061}], "language": "en"}